
MainUnit.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001cf6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000003a2  00802000  00001cf6  00001d8a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000011f8  008023a2  008023a2  0000212c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000212c  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000840  00000000  00000000  00002160  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000a64c  00000000  00000000  000029a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001d43  00000000  00000000  0000cfec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000464f  00000000  00000000  0000ed2f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000016c0  00000000  00000000  00013380  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00002912  00000000  00000000  00014a40  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000634f  00000000  00000000  00017352  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000708  00000000  00000000  0001d6a1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	f1 c1       	rjmp	.+994    	; 0x3e4 <__ctors_end>
       2:	00 00       	nop
       4:	f7 c0       	rjmp	.+494    	; 0x1f4 <__vector_1>
       6:	00 00       	nop
       8:	f7 c0       	rjmp	.+494    	; 0x1f8 <__vector_2>
       a:	00 00       	nop
       c:	f7 c0       	rjmp	.+494    	; 0x1fc <__vector_3>
       e:	00 00       	nop
      10:	f7 c0       	rjmp	.+494    	; 0x200 <__vector_4>
      12:	00 00       	nop
      14:	f7 c0       	rjmp	.+494    	; 0x204 <__vector_5>
      16:	00 00       	nop
      18:	f7 c0       	rjmp	.+494    	; 0x208 <__vector_6>
      1a:	00 00       	nop
      1c:	f7 c0       	rjmp	.+494    	; 0x20c <__vector_7>
      1e:	00 00       	nop
      20:	f7 c0       	rjmp	.+494    	; 0x210 <__vector_8>
      22:	00 00       	nop
      24:	f7 c0       	rjmp	.+494    	; 0x214 <__vector_9>
      26:	00 00       	nop
      28:	f7 c0       	rjmp	.+494    	; 0x218 <__vector_10>
      2a:	00 00       	nop
      2c:	f7 c0       	rjmp	.+494    	; 0x21c <__vector_11>
      2e:	00 00       	nop
      30:	f7 c0       	rjmp	.+494    	; 0x220 <__vector_12>
      32:	00 00       	nop
      34:	f7 c0       	rjmp	.+494    	; 0x224 <__vector_13>
      36:	00 00       	nop
      38:	f7 c0       	rjmp	.+494    	; 0x228 <__vector_14>
      3a:	00 00       	nop
      3c:	f7 c0       	rjmp	.+494    	; 0x22c <__vector_15>
      3e:	00 00       	nop
      40:	f7 c0       	rjmp	.+494    	; 0x230 <__vector_16>
      42:	00 00       	nop
      44:	f7 c0       	rjmp	.+494    	; 0x234 <__vector_17>
      46:	00 00       	nop
      48:	f7 c0       	rjmp	.+494    	; 0x238 <__vector_18>
      4a:	00 00       	nop
      4c:	f7 c0       	rjmp	.+494    	; 0x23c <__vector_19>
      4e:	00 00       	nop
      50:	f7 c0       	rjmp	.+494    	; 0x240 <__vector_20>
      52:	00 00       	nop
      54:	f7 c0       	rjmp	.+494    	; 0x244 <__vector_21>
      56:	00 00       	nop
      58:	f7 c0       	rjmp	.+494    	; 0x248 <__vector_22>
      5a:	00 00       	nop
      5c:	f7 c0       	rjmp	.+494    	; 0x24c <__vector_23>
      5e:	00 00       	nop
      60:	f7 c0       	rjmp	.+494    	; 0x250 <__vector_24>
      62:	00 00       	nop
      64:	f7 c0       	rjmp	.+494    	; 0x254 <__vector_25>
      66:	00 00       	nop
      68:	f7 c0       	rjmp	.+494    	; 0x258 <__vector_26>
      6a:	00 00       	nop
      6c:	f7 c0       	rjmp	.+494    	; 0x25c <__vector_27>
      6e:	00 00       	nop
      70:	f7 c0       	rjmp	.+494    	; 0x260 <__vector_28>
      72:	00 00       	nop
      74:	f7 c0       	rjmp	.+494    	; 0x264 <__vector_29>
      76:	00 00       	nop
      78:	f7 c0       	rjmp	.+494    	; 0x268 <__vector_30>
      7a:	00 00       	nop
      7c:	f7 c0       	rjmp	.+494    	; 0x26c <__vector_31>
      7e:	00 00       	nop
      80:	f7 c0       	rjmp	.+494    	; 0x270 <__vector_32>
      82:	00 00       	nop
      84:	f7 c0       	rjmp	.+494    	; 0x274 <__vector_33>
      86:	00 00       	nop
      88:	f7 c0       	rjmp	.+494    	; 0x278 <__vector_34>
      8a:	00 00       	nop
      8c:	f7 c0       	rjmp	.+494    	; 0x27c <__vector_35>
      8e:	00 00       	nop
      90:	f7 c0       	rjmp	.+494    	; 0x280 <__vector_36>
      92:	00 00       	nop
      94:	f7 c0       	rjmp	.+494    	; 0x284 <__vector_37>
      96:	00 00       	nop
      98:	f7 c0       	rjmp	.+494    	; 0x288 <__vector_38>
      9a:	00 00       	nop
      9c:	f7 c0       	rjmp	.+494    	; 0x28c <__vector_39>
      9e:	00 00       	nop
      a0:	f7 c0       	rjmp	.+494    	; 0x290 <__vector_40>
      a2:	00 00       	nop
      a4:	f7 c0       	rjmp	.+494    	; 0x294 <__vector_41>
      a6:	00 00       	nop
      a8:	f7 c0       	rjmp	.+494    	; 0x298 <__vector_42>
      aa:	00 00       	nop
      ac:	f7 c0       	rjmp	.+494    	; 0x29c <__vector_43>
      ae:	00 00       	nop
      b0:	f7 c0       	rjmp	.+494    	; 0x2a0 <__vector_44>
      b2:	00 00       	nop
      b4:	f7 c0       	rjmp	.+494    	; 0x2a4 <__vector_45>
      b6:	00 00       	nop
      b8:	f7 c0       	rjmp	.+494    	; 0x2a8 <__vector_46>
      ba:	00 00       	nop
      bc:	f7 c0       	rjmp	.+494    	; 0x2ac <__vector_47>
      be:	00 00       	nop
      c0:	f7 c0       	rjmp	.+494    	; 0x2b0 <__vector_48>
      c2:	00 00       	nop
      c4:	f7 c0       	rjmp	.+494    	; 0x2b4 <__vector_49>
      c6:	00 00       	nop
      c8:	f7 c0       	rjmp	.+494    	; 0x2b8 <__vector_50>
      ca:	00 00       	nop
      cc:	f7 c0       	rjmp	.+494    	; 0x2bc <__vector_51>
      ce:	00 00       	nop
      d0:	f7 c0       	rjmp	.+494    	; 0x2c0 <__vector_52>
      d2:	00 00       	nop
      d4:	f7 c0       	rjmp	.+494    	; 0x2c4 <__vector_53>
      d6:	00 00       	nop
      d8:	f7 c0       	rjmp	.+494    	; 0x2c8 <__vector_54>
      da:	00 00       	nop
      dc:	f7 c0       	rjmp	.+494    	; 0x2cc <__vector_55>
      de:	00 00       	nop
      e0:	f7 c0       	rjmp	.+494    	; 0x2d0 <__vector_56>
      e2:	00 00       	nop
      e4:	f7 c0       	rjmp	.+494    	; 0x2d4 <__vector_57>
      e6:	00 00       	nop
      e8:	f7 c0       	rjmp	.+494    	; 0x2d8 <__vector_58>
      ea:	00 00       	nop
      ec:	f7 c0       	rjmp	.+494    	; 0x2dc <__vector_59>
      ee:	00 00       	nop
      f0:	f7 c0       	rjmp	.+494    	; 0x2e0 <__vector_60>
      f2:	00 00       	nop
      f4:	f7 c0       	rjmp	.+494    	; 0x2e4 <__vector_61>
      f6:	00 00       	nop
      f8:	f7 c0       	rjmp	.+494    	; 0x2e8 <__vector_62>
      fa:	00 00       	nop
      fc:	f7 c0       	rjmp	.+494    	; 0x2ec <__vector_63>
      fe:	00 00       	nop
     100:	f7 c0       	rjmp	.+494    	; 0x2f0 <__vector_64>
     102:	00 00       	nop
     104:	f7 c0       	rjmp	.+494    	; 0x2f4 <__vector_65>
     106:	00 00       	nop
     108:	f7 c0       	rjmp	.+494    	; 0x2f8 <__vector_66>
     10a:	00 00       	nop
     10c:	f7 c0       	rjmp	.+494    	; 0x2fc <__vector_67>
     10e:	00 00       	nop
     110:	f7 c0       	rjmp	.+494    	; 0x300 <__vector_68>
     112:	00 00       	nop
     114:	f7 c0       	rjmp	.+494    	; 0x304 <__vector_69>
     116:	00 00       	nop
     118:	f7 c0       	rjmp	.+494    	; 0x308 <__vector_70>
     11a:	00 00       	nop
     11c:	f7 c0       	rjmp	.+494    	; 0x30c <__vector_71>
     11e:	00 00       	nop
     120:	f7 c0       	rjmp	.+494    	; 0x310 <__vector_72>
     122:	00 00       	nop
     124:	f7 c0       	rjmp	.+494    	; 0x314 <__vector_73>
     126:	00 00       	nop
     128:	f7 c0       	rjmp	.+494    	; 0x318 <__vector_74>
     12a:	00 00       	nop
     12c:	f7 c0       	rjmp	.+494    	; 0x31c <__vector_75>
     12e:	00 00       	nop
     130:	f7 c0       	rjmp	.+494    	; 0x320 <__vector_76>
     132:	00 00       	nop
     134:	f7 c0       	rjmp	.+494    	; 0x324 <__vector_77>
     136:	00 00       	nop
     138:	f7 c0       	rjmp	.+494    	; 0x328 <__vector_78>
     13a:	00 00       	nop
     13c:	f7 c0       	rjmp	.+494    	; 0x32c <__vector_79>
     13e:	00 00       	nop
     140:	f7 c0       	rjmp	.+494    	; 0x330 <__vector_80>
     142:	00 00       	nop
     144:	f7 c0       	rjmp	.+494    	; 0x334 <__vector_81>
     146:	00 00       	nop
     148:	f7 c0       	rjmp	.+494    	; 0x338 <__vector_82>
     14a:	00 00       	nop
     14c:	f7 c0       	rjmp	.+494    	; 0x33c <__vector_83>
     14e:	00 00       	nop
     150:	f7 c0       	rjmp	.+494    	; 0x340 <__vector_84>
     152:	00 00       	nop
     154:	f7 c0       	rjmp	.+494    	; 0x344 <__vector_85>
     156:	00 00       	nop
     158:	f7 c0       	rjmp	.+494    	; 0x348 <__vector_86>
     15a:	00 00       	nop
     15c:	f7 c0       	rjmp	.+494    	; 0x34c <__vector_87>
     15e:	00 00       	nop
     160:	f7 c0       	rjmp	.+494    	; 0x350 <__vector_88>
     162:	00 00       	nop
     164:	f7 c0       	rjmp	.+494    	; 0x354 <__vector_89>
     166:	00 00       	nop
     168:	f7 c0       	rjmp	.+494    	; 0x358 <__vector_90>
     16a:	00 00       	nop
     16c:	f7 c0       	rjmp	.+494    	; 0x35c <__vector_91>
     16e:	00 00       	nop
     170:	f7 c0       	rjmp	.+494    	; 0x360 <__vector_92>
     172:	00 00       	nop
     174:	f7 c0       	rjmp	.+494    	; 0x364 <__vector_93>
     176:	00 00       	nop
     178:	f7 c0       	rjmp	.+494    	; 0x368 <__vector_94>
     17a:	00 00       	nop
     17c:	f7 c0       	rjmp	.+494    	; 0x36c <__vector_95>
     17e:	00 00       	nop
     180:	f7 c0       	rjmp	.+494    	; 0x370 <__vector_96>
     182:	00 00       	nop
     184:	f7 c0       	rjmp	.+494    	; 0x374 <__vector_97>
     186:	00 00       	nop
     188:	f7 c0       	rjmp	.+494    	; 0x378 <__vector_98>
     18a:	00 00       	nop
     18c:	f7 c0       	rjmp	.+494    	; 0x37c <__vector_99>
     18e:	00 00       	nop
     190:	f7 c0       	rjmp	.+494    	; 0x380 <__vector_100>
     192:	00 00       	nop
     194:	f7 c0       	rjmp	.+494    	; 0x384 <__vector_101>
     196:	00 00       	nop
     198:	f7 c0       	rjmp	.+494    	; 0x388 <__vector_102>
     19a:	00 00       	nop
     19c:	f7 c0       	rjmp	.+494    	; 0x38c <__vector_103>
     19e:	00 00       	nop
     1a0:	f7 c0       	rjmp	.+494    	; 0x390 <__vector_104>
     1a2:	00 00       	nop
     1a4:	f7 c0       	rjmp	.+494    	; 0x394 <__vector_105>
     1a6:	00 00       	nop
     1a8:	f7 c0       	rjmp	.+494    	; 0x398 <__vector_106>
     1aa:	00 00       	nop
     1ac:	f7 c0       	rjmp	.+494    	; 0x39c <__vector_107>
     1ae:	00 00       	nop
     1b0:	f7 c0       	rjmp	.+494    	; 0x3a0 <__vector_108>
     1b2:	00 00       	nop
     1b4:	f7 c0       	rjmp	.+494    	; 0x3a4 <__vector_109>
     1b6:	00 00       	nop
     1b8:	f7 c0       	rjmp	.+494    	; 0x3a8 <__vector_110>
     1ba:	00 00       	nop
     1bc:	f7 c0       	rjmp	.+494    	; 0x3ac <__vector_111>
     1be:	00 00       	nop
     1c0:	f7 c0       	rjmp	.+494    	; 0x3b0 <__vector_112>
     1c2:	00 00       	nop
     1c4:	f7 c0       	rjmp	.+494    	; 0x3b4 <__vector_113>
     1c6:	00 00       	nop
     1c8:	f7 c0       	rjmp	.+494    	; 0x3b8 <__vector_114>
     1ca:	00 00       	nop
     1cc:	f7 c0       	rjmp	.+494    	; 0x3bc <__vector_115>
     1ce:	00 00       	nop
     1d0:	f7 c0       	rjmp	.+494    	; 0x3c0 <__vector_116>
     1d2:	00 00       	nop
     1d4:	f7 c0       	rjmp	.+494    	; 0x3c4 <__vector_117>
     1d6:	00 00       	nop
     1d8:	f7 c0       	rjmp	.+494    	; 0x3c8 <__vector_118>
     1da:	00 00       	nop
     1dc:	f7 c0       	rjmp	.+494    	; 0x3cc <__vector_119>
     1de:	00 00       	nop
     1e0:	f7 c0       	rjmp	.+494    	; 0x3d0 <__vector_120>
     1e2:	00 00       	nop
     1e4:	f7 c0       	rjmp	.+494    	; 0x3d4 <__vector_121>
     1e6:	00 00       	nop
     1e8:	f7 c0       	rjmp	.+494    	; 0x3d8 <__vector_122>
     1ea:	00 00       	nop
     1ec:	f7 c0       	rjmp	.+494    	; 0x3dc <__vector_123>
     1ee:	00 00       	nop
     1f0:	f7 c0       	rjmp	.+494    	; 0x3e0 <__vector_124>
	...

000001f4 <__vector_1>:
     1f4:	f7 c0       	rjmp	.+494    	; 0x3e4 <__ctors_end>
	...

000001f8 <__vector_2>:
     1f8:	f5 c0       	rjmp	.+490    	; 0x3e4 <__ctors_end>
	...

000001fc <__vector_3>:
     1fc:	f3 c0       	rjmp	.+486    	; 0x3e4 <__ctors_end>
	...

00000200 <__vector_4>:
     200:	f1 c0       	rjmp	.+482    	; 0x3e4 <__ctors_end>
	...

00000204 <__vector_5>:
     204:	ef c0       	rjmp	.+478    	; 0x3e4 <__ctors_end>
	...

00000208 <__vector_6>:
     208:	ed c0       	rjmp	.+474    	; 0x3e4 <__ctors_end>
	...

0000020c <__vector_7>:
     20c:	eb c0       	rjmp	.+470    	; 0x3e4 <__ctors_end>
	...

00000210 <__vector_8>:
     210:	e9 c0       	rjmp	.+466    	; 0x3e4 <__ctors_end>
	...

00000214 <__vector_9>:
     214:	e7 c0       	rjmp	.+462    	; 0x3e4 <__ctors_end>
	...

00000218 <__vector_10>:
     218:	e5 c0       	rjmp	.+458    	; 0x3e4 <__ctors_end>
	...

0000021c <__vector_11>:
     21c:	e3 c0       	rjmp	.+454    	; 0x3e4 <__ctors_end>
	...

00000220 <__vector_12>:
     220:	e1 c0       	rjmp	.+450    	; 0x3e4 <__ctors_end>
	...

00000224 <__vector_13>:
     224:	df c0       	rjmp	.+446    	; 0x3e4 <__ctors_end>
	...

00000228 <__vector_14>:
     228:	dd c0       	rjmp	.+442    	; 0x3e4 <__ctors_end>
	...

0000022c <__vector_15>:
     22c:	db c0       	rjmp	.+438    	; 0x3e4 <__ctors_end>
	...

00000230 <__vector_16>:
     230:	d9 c0       	rjmp	.+434    	; 0x3e4 <__ctors_end>
	...

00000234 <__vector_17>:
     234:	d7 c0       	rjmp	.+430    	; 0x3e4 <__ctors_end>
	...

00000238 <__vector_18>:
     238:	d5 c0       	rjmp	.+426    	; 0x3e4 <__ctors_end>
	...

0000023c <__vector_19>:
     23c:	d3 c0       	rjmp	.+422    	; 0x3e4 <__ctors_end>
	...

00000240 <__vector_20>:
     240:	f6 c0       	rjmp	.+492    	; 0x42e <TickISR>
	...

00000244 <__vector_21>:
     244:	cf c0       	rjmp	.+414    	; 0x3e4 <__ctors_end>
	...

00000248 <__vector_22>:
     248:	cd c0       	rjmp	.+410    	; 0x3e4 <__ctors_end>
	...

0000024c <__vector_23>:
     24c:	cb c0       	rjmp	.+406    	; 0x3e4 <__ctors_end>
	...

00000250 <__vector_24>:
     250:	c9 c0       	rjmp	.+402    	; 0x3e4 <__ctors_end>
	...

00000254 <__vector_25>:
     254:	c7 c0       	rjmp	.+398    	; 0x3e4 <__ctors_end>
	...

00000258 <__vector_26>:
     258:	c5 c0       	rjmp	.+394    	; 0x3e4 <__ctors_end>
	...

0000025c <__vector_27>:
     25c:	c3 c0       	rjmp	.+390    	; 0x3e4 <__ctors_end>
	...

00000260 <__vector_28>:
     260:	c1 c0       	rjmp	.+386    	; 0x3e4 <__ctors_end>
	...

00000264 <__vector_29>:
     264:	bf c0       	rjmp	.+382    	; 0x3e4 <__ctors_end>
	...

00000268 <__vector_30>:
     268:	bd c0       	rjmp	.+378    	; 0x3e4 <__ctors_end>
	...

0000026c <__vector_31>:
     26c:	bb c0       	rjmp	.+374    	; 0x3e4 <__ctors_end>
	...

00000270 <__vector_32>:
     270:	b9 c0       	rjmp	.+370    	; 0x3e4 <__ctors_end>
	...

00000274 <__vector_33>:
     274:	b7 c0       	rjmp	.+366    	; 0x3e4 <__ctors_end>
	...

00000278 <__vector_34>:
     278:	b5 c0       	rjmp	.+362    	; 0x3e4 <__ctors_end>
	...

0000027c <__vector_35>:
     27c:	24 c6       	rjmp	.+3144   	; 0xec6 <portb_int>
	...

00000280 <__vector_36>:
     280:	b1 c0       	rjmp	.+354    	; 0x3e4 <__ctors_end>
	...

00000284 <__vector_37>:
     284:	af c0       	rjmp	.+350    	; 0x3e4 <__ctors_end>
	...

00000288 <__vector_38>:
     288:	ad c0       	rjmp	.+346    	; 0x3e4 <__ctors_end>
	...

0000028c <__vector_39>:
     28c:	ab c0       	rjmp	.+342    	; 0x3e4 <__ctors_end>
	...

00000290 <__vector_40>:
     290:	a9 c0       	rjmp	.+338    	; 0x3e4 <__ctors_end>
	...

00000294 <__vector_41>:
     294:	a7 c0       	rjmp	.+334    	; 0x3e4 <__ctors_end>
	...

00000298 <__vector_42>:
     298:	a5 c0       	rjmp	.+330    	; 0x3e4 <__ctors_end>
	...

0000029c <__vector_43>:
     29c:	a3 c0       	rjmp	.+326    	; 0x3e4 <__ctors_end>
	...

000002a0 <__vector_44>:
     2a0:	a1 c0       	rjmp	.+322    	; 0x3e4 <__ctors_end>
	...

000002a4 <__vector_45>:
     2a4:	9f c0       	rjmp	.+318    	; 0x3e4 <__ctors_end>
	...

000002a8 <__vector_46>:
     2a8:	9d c0       	rjmp	.+314    	; 0x3e4 <__ctors_end>
	...

000002ac <__vector_47>:
     2ac:	9b c0       	rjmp	.+310    	; 0x3e4 <__ctors_end>
	...

000002b0 <__vector_48>:
     2b0:	99 c0       	rjmp	.+306    	; 0x3e4 <__ctors_end>
	...

000002b4 <__vector_49>:
     2b4:	97 c0       	rjmp	.+302    	; 0x3e4 <__ctors_end>
	...

000002b8 <__vector_50>:
     2b8:	95 c0       	rjmp	.+298    	; 0x3e4 <__ctors_end>
	...

000002bc <__vector_51>:
     2bc:	93 c0       	rjmp	.+294    	; 0x3e4 <__ctors_end>
	...

000002c0 <__vector_52>:
     2c0:	91 c0       	rjmp	.+290    	; 0x3e4 <__ctors_end>
	...

000002c4 <__vector_53>:
     2c4:	8f c0       	rjmp	.+286    	; 0x3e4 <__ctors_end>
	...

000002c8 <__vector_54>:
     2c8:	8d c0       	rjmp	.+282    	; 0x3e4 <__ctors_end>
	...

000002cc <__vector_55>:
     2cc:	8b c0       	rjmp	.+278    	; 0x3e4 <__ctors_end>
	...

000002d0 <__vector_56>:
     2d0:	89 c0       	rjmp	.+274    	; 0x3e4 <__ctors_end>
	...

000002d4 <__vector_57>:
     2d4:	87 c0       	rjmp	.+270    	; 0x3e4 <__ctors_end>
	...

000002d8 <__vector_58>:
     2d8:	85 c0       	rjmp	.+266    	; 0x3e4 <__ctors_end>
	...

000002dc <__vector_59>:
     2dc:	83 c0       	rjmp	.+262    	; 0x3e4 <__ctors_end>
	...

000002e0 <__vector_60>:
     2e0:	81 c0       	rjmp	.+258    	; 0x3e4 <__ctors_end>
	...

000002e4 <__vector_61>:
     2e4:	7f c0       	rjmp	.+254    	; 0x3e4 <__ctors_end>
	...

000002e8 <__vector_62>:
     2e8:	7d c0       	rjmp	.+250    	; 0x3e4 <__ctors_end>
	...

000002ec <__vector_63>:
     2ec:	7b c0       	rjmp	.+246    	; 0x3e4 <__ctors_end>
	...

000002f0 <__vector_64>:
     2f0:	79 c0       	rjmp	.+242    	; 0x3e4 <__ctors_end>
	...

000002f4 <__vector_65>:
     2f4:	77 c0       	rjmp	.+238    	; 0x3e4 <__ctors_end>
	...

000002f8 <__vector_66>:
     2f8:	75 c0       	rjmp	.+234    	; 0x3e4 <__ctors_end>
	...

000002fc <__vector_67>:
     2fc:	73 c0       	rjmp	.+230    	; 0x3e4 <__ctors_end>
	...

00000300 <__vector_68>:
     300:	71 c0       	rjmp	.+226    	; 0x3e4 <__ctors_end>
	...

00000304 <__vector_69>:
     304:	6f c0       	rjmp	.+222    	; 0x3e4 <__ctors_end>
	...

00000308 <__vector_70>:
     308:	6d c0       	rjmp	.+218    	; 0x3e4 <__ctors_end>
	...

0000030c <__vector_71>:
     30c:	6b c0       	rjmp	.+214    	; 0x3e4 <__ctors_end>
	...

00000310 <__vector_72>:
     310:	69 c0       	rjmp	.+210    	; 0x3e4 <__ctors_end>
	...

00000314 <__vector_73>:
     314:	67 c0       	rjmp	.+206    	; 0x3e4 <__ctors_end>
	...

00000318 <__vector_74>:
     318:	65 c0       	rjmp	.+202    	; 0x3e4 <__ctors_end>
	...

0000031c <__vector_75>:
     31c:	63 c0       	rjmp	.+198    	; 0x3e4 <__ctors_end>
	...

00000320 <__vector_76>:
     320:	61 c0       	rjmp	.+194    	; 0x3e4 <__ctors_end>
	...

00000324 <__vector_77>:
     324:	5f c0       	rjmp	.+190    	; 0x3e4 <__ctors_end>
	...

00000328 <__vector_78>:
     328:	5d c0       	rjmp	.+186    	; 0x3e4 <__ctors_end>
	...

0000032c <__vector_79>:
     32c:	5b c0       	rjmp	.+182    	; 0x3e4 <__ctors_end>
	...

00000330 <__vector_80>:
     330:	59 c0       	rjmp	.+178    	; 0x3e4 <__ctors_end>
	...

00000334 <__vector_81>:
     334:	57 c0       	rjmp	.+174    	; 0x3e4 <__ctors_end>
	...

00000338 <__vector_82>:
     338:	55 c0       	rjmp	.+170    	; 0x3e4 <__ctors_end>
	...

0000033c <__vector_83>:
     33c:	53 c0       	rjmp	.+166    	; 0x3e4 <__ctors_end>
	...

00000340 <__vector_84>:
     340:	51 c0       	rjmp	.+162    	; 0x3e4 <__ctors_end>
	...

00000344 <__vector_85>:
     344:	4f c0       	rjmp	.+158    	; 0x3e4 <__ctors_end>
	...

00000348 <__vector_86>:
     348:	4d c0       	rjmp	.+154    	; 0x3e4 <__ctors_end>
	...

0000034c <__vector_87>:
     34c:	4b c0       	rjmp	.+150    	; 0x3e4 <__ctors_end>
	...

00000350 <__vector_88>:
     350:	49 c0       	rjmp	.+146    	; 0x3e4 <__ctors_end>
	...

00000354 <__vector_89>:
     354:	47 c0       	rjmp	.+142    	; 0x3e4 <__ctors_end>
	...

00000358 <__vector_90>:
     358:	45 c0       	rjmp	.+138    	; 0x3e4 <__ctors_end>
	...

0000035c <__vector_91>:
     35c:	43 c0       	rjmp	.+134    	; 0x3e4 <__ctors_end>
	...

00000360 <__vector_92>:
     360:	41 c0       	rjmp	.+130    	; 0x3e4 <__ctors_end>
	...

00000364 <__vector_93>:
     364:	3f c0       	rjmp	.+126    	; 0x3e4 <__ctors_end>
	...

00000368 <__vector_94>:
     368:	3d c0       	rjmp	.+122    	; 0x3e4 <__ctors_end>
	...

0000036c <__vector_95>:
     36c:	3b c0       	rjmp	.+118    	; 0x3e4 <__ctors_end>
	...

00000370 <__vector_96>:
     370:	39 c0       	rjmp	.+114    	; 0x3e4 <__ctors_end>
	...

00000374 <__vector_97>:
     374:	37 c0       	rjmp	.+110    	; 0x3e4 <__ctors_end>
	...

00000378 <__vector_98>:
     378:	35 c0       	rjmp	.+106    	; 0x3e4 <__ctors_end>
	...

0000037c <__vector_99>:
     37c:	33 c0       	rjmp	.+102    	; 0x3e4 <__ctors_end>
	...

00000380 <__vector_100>:
     380:	31 c0       	rjmp	.+98     	; 0x3e4 <__ctors_end>
	...

00000384 <__vector_101>:
     384:	2f c0       	rjmp	.+94     	; 0x3e4 <__ctors_end>
	...

00000388 <__vector_102>:
     388:	2d c0       	rjmp	.+90     	; 0x3e4 <__ctors_end>
	...

0000038c <__vector_103>:
     38c:	2b c0       	rjmp	.+86     	; 0x3e4 <__ctors_end>
	...

00000390 <__vector_104>:
     390:	29 c0       	rjmp	.+82     	; 0x3e4 <__ctors_end>
	...

00000394 <__vector_105>:
     394:	27 c0       	rjmp	.+78     	; 0x3e4 <__ctors_end>
	...

00000398 <__vector_106>:
     398:	25 c0       	rjmp	.+74     	; 0x3e4 <__ctors_end>
	...

0000039c <__vector_107>:
     39c:	23 c0       	rjmp	.+70     	; 0x3e4 <__ctors_end>
	...

000003a0 <__vector_108>:
     3a0:	21 c0       	rjmp	.+66     	; 0x3e4 <__ctors_end>
	...

000003a4 <__vector_109>:
     3a4:	1f c0       	rjmp	.+62     	; 0x3e4 <__ctors_end>
	...

000003a8 <__vector_110>:
     3a8:	1d c0       	rjmp	.+58     	; 0x3e4 <__ctors_end>
	...

000003ac <__vector_111>:
     3ac:	1b c0       	rjmp	.+54     	; 0x3e4 <__ctors_end>
	...

000003b0 <__vector_112>:
     3b0:	19 c0       	rjmp	.+50     	; 0x3e4 <__ctors_end>
	...

000003b4 <__vector_113>:
     3b4:	17 c0       	rjmp	.+46     	; 0x3e4 <__ctors_end>
	...

000003b8 <__vector_114>:
     3b8:	15 c0       	rjmp	.+42     	; 0x3e4 <__ctors_end>
	...

000003bc <__vector_115>:
     3bc:	13 c0       	rjmp	.+38     	; 0x3e4 <__ctors_end>
	...

000003c0 <__vector_116>:
     3c0:	11 c0       	rjmp	.+34     	; 0x3e4 <__ctors_end>
	...

000003c4 <__vector_117>:
     3c4:	0f c0       	rjmp	.+30     	; 0x3e4 <__ctors_end>
	...

000003c8 <__vector_118>:
     3c8:	0d c0       	rjmp	.+26     	; 0x3e4 <__ctors_end>
	...

000003cc <__vector_119>:
     3cc:	0b c0       	rjmp	.+22     	; 0x3e4 <__ctors_end>
	...

000003d0 <__vector_120>:
     3d0:	09 c0       	rjmp	.+18     	; 0x3e4 <__ctors_end>
	...

000003d4 <__vector_121>:
     3d4:	07 c0       	rjmp	.+14     	; 0x3e4 <__ctors_end>
	...

000003d8 <__vector_122>:
     3d8:	05 c0       	rjmp	.+10     	; 0x3e4 <__ctors_end>
	...

000003dc <__vector_123>:
     3dc:	03 c0       	rjmp	.+6      	; 0x3e4 <__ctors_end>
	...

000003e0 <__vector_124>:
     3e0:	01 c0       	rjmp	.+2      	; 0x3e4 <__ctors_end>
	...

000003e4 <__ctors_end>:
     3e4:	11 24       	eor	r1, r1
     3e6:	1f be       	out	0x3f, r1	; 63
     3e8:	cf ef       	ldi	r28, 0xFF	; 255
     3ea:	cd bf       	out	0x3d, r28	; 61
     3ec:	df e3       	ldi	r29, 0x3F	; 63
     3ee:	de bf       	out	0x3e, r29	; 62
     3f0:	00 e0       	ldi	r16, 0x00	; 0
     3f2:	0c bf       	out	0x3c, r16	; 60
     3f4:	18 be       	out	0x38, r1	; 56
     3f6:	19 be       	out	0x39, r1	; 57
     3f8:	1a be       	out	0x3a, r1	; 58
     3fa:	1b be       	out	0x3b, r1	; 59

000003fc <__do_copy_data>:
     3fc:	13 e2       	ldi	r17, 0x23	; 35
     3fe:	a0 e0       	ldi	r26, 0x00	; 0
     400:	b0 e2       	ldi	r27, 0x20	; 32
     402:	e6 ef       	ldi	r30, 0xF6	; 246
     404:	fc e1       	ldi	r31, 0x1C	; 28
     406:	00 e0       	ldi	r16, 0x00	; 0
     408:	0b bf       	out	0x3b, r16	; 59
     40a:	02 c0       	rjmp	.+4      	; 0x410 <__do_copy_data+0x14>
     40c:	07 90       	elpm	r0, Z+
     40e:	0d 92       	st	X+, r0
     410:	a2 3a       	cpi	r26, 0xA2	; 162
     412:	b1 07       	cpc	r27, r17
     414:	d9 f7       	brne	.-10     	; 0x40c <__do_copy_data+0x10>
     416:	1b be       	out	0x3b, r1	; 59

00000418 <__do_clear_bss>:
     418:	25 e3       	ldi	r18, 0x35	; 53
     41a:	a2 ea       	ldi	r26, 0xA2	; 162
     41c:	b3 e2       	ldi	r27, 0x23	; 35
     41e:	01 c0       	rjmp	.+2      	; 0x422 <.do_clear_bss_start>

00000420 <.do_clear_bss_loop>:
     420:	1d 92       	st	X+, r1

00000422 <.do_clear_bss_start>:
     422:	aa 39       	cpi	r26, 0x9A	; 154
     424:	b2 07       	cpc	r27, r18
     426:	e1 f7       	brne	.-8      	; 0x420 <.do_clear_bss_loop>
     428:	d6 d5       	rcall	.+2988   	; 0xfd6 <main>
     42a:	0c 94 79 0e 	jmp	0x1cf2	; 0x1cf2 <_exit>

0000042e <TickISR>:
     42e:	0f 92       	push	r0
     430:	0f b6       	in	r0, 0x3f	; 63
     432:	0f 92       	push	r0
     434:	1f 92       	push	r1
     436:	11 24       	eor	r1, r1
     438:	2f 92       	push	r2
     43a:	3f 92       	push	r3
     43c:	4f 92       	push	r4
     43e:	5f 92       	push	r5
     440:	6f 92       	push	r6
     442:	7f 92       	push	r7
     444:	8f 92       	push	r8
     446:	9f 92       	push	r9
     448:	af 92       	push	r10
     44a:	bf 92       	push	r11
     44c:	cf 92       	push	r12
     44e:	df 92       	push	r13
     450:	ef 92       	push	r14
     452:	ff 92       	push	r15
     454:	0f 93       	push	r16
     456:	1f 93       	push	r17
     458:	2f 93       	push	r18
     45a:	3f 93       	push	r19
     45c:	4f 93       	push	r20
     45e:	5f 93       	push	r21
     460:	6f 93       	push	r22
     462:	7f 93       	push	r23
     464:	8f 93       	push	r24
     466:	9f 93       	push	r25
     468:	af 93       	push	r26
     46a:	bf 93       	push	r27
     46c:	cf 93       	push	r28
     46e:	df 93       	push	r29
     470:	ef 93       	push	r30
     472:	ff 93       	push	r31
     474:	0c b7       	in	r16, 0x3c	; 60
     476:	0f 93       	push	r16
     478:	08 b7       	in	r16, 0x38	; 56
     47a:	0f 93       	push	r16
     47c:	09 b7       	in	r16, 0x39	; 57
     47e:	0f 93       	push	r16
     480:	0a b7       	in	r16, 0x3a	; 58
     482:	0f 93       	push	r16
     484:	0b b7       	in	r16, 0x3b	; 59
     486:	0f 93       	push	r16
     488:	00 91 01 2f 	lds	r16, 0x2F01
     48c:	03 95       	inc	r16
     48e:	00 93 01 2f 	sts	0x2F01, r16
     492:	01 30       	cpi	r16, 0x01	; 1
     494:	41 f4       	brne	.+16     	; 0x4a6 <TickISR_1>
     496:	ad b7       	in	r26, 0x3d	; 61
     498:	be b7       	in	r27, 0x3e	; 62
     49a:	c0 91 02 2f 	lds	r28, 0x2F02
     49e:	d0 91 03 2f 	lds	r29, 0x2F03
     4a2:	a9 93       	st	Y+, r26
     4a4:	b9 93       	st	Y+, r27

000004a6 <TickISR_1>:
     4a6:	7a d6       	rcall	.+3316   	; 0x119c <OSTimeTick>
     4a8:	04 d6       	rcall	.+3080   	; 0x10b2 <OSIntExit>
     4aa:	0f 91       	pop	r16
     4ac:	0b bf       	out	0x3b, r16	; 59
     4ae:	0f 91       	pop	r16
     4b0:	0a bf       	out	0x3a, r16	; 58
     4b2:	0f 91       	pop	r16
     4b4:	09 bf       	out	0x39, r16	; 57
     4b6:	0f 91       	pop	r16
     4b8:	08 bf       	out	0x38, r16	; 56
     4ba:	0f 91       	pop	r16
     4bc:	0c bf       	out	0x3c, r16	; 60
     4be:	ff 91       	pop	r31
     4c0:	ef 91       	pop	r30
     4c2:	df 91       	pop	r29
     4c4:	cf 91       	pop	r28
     4c6:	bf 91       	pop	r27
     4c8:	af 91       	pop	r26
     4ca:	9f 91       	pop	r25
     4cc:	8f 91       	pop	r24
     4ce:	7f 91       	pop	r23
     4d0:	6f 91       	pop	r22
     4d2:	5f 91       	pop	r21
     4d4:	4f 91       	pop	r20
     4d6:	3f 91       	pop	r19
     4d8:	2f 91       	pop	r18
     4da:	1f 91       	pop	r17
     4dc:	0f 91       	pop	r16
     4de:	ff 90       	pop	r15
     4e0:	ef 90       	pop	r14
     4e2:	df 90       	pop	r13
     4e4:	cf 90       	pop	r12
     4e6:	bf 90       	pop	r11
     4e8:	af 90       	pop	r10
     4ea:	9f 90       	pop	r9
     4ec:	8f 90       	pop	r8
     4ee:	7f 90       	pop	r7
     4f0:	6f 90       	pop	r6
     4f2:	5f 90       	pop	r5
     4f4:	4f 90       	pop	r4
     4f6:	3f 90       	pop	r3
     4f8:	2f 90       	pop	r2
     4fa:	1f 90       	pop	r1
     4fc:	0f 90       	pop	r0
     4fe:	0f be       	out	0x3f, r0	; 63
     500:	0f 90       	pop	r0
     502:	18 95       	reti

00000504 <OS_CPU_SR_Save>:
     504:	8f b7       	in	r24, 0x3f	; 63
     506:	f8 94       	cli
     508:	08 95       	ret

0000050a <OS_CPU_SR_Restore>:
     50a:	8f bf       	out	0x3f, r24	; 63
     50c:	08 95       	ret

0000050e <OSStartHighRdy>:
     50e:	0e 94 dd 0b 	call	0x17ba	; 0x17ba <OSTaskSwHook>
     512:	00 91 c0 2e 	lds	r16, 0x2EC0
     516:	03 95       	inc	r16
     518:	00 93 c0 2e 	sts	0x2EC0, r16
     51c:	a0 91 f4 2e 	lds	r26, 0x2EF4
     520:	b0 91 f5 2e 	lds	r27, 0x2EF5
     524:	cd 91       	ld	r28, X+
     526:	cd bf       	out	0x3d, r28	; 61
     528:	dd 91       	ld	r29, X+
     52a:	de bf       	out	0x3e, r29	; 62
     52c:	0f 91       	pop	r16
     52e:	0b bf       	out	0x3b, r16	; 59
     530:	0f 91       	pop	r16
     532:	0a bf       	out	0x3a, r16	; 58
     534:	0f 91       	pop	r16
     536:	09 bf       	out	0x39, r16	; 57
     538:	0f 91       	pop	r16
     53a:	08 bf       	out	0x38, r16	; 56
     53c:	0f 91       	pop	r16
     53e:	0c bf       	out	0x3c, r16	; 60
     540:	ff 91       	pop	r31
     542:	ef 91       	pop	r30
     544:	df 91       	pop	r29
     546:	cf 91       	pop	r28
     548:	bf 91       	pop	r27
     54a:	af 91       	pop	r26
     54c:	9f 91       	pop	r25
     54e:	8f 91       	pop	r24
     550:	7f 91       	pop	r23
     552:	6f 91       	pop	r22
     554:	5f 91       	pop	r21
     556:	4f 91       	pop	r20
     558:	3f 91       	pop	r19
     55a:	2f 91       	pop	r18
     55c:	1f 91       	pop	r17
     55e:	0f 91       	pop	r16
     560:	ff 90       	pop	r15
     562:	ef 90       	pop	r14
     564:	df 90       	pop	r13
     566:	cf 90       	pop	r12
     568:	bf 90       	pop	r11
     56a:	af 90       	pop	r10
     56c:	9f 90       	pop	r9
     56e:	8f 90       	pop	r8
     570:	7f 90       	pop	r7
     572:	6f 90       	pop	r6
     574:	5f 90       	pop	r5
     576:	4f 90       	pop	r4
     578:	3f 90       	pop	r3
     57a:	2f 90       	pop	r2
     57c:	1f 90       	pop	r1
     57e:	0f 90       	pop	r0
     580:	0f be       	out	0x3f, r0	; 63
     582:	0f 90       	pop	r0
     584:	18 95       	reti

00000586 <OSCtxSw>:
     586:	0f 92       	push	r0
     588:	0f b6       	in	r0, 0x3f	; 63
     58a:	0f 92       	push	r0
     58c:	1f 92       	push	r1
     58e:	11 24       	eor	r1, r1
     590:	2f 92       	push	r2
     592:	3f 92       	push	r3
     594:	4f 92       	push	r4
     596:	5f 92       	push	r5
     598:	6f 92       	push	r6
     59a:	7f 92       	push	r7
     59c:	8f 92       	push	r8
     59e:	9f 92       	push	r9
     5a0:	af 92       	push	r10
     5a2:	bf 92       	push	r11
     5a4:	cf 92       	push	r12
     5a6:	df 92       	push	r13
     5a8:	ef 92       	push	r14
     5aa:	ff 92       	push	r15
     5ac:	0f 93       	push	r16
     5ae:	1f 93       	push	r17
     5b0:	2f 93       	push	r18
     5b2:	3f 93       	push	r19
     5b4:	4f 93       	push	r20
     5b6:	5f 93       	push	r21
     5b8:	6f 93       	push	r22
     5ba:	7f 93       	push	r23
     5bc:	8f 93       	push	r24
     5be:	9f 93       	push	r25
     5c0:	af 93       	push	r26
     5c2:	bf 93       	push	r27
     5c4:	cf 93       	push	r28
     5c6:	df 93       	push	r29
     5c8:	ef 93       	push	r30
     5ca:	ff 93       	push	r31
     5cc:	0c b7       	in	r16, 0x3c	; 60
     5ce:	0f 93       	push	r16
     5d0:	08 b7       	in	r16, 0x38	; 56
     5d2:	0f 93       	push	r16
     5d4:	09 b7       	in	r16, 0x39	; 57
     5d6:	0f 93       	push	r16
     5d8:	0a b7       	in	r16, 0x3a	; 58
     5da:	0f 93       	push	r16
     5dc:	0b b7       	in	r16, 0x3b	; 59
     5de:	0f 93       	push	r16
     5e0:	ad b7       	in	r26, 0x3d	; 61
     5e2:	be b7       	in	r27, 0x3e	; 62
     5e4:	c0 91 02 2f 	lds	r28, 0x2F02
     5e8:	d0 91 03 2f 	lds	r29, 0x2F03
     5ec:	a9 93       	st	Y+, r26
     5ee:	b9 93       	st	Y+, r27
     5f0:	0e 94 dd 0b 	call	0x17ba	; 0x17ba <OSTaskSwHook>
     5f4:	00 91 c5 2e 	lds	r16, 0x2EC5
     5f8:	00 93 e9 2e 	sts	0x2EE9, r16
     5fc:	a0 91 f4 2e 	lds	r26, 0x2EF4
     600:	b0 91 f5 2e 	lds	r27, 0x2EF5
     604:	a0 93 02 2f 	sts	0x2F02, r26
     608:	b0 93 03 2f 	sts	0x2F03, r27
     60c:	cd 91       	ld	r28, X+
     60e:	cd bf       	out	0x3d, r28	; 61
     610:	dd 91       	ld	r29, X+
     612:	de bf       	out	0x3e, r29	; 62
     614:	0f 91       	pop	r16
     616:	0b bf       	out	0x3b, r16	; 59
     618:	0f 91       	pop	r16
     61a:	0a bf       	out	0x3a, r16	; 58
     61c:	0f 91       	pop	r16
     61e:	09 bf       	out	0x39, r16	; 57
     620:	0f 91       	pop	r16
     622:	08 bf       	out	0x38, r16	; 56
     624:	0f 91       	pop	r16
     626:	0c bf       	out	0x3c, r16	; 60
     628:	ff 91       	pop	r31
     62a:	ef 91       	pop	r30
     62c:	df 91       	pop	r29
     62e:	cf 91       	pop	r28
     630:	bf 91       	pop	r27
     632:	af 91       	pop	r26
     634:	9f 91       	pop	r25
     636:	8f 91       	pop	r24
     638:	7f 91       	pop	r23
     63a:	6f 91       	pop	r22
     63c:	5f 91       	pop	r21
     63e:	4f 91       	pop	r20
     640:	3f 91       	pop	r19
     642:	2f 91       	pop	r18
     644:	1f 91       	pop	r17
     646:	0f 91       	pop	r16
     648:	ff 90       	pop	r15
     64a:	ef 90       	pop	r14
     64c:	df 90       	pop	r13
     64e:	cf 90       	pop	r12
     650:	bf 90       	pop	r11
     652:	af 90       	pop	r10
     654:	9f 90       	pop	r9
     656:	8f 90       	pop	r8
     658:	7f 90       	pop	r7
     65a:	6f 90       	pop	r6
     65c:	5f 90       	pop	r5
     65e:	4f 90       	pop	r4
     660:	3f 90       	pop	r3
     662:	2f 90       	pop	r2
     664:	1f 90       	pop	r1
     666:	0f 90       	pop	r0
     668:	0f be       	out	0x3f, r0	; 63
     66a:	0f 90       	pop	r0
     66c:	08 95       	ret

0000066e <OSIntCtxSw>:
     66e:	0e 94 dd 0b 	call	0x17ba	; 0x17ba <OSTaskSwHook>
     672:	00 91 c5 2e 	lds	r16, 0x2EC5
     676:	00 93 e9 2e 	sts	0x2EE9, r16
     67a:	a0 91 f4 2e 	lds	r26, 0x2EF4
     67e:	b0 91 f5 2e 	lds	r27, 0x2EF5
     682:	a0 93 02 2f 	sts	0x2F02, r26
     686:	b0 93 03 2f 	sts	0x2F03, r27
     68a:	cd 91       	ld	r28, X+
     68c:	cd bf       	out	0x3d, r28	; 61
     68e:	dd 91       	ld	r29, X+
     690:	de bf       	out	0x3e, r29	; 62
     692:	0f 91       	pop	r16
     694:	0b bf       	out	0x3b, r16	; 59
     696:	0f 91       	pop	r16
     698:	0a bf       	out	0x3a, r16	; 58
     69a:	0f 91       	pop	r16
     69c:	09 bf       	out	0x39, r16	; 57
     69e:	0f 91       	pop	r16
     6a0:	08 bf       	out	0x38, r16	; 56
     6a2:	0f 91       	pop	r16
     6a4:	0c bf       	out	0x3c, r16	; 60
     6a6:	ff 91       	pop	r31
     6a8:	ef 91       	pop	r30
     6aa:	df 91       	pop	r29
     6ac:	cf 91       	pop	r28
     6ae:	bf 91       	pop	r27
     6b0:	af 91       	pop	r26
     6b2:	9f 91       	pop	r25
     6b4:	8f 91       	pop	r24
     6b6:	7f 91       	pop	r23
     6b8:	6f 91       	pop	r22
     6ba:	5f 91       	pop	r21
     6bc:	4f 91       	pop	r20
     6be:	3f 91       	pop	r19
     6c0:	2f 91       	pop	r18
     6c2:	1f 91       	pop	r17
     6c4:	0f 91       	pop	r16
     6c6:	ff 90       	pop	r15
     6c8:	ef 90       	pop	r14
     6ca:	df 90       	pop	r13
     6cc:	cf 90       	pop	r12
     6ce:	bf 90       	pop	r11
     6d0:	af 90       	pop	r10
     6d2:	9f 90       	pop	r9
     6d4:	8f 90       	pop	r8
     6d6:	7f 90       	pop	r7
     6d8:	6f 90       	pop	r6
     6da:	5f 90       	pop	r5
     6dc:	4f 90       	pop	r4
     6de:	3f 90       	pop	r3
     6e0:	2f 90       	pop	r2
     6e2:	1f 90       	pop	r1
     6e4:	0f 90       	pop	r0
     6e6:	0f be       	out	0x3f, r0	; 63
     6e8:	0f 90       	pop	r0
     6ea:	18 95       	reti

000006ec <App_TaskCreateHook>:
     6ec:	08 95       	ret

000006ee <App_TaskIdleHook>:
     6ee:	08 95       	ret

000006f0 <App_TaskSwHook>:
     6f0:	84 e0       	ldi	r24, 0x04	; 4
     6f2:	e0 e8       	ldi	r30, 0x80	; 128
     6f4:	f6 e0       	ldi	r31, 0x06	; 6
     6f6:	87 83       	std	Z+7, r24	; 0x07
     6f8:	08 95       	ret

000006fa <App_TCBInitHook>:
     6fa:	08 95       	ret

000006fc <App_TimeTickHook>:
     6fc:	88 e0       	ldi	r24, 0x08	; 8
     6fe:	e0 e8       	ldi	r30, 0x80	; 128
     700:	f6 e0       	ldi	r31, 0x06	; 6
     702:	87 83       	std	Z+7, r24	; 0x07
     704:	08 95       	ret

00000706 <crc8>:
};



u8 crc8( u8 *data , long size )  
{  
     706:	0f 93       	push	r16
     708:	1f 93       	push	r17
     70a:	dc 01       	movw	r26, r24
    long lp;
    u8 crc = 0;
     70c:	80 e0       	ldi	r24, 0x00	; 0

	for( lp = 0; lp < size; lp++ )
     70e:	00 e0       	ldi	r16, 0x00	; 0
     710:	10 e0       	ldi	r17, 0x00	; 0
     712:	98 01       	movw	r18, r16
     714:	04 17       	cp	r16, r20
     716:	15 07       	cpc	r17, r21
     718:	26 07       	cpc	r18, r22
     71a:	37 07       	cpc	r19, r23
     71c:	5c f4       	brge	.+22     	; 0x734 <crc8+0x2e>
	{
		 crc = crc8_table[ crc ^ data[lp] ] ;
     71e:	ed 91       	ld	r30, X+
     720:	e8 27       	eor	r30, r24
     722:	f0 e0       	ldi	r31, 0x00	; 0
     724:	ed 5f       	subi	r30, 0xFD	; 253
     726:	ff 4d       	sbci	r31, 0xDF	; 223
     728:	80 81       	ld	r24, Z
u8 crc8( u8 *data , long size )  
{  
    long lp;
    u8 crc = 0;

	for( lp = 0; lp < size; lp++ )
     72a:	0f 5f       	subi	r16, 0xFF	; 255
     72c:	1f 4f       	sbci	r17, 0xFF	; 255
     72e:	2f 4f       	sbci	r18, 0xFF	; 255
     730:	3f 4f       	sbci	r19, 0xFF	; 255
     732:	f0 cf       	rjmp	.-32     	; 0x714 <crc8+0xe>
	{
		 crc = crc8_table[ crc ^ data[lp] ] ;
	}
    
    return crc;
} 
     734:	1f 91       	pop	r17
     736:	0f 91       	pop	r16
     738:	08 95       	ret

0000073a <env_save>:
		eeprom_write_byte((void *)0x400 + sizeof(env_t),crc8(pBuf,sizeof(env_t)));
	}
}

void env_save(env_t * env)
{
     73a:	cf 93       	push	r28
     73c:	df 93       	push	r29
     73e:	ec 01       	movw	r28, r24
	u8 * pBuf= (u8 *)env;
	
	eeprom_update_block((const void*)env,(void*) 0x400,sizeof(env_t));
     740:	44 e5       	ldi	r20, 0x54	; 84
     742:	52 e0       	ldi	r21, 0x02	; 2
     744:	60 e0       	ldi	r22, 0x00	; 0
     746:	74 e0       	ldi	r23, 0x04	; 4
     748:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__eeupd_block_x128a1>
	eeprom_write_byte((void *)0x400 + sizeof(env_t),crc8(pBuf,sizeof(env_t)));
     74c:	44 e5       	ldi	r20, 0x54	; 84
     74e:	52 e0       	ldi	r21, 0x02	; 2
     750:	60 e0       	ldi	r22, 0x00	; 0
     752:	70 e0       	ldi	r23, 0x00	; 0
     754:	ce 01       	movw	r24, r28
     756:	d7 df       	rcall	.-82     	; 0x706 <crc8>
     758:	68 2f       	mov	r22, r24
     75a:	84 e5       	ldi	r24, 0x54	; 84
     75c:	96 e0       	ldi	r25, 0x06	; 6
}
     75e:	df 91       	pop	r29
     760:	cf 91       	pop	r28
void env_save(env_t * env)
{
	u8 * pBuf= (u8 *)env;
	
	eeprom_update_block((const void*)env,(void*) 0x400,sizeof(env_t));
	eeprom_write_byte((void *)0x400 + sizeof(env_t),crc8(pBuf,sizeof(env_t)));
     762:	0c 94 4d 0e 	jmp	0x1c9a	; 0x1c9a <__eewr_byte_x128a1>

00000766 <env_default>:




void env_default(env_t * env)
{
     766:	8f 92       	push	r8
     768:	9f 92       	push	r9
     76a:	af 92       	push	r10
     76c:	bf 92       	push	r11
     76e:	cf 92       	push	r12
     770:	df 92       	push	r13
     772:	ef 92       	push	r14
     774:	ff 92       	push	r15
     776:	0f 93       	push	r16
     778:	1f 93       	push	r17
     77a:	cf 93       	push	r28
     77c:	df 93       	push	r29
     77e:	fc 01       	movw	r30, r24
	int i;

	memset(env,0,sizeof(env_t));
     780:	84 e5       	ldi	r24, 0x54	; 84
     782:	92 e0       	ldi	r25, 0x02	; 2
     784:	df 01       	movw	r26, r30
     786:	9c 01       	movw	r18, r24
     788:	1d 92       	st	X+, r1
     78a:	21 50       	subi	r18, 0x01	; 1
     78c:	30 40       	sbci	r19, 0x00	; 0
     78e:	e1 f7       	brne	.-8      	; 0x788 <env_default+0x22>
	
	env->id.main = (u32)0x12345678;
     790:	88 e7       	ldi	r24, 0x78	; 120
     792:	96 e5       	ldi	r25, 0x56	; 86
     794:	a4 e3       	ldi	r26, 0x34	; 52
     796:	b2 e1       	ldi	r27, 0x12	; 18
     798:	80 83       	st	Z, r24
     79a:	91 83       	std	Z+1, r25	; 0x01
     79c:	a2 83       	std	Z+2, r26	; 0x02
     79e:	b3 83       	std	Z+3, r27	; 0x03
	env->id.driver = (u32)0x12345678;
     7a0:	84 83       	std	Z+4, r24	; 0x04
     7a2:	95 83       	std	Z+5, r25	; 0x05
     7a4:	a6 83       	std	Z+6, r26	; 0x06
     7a6:	b7 83       	std	Z+7, r27	; 0x07
	env->id.security = (u32)0x12345678;
     7a8:	80 87       	std	Z+8, r24	; 0x08
     7aa:	91 87       	std	Z+9, r25	; 0x09
     7ac:	a2 87       	std	Z+10, r26	; 0x0a
     7ae:	b3 87       	std	Z+11, r27	; 0x0b
	env->id.b_door = (u32)0x12345678;
     7b0:	84 87       	std	Z+12, r24	; 0x0c
     7b2:	95 87       	std	Z+13, r25	; 0x0d
     7b4:	a6 87       	std	Z+14, r26	; 0x0e
     7b6:	b7 87       	std	Z+15, r27	; 0x0f
	env->id.s_door = (u32)0x12345678;
     7b8:	80 8b       	std	Z+16, r24	; 0x10
     7ba:	91 8b       	std	Z+17, r25	; 0x11
     7bc:	a2 8b       	std	Z+18, r26	; 0x12
     7be:	b3 8b       	std	Z+19, r27	; 0x13
	env->id.cabin_right = (u32)0x12345678;
     7c0:	84 8b       	std	Z+20, r24	; 0x14
     7c2:	95 8b       	std	Z+21, r25	; 0x15
     7c4:	a6 8b       	std	Z+22, r26	; 0x16
     7c6:	b7 8b       	std	Z+23, r27	; 0x17
	env->id.cabin_left = (u32)0x12345678;
     7c8:	80 8f       	std	Z+24, r24	; 0x18
     7ca:	91 8f       	std	Z+25, r25	; 0x19
     7cc:	a2 8f       	std	Z+26, r26	; 0x1a
     7ce:	b3 8f       	std	Z+27, r27	; 0x1b
	env->ex_id.ex_driver = (u32)0x12345678;
     7d0:	ef 01       	movw	r28, r30
     7d2:	c4 5e       	subi	r28, 0xE4	; 228
     7d4:	de 4f       	sbci	r29, 0xFE	; 254
     7d6:	88 83       	st	Y, r24
     7d8:	99 83       	std	Y+1, r25	; 0x01
     7da:	aa 83       	std	Y+2, r26	; 0x02
     7dc:	bb 83       	std	Y+3, r27	; 0x03
	env->ex_id.ex_security = (u32)0x12345678;
     7de:	24 96       	adiw	r28, 0x04	; 4
     7e0:	88 83       	st	Y, r24
     7e2:	99 83       	std	Y+1, r25	; 0x01
     7e4:	aa 83       	std	Y+2, r26	; 0x02
     7e6:	bb 83       	std	Y+3, r27	; 0x03
	

	env->use.driver = (u32)1;
     7e8:	41 e0       	ldi	r20, 0x01	; 1
     7ea:	50 e0       	ldi	r21, 0x00	; 0
     7ec:	60 e0       	ldi	r22, 0x00	; 0
     7ee:	70 e0       	ldi	r23, 0x00	; 0
     7f0:	44 8f       	std	Z+28, r20	; 0x1c
     7f2:	55 8f       	std	Z+29, r21	; 0x1d
     7f4:	66 8f       	std	Z+30, r22	; 0x1e
     7f6:	77 8f       	std	Z+31, r23	; 0x1f
	env->use.security = (u32)1;
     7f8:	40 a3       	std	Z+32, r20	; 0x20
     7fa:	51 a3       	std	Z+33, r21	; 0x21
     7fc:	62 a3       	std	Z+34, r22	; 0x22
     7fe:	73 a3       	std	Z+35, r23	; 0x23
	env->use.b_door = (u32)1;
     800:	44 a3       	std	Z+36, r20	; 0x24
     802:	55 a3       	std	Z+37, r21	; 0x25
     804:	66 a3       	std	Z+38, r22	; 0x26
     806:	77 a3       	std	Z+39, r23	; 0x27
	env->use.s_door = (u32)1;
     808:	40 a7       	std	Z+40, r20	; 0x28
     80a:	51 a7       	std	Z+41, r21	; 0x29
     80c:	62 a7       	std	Z+42, r22	; 0x2a
     80e:	73 a7       	std	Z+43, r23	; 0x2b
	env->use.cabin_right = (u32)0;
     810:	14 a6       	std	Z+44, r1	; 0x2c
     812:	15 a6       	std	Z+45, r1	; 0x2d
     814:	16 a6       	std	Z+46, r1	; 0x2e
     816:	17 a6       	std	Z+47, r1	; 0x2f
	env->use.cabin_left = (u32)0;
     818:	10 aa       	std	Z+48, r1	; 0x30
     81a:	11 aa       	std	Z+49, r1	; 0x31
     81c:	12 aa       	std	Z+50, r1	; 0x32
     81e:	13 aa       	std	Z+51, r1	; 0x33
	env->ex_use.ex_driver = (u32)0;
     820:	df 01       	movw	r26, r30
     822:	ac 5d       	subi	r26, 0xDC	; 220
     824:	be 4f       	sbci	r27, 0xFE	; 254
     826:	1d 92       	st	X+, r1
     828:	1d 92       	st	X+, r1
     82a:	1d 92       	st	X+, r1
     82c:	1c 92       	st	X, r1
     82e:	13 97       	sbiw	r26, 0x03	; 3
	env->ex_use.ex_security = (u32)0;
     830:	14 96       	adiw	r26, 0x04	; 4
     832:	1d 92       	st	X+, r1
     834:	1d 92       	st	X+, r1
     836:	1d 92       	st	X+, r1
     838:	1c 92       	st	X, r1
     83a:	13 97       	sbiw	r26, 0x03	; 3
	

	//env->remocon.emg_on = (u32)4;
	env->remocon.emg_on = (u32)2;	
     83c:	02 e0       	ldi	r16, 0x02	; 2
     83e:	10 e0       	ldi	r17, 0x00	; 0
     840:	20 e0       	ldi	r18, 0x00	; 0
     842:	30 e0       	ldi	r19, 0x00	; 0
     844:	04 ab       	std	Z+52, r16	; 0x34
     846:	15 ab       	std	Z+53, r17	; 0x35
     848:	26 ab       	std	Z+54, r18	; 0x36
     84a:	37 ab       	std	Z+55, r19	; 0x37
	//env->remocon.emg_off = (u32)3;
	env->remocon.emg_off = (u32)2;
     84c:	00 af       	std	Z+56, r16	; 0x38
     84e:	11 af       	std	Z+57, r17	; 0x39
     850:	22 af       	std	Z+58, r18	; 0x3a
     852:	33 af       	std	Z+59, r19	; 0x3b
	//env->remocon.button_on = (u32)2;
	env->remocon.button_on = (u32)1;
     854:	44 af       	std	Z+60, r20	; 0x3c
     856:	55 af       	std	Z+61, r21	; 0x3d
     858:	66 af       	std	Z+62, r22	; 0x3e
     85a:	77 af       	std	Z+63, r23	; 0x3f

	env->back_door_set.in_used = (u32)1;
     85c:	a8 5e       	subi	r26, 0xE8	; 232
     85e:	b1 09       	sbc	r27, r1
     860:	4d 93       	st	X+, r20
     862:	5d 93       	st	X+, r21
     864:	6d 93       	st	X+, r22
     866:	7c 93       	st	X, r23
     868:	13 97       	sbiw	r26, 0x03	; 3
	env->back_door_set.in_on_time = (u32)2;
     86a:	14 96       	adiw	r26, 0x04	; 4
     86c:	0d 93       	st	X+, r16
     86e:	1d 93       	st	X+, r17
     870:	2d 93       	st	X+, r18
     872:	3c 93       	st	X, r19
     874:	13 97       	sbiw	r26, 0x03	; 3
	env->back_door_set.in_off_time = (u32)2;
     876:	14 96       	adiw	r26, 0x04	; 4
     878:	0d 93       	st	X+, r16
     87a:	1d 93       	st	X+, r17
     87c:	2d 93       	st	X+, r18
     87e:	3c 93       	st	X, r19
     880:	13 97       	sbiw	r26, 0x03	; 3
	env->back_door_set.out_used = (u32)1;
     882:	14 96       	adiw	r26, 0x04	; 4
     884:	4d 93       	st	X+, r20
     886:	5d 93       	st	X+, r21
     888:	6d 93       	st	X+, r22
     88a:	7c 93       	st	X, r23
     88c:	13 97       	sbiw	r26, 0x03	; 3
	env->back_door_set.out_on_time = (u32)2;
     88e:	14 96       	adiw	r26, 0x04	; 4
     890:	0d 93       	st	X+, r16
     892:	1d 93       	st	X+, r17
     894:	2d 93       	st	X+, r18
     896:	3c 93       	st	X, r19
     898:	13 97       	sbiw	r26, 0x03	; 3
	env->back_door_set.out_off_time = (u32)20;
     89a:	14 96       	adiw	r26, 0x04	; 4
     89c:	84 e1       	ldi	r24, 0x14	; 20
     89e:	88 2e       	mov	r8, r24
     8a0:	91 2c       	mov	r9, r1
     8a2:	a1 2c       	mov	r10, r1
     8a4:	b1 2c       	mov	r11, r1
     8a6:	8d 92       	st	X+, r8
     8a8:	9d 92       	st	X+, r9
     8aa:	ad 92       	st	X+, r10
     8ac:	bc 92       	st	X, r11
     8ae:	13 97       	sbiw	r26, 0x03	; 3
	env->back_door_set.lock_time = (u32)3;
     8b0:	14 96       	adiw	r26, 0x04	; 4
     8b2:	93 e0       	ldi	r25, 0x03	; 3
     8b4:	c9 2e       	mov	r12, r25
     8b6:	d1 2c       	mov	r13, r1
     8b8:	e1 2c       	mov	r14, r1
     8ba:	f1 2c       	mov	r15, r1
     8bc:	cd 92       	st	X+, r12
     8be:	dd 92       	st	X+, r13
     8c0:	ed 92       	st	X+, r14
     8c2:	fc 92       	st	X, r15
     8c4:	13 97       	sbiw	r26, 0x03	; 3
	env->back_door_set.unlock_time = (u32)3;
     8c6:	14 96       	adiw	r26, 0x04	; 4
     8c8:	cd 92       	st	X+, r12
     8ca:	dd 92       	st	X+, r13
     8cc:	ed 92       	st	X+, r14
     8ce:	fc 92       	st	X, r15
     8d0:	13 97       	sbiw	r26, 0x03	; 3

	env->side_door_set.in_used = (u32)1;
     8d2:	14 96       	adiw	r26, 0x04	; 4
     8d4:	4d 93       	st	X+, r20
     8d6:	5d 93       	st	X+, r21
     8d8:	6d 93       	st	X+, r22
     8da:	7c 93       	st	X, r23
     8dc:	13 97       	sbiw	r26, 0x03	; 3
	env->side_door_set.in_on_time = (u32)2;
     8de:	14 96       	adiw	r26, 0x04	; 4
     8e0:	0d 93       	st	X+, r16
     8e2:	1d 93       	st	X+, r17
     8e4:	2d 93       	st	X+, r18
     8e6:	3c 93       	st	X, r19
     8e8:	13 97       	sbiw	r26, 0x03	; 3
	env->side_door_set.in_off_time = (u32)2;
     8ea:	14 96       	adiw	r26, 0x04	; 4
     8ec:	0d 93       	st	X+, r16
     8ee:	1d 93       	st	X+, r17
     8f0:	2d 93       	st	X+, r18
     8f2:	3c 93       	st	X, r19
     8f4:	13 97       	sbiw	r26, 0x03	; 3
	env->side_door_set.out_used = (u32)1;
     8f6:	14 96       	adiw	r26, 0x04	; 4
     8f8:	4d 93       	st	X+, r20
     8fa:	5d 93       	st	X+, r21
     8fc:	6d 93       	st	X+, r22
     8fe:	7c 93       	st	X, r23
     900:	13 97       	sbiw	r26, 0x03	; 3
	env->side_door_set.out_on_time = (u32)2;
     902:	14 96       	adiw	r26, 0x04	; 4
     904:	0d 93       	st	X+, r16
     906:	1d 93       	st	X+, r17
     908:	2d 93       	st	X+, r18
     90a:	3c 93       	st	X, r19
     90c:	13 97       	sbiw	r26, 0x03	; 3
	env->side_door_set.out_off_time = (u32)20;
     90e:	14 96       	adiw	r26, 0x04	; 4
     910:	8d 92       	st	X+, r8
     912:	9d 92       	st	X+, r9
     914:	ad 92       	st	X+, r10
     916:	bc 92       	st	X, r11
     918:	13 97       	sbiw	r26, 0x03	; 3
	env->side_door_set.lock_time = (u32)3;
     91a:	14 96       	adiw	r26, 0x04	; 4
     91c:	cd 92       	st	X+, r12
     91e:	dd 92       	st	X+, r13
     920:	ed 92       	st	X+, r14
     922:	fc 92       	st	X, r15
     924:	13 97       	sbiw	r26, 0x03	; 3
	env->side_door_set.unlock_time = (u32)3;
     926:	14 96       	adiw	r26, 0x04	; 4
     928:	cd 92       	st	X+, r12
     92a:	dd 92       	st	X+, r13
     92c:	ed 92       	st	X+, r14
     92e:	fc 92       	st	X, r15
     930:	13 97       	sbiw	r26, 0x03	; 3
	
	env->cabin_right_set.out_used = (u32)0;
     932:	14 96       	adiw	r26, 0x04	; 4
     934:	1d 92       	st	X+, r1
     936:	1d 92       	st	X+, r1
     938:	1d 92       	st	X+, r1
     93a:	1c 92       	st	X, r1
     93c:	13 97       	sbiw	r26, 0x03	; 3
	env->cabin_right_set.out_on_time = (u32)2;
     93e:	14 96       	adiw	r26, 0x04	; 4
     940:	0d 93       	st	X+, r16
     942:	1d 93       	st	X+, r17
     944:	2d 93       	st	X+, r18
     946:	3c 93       	st	X, r19
     948:	13 97       	sbiw	r26, 0x03	; 3
	env->cabin_right_set.out_off_time = (u32)20;
     94a:	14 96       	adiw	r26, 0x04	; 4
     94c:	8d 92       	st	X+, r8
     94e:	9d 92       	st	X+, r9
     950:	ad 92       	st	X+, r10
     952:	bc 92       	st	X, r11
     954:	13 97       	sbiw	r26, 0x03	; 3
	env->cabin_right_set.in_used = (u32)0;
     956:	14 96       	adiw	r26, 0x04	; 4
     958:	1d 92       	st	X+, r1
     95a:	1d 92       	st	X+, r1
     95c:	1d 92       	st	X+, r1
     95e:	1c 92       	st	X, r1
     960:	13 97       	sbiw	r26, 0x03	; 3
	env->cabin_right_set.in_on_time = (u32)2;
     962:	14 96       	adiw	r26, 0x04	; 4
     964:	0d 93       	st	X+, r16
     966:	1d 93       	st	X+, r17
     968:	2d 93       	st	X+, r18
     96a:	3c 93       	st	X, r19
     96c:	13 97       	sbiw	r26, 0x03	; 3
	env->cabin_right_set.in_off_time = (u32)2;
     96e:	14 96       	adiw	r26, 0x04	; 4
     970:	0d 93       	st	X+, r16
     972:	1d 93       	st	X+, r17
     974:	2d 93       	st	X+, r18
     976:	3c 93       	st	X, r19
     978:	13 97       	sbiw	r26, 0x03	; 3
	env->cabin_right_set.lock_time = (u32)3;
     97a:	14 96       	adiw	r26, 0x04	; 4
     97c:	cd 92       	st	X+, r12
     97e:	dd 92       	st	X+, r13
     980:	ed 92       	st	X+, r14
     982:	fc 92       	st	X, r15
     984:	13 97       	sbiw	r26, 0x03	; 3
	env->cabin_right_set.unlock_time = (u32)3;
     986:	14 96       	adiw	r26, 0x04	; 4
     988:	cd 92       	st	X+, r12
     98a:	dd 92       	st	X+, r13
     98c:	ed 92       	st	X+, r14
     98e:	fc 92       	st	X, r15
     990:	13 97       	sbiw	r26, 0x03	; 3
	
	env->cabin_left_set.out_used = (u32)0;
     992:	14 96       	adiw	r26, 0x04	; 4
     994:	1d 92       	st	X+, r1
     996:	1d 92       	st	X+, r1
     998:	1d 92       	st	X+, r1
     99a:	1c 92       	st	X, r1
     99c:	13 97       	sbiw	r26, 0x03	; 3
	env->cabin_left_set.out_on_time = (u32)2;
     99e:	14 96       	adiw	r26, 0x04	; 4
     9a0:	0d 93       	st	X+, r16
     9a2:	1d 93       	st	X+, r17
     9a4:	2d 93       	st	X+, r18
     9a6:	3c 93       	st	X, r19
     9a8:	13 97       	sbiw	r26, 0x03	; 3
	env->cabin_left_set.out_off_time = (u32)20;
     9aa:	14 96       	adiw	r26, 0x04	; 4
     9ac:	8d 92       	st	X+, r8
     9ae:	9d 92       	st	X+, r9
     9b0:	ad 92       	st	X+, r10
     9b2:	bc 92       	st	X, r11
     9b4:	13 97       	sbiw	r26, 0x03	; 3
	env->cabin_left_set.in_used = (u32)0;
     9b6:	14 96       	adiw	r26, 0x04	; 4
     9b8:	1d 92       	st	X+, r1
     9ba:	1d 92       	st	X+, r1
     9bc:	1d 92       	st	X+, r1
     9be:	1c 92       	st	X, r1
     9c0:	13 97       	sbiw	r26, 0x03	; 3
	env->cabin_left_set.in_on_time = (u32)2;
     9c2:	14 96       	adiw	r26, 0x04	; 4
     9c4:	0d 93       	st	X+, r16
     9c6:	1d 93       	st	X+, r17
     9c8:	2d 93       	st	X+, r18
     9ca:	3c 93       	st	X, r19
     9cc:	13 97       	sbiw	r26, 0x03	; 3
	env->cabin_left_set.in_off_time = (u32)2;
     9ce:	14 96       	adiw	r26, 0x04	; 4
     9d0:	0d 93       	st	X+, r16
     9d2:	1d 93       	st	X+, r17
     9d4:	2d 93       	st	X+, r18
     9d6:	3c 93       	st	X, r19
     9d8:	13 97       	sbiw	r26, 0x03	; 3
	env->cabin_left_set.lock_time = (u32)3;
     9da:	14 96       	adiw	r26, 0x04	; 4
     9dc:	cd 92       	st	X+, r12
     9de:	dd 92       	st	X+, r13
     9e0:	ed 92       	st	X+, r14
     9e2:	fc 92       	st	X, r15
     9e4:	13 97       	sbiw	r26, 0x03	; 3
	env->cabin_left_set.unlock_time = (u32)3;
     9e6:	14 96       	adiw	r26, 0x04	; 4
     9e8:	cd 92       	st	X+, r12
     9ea:	dd 92       	st	X+, r13
     9ec:	ed 92       	st	X+, r14
     9ee:	fc 92       	st	X, r15
     9f0:	13 97       	sbiw	r26, 0x03	; 3

	env->driver_set.used = (u32)1;	
     9f2:	14 96       	adiw	r26, 0x04	; 4
     9f4:	4d 93       	st	X+, r20
     9f6:	5d 93       	st	X+, r21
     9f8:	6d 93       	st	X+, r22
     9fa:	7c 93       	st	X, r23
     9fc:	13 97       	sbiw	r26, 0x03	; 3
	env->driver_set.on_time = (u32)2;
     9fe:	14 96       	adiw	r26, 0x04	; 4
     a00:	0d 93       	st	X+, r16
     a02:	1d 93       	st	X+, r17
     a04:	2d 93       	st	X+, r18
     a06:	3c 93       	st	X, r19
     a08:	13 97       	sbiw	r26, 0x03	; 3
	env->driver_set.off_time = (u32)10;
     a0a:	c8 55       	subi	r28, 0x58	; 88
     a0c:	d1 09       	sbc	r29, r1
     a0e:	8a e0       	ldi	r24, 0x0A	; 10
     a10:	90 e0       	ldi	r25, 0x00	; 0
     a12:	a0 e0       	ldi	r26, 0x00	; 0
     a14:	b0 e0       	ldi	r27, 0x00	; 0
     a16:	88 83       	st	Y, r24
     a18:	99 83       	std	Y+1, r25	; 0x01
     a1a:	aa 83       	std	Y+2, r26	; 0x02
     a1c:	bb 83       	std	Y+3, r27	; 0x03
	env->driver_set.lock_time = (u32)1;
     a1e:	24 96       	adiw	r28, 0x04	; 4
     a20:	48 83       	st	Y, r20
     a22:	59 83       	std	Y+1, r21	; 0x01
     a24:	6a 83       	std	Y+2, r22	; 0x02
     a26:	7b 83       	std	Y+3, r23	; 0x03
	env->driver_set.unlock_time = (u32)1;
     a28:	24 96       	adiw	r28, 0x04	; 4
     a2a:	48 83       	st	Y, r20
     a2c:	59 83       	std	Y+1, r21	; 0x01
     a2e:	6a 83       	std	Y+2, r22	; 0x02
     a30:	7b 83       	std	Y+3, r23	; 0x03

	env->security_set.used = (u32)1;
     a32:	24 96       	adiw	r28, 0x04	; 4
     a34:	48 83       	st	Y, r20
     a36:	59 83       	std	Y+1, r21	; 0x01
     a38:	6a 83       	std	Y+2, r22	; 0x02
     a3a:	7b 83       	std	Y+3, r23	; 0x03
	env->security_set.on_time = (u32)2;
     a3c:	24 96       	adiw	r28, 0x04	; 4
     a3e:	08 83       	st	Y, r16
     a40:	19 83       	std	Y+1, r17	; 0x01
     a42:	2a 83       	std	Y+2, r18	; 0x02
     a44:	3b 83       	std	Y+3, r19	; 0x03
	env->security_set.off_time = (u32)10;
     a46:	24 96       	adiw	r28, 0x04	; 4
     a48:	88 83       	st	Y, r24
     a4a:	99 83       	std	Y+1, r25	; 0x01
     a4c:	aa 83       	std	Y+2, r26	; 0x02
     a4e:	bb 83       	std	Y+3, r27	; 0x03
	env->security_set.lock_time = (u32)1;
     a50:	df 01       	movw	r26, r30
     a52:	a0 52       	subi	r26, 0x20	; 32
     a54:	bf 4f       	sbci	r27, 0xFF	; 255
     a56:	4d 93       	st	X+, r20
     a58:	5d 93       	st	X+, r21
     a5a:	6d 93       	st	X+, r22
     a5c:	7c 93       	st	X, r23
     a5e:	13 97       	sbiw	r26, 0x03	; 3
	env->security_set.unlock_time = (u32)1;
     a60:	14 96       	adiw	r26, 0x04	; 4
     a62:	4d 93       	st	X+, r20
     a64:	5d 93       	st	X+, r21
     a66:	6d 93       	st	X+, r22
     a68:	7c 93       	st	X, r23
     a6a:	13 97       	sbiw	r26, 0x03	; 3
	
	env->main_set.emg_on_time = (u32)2;
     a6c:	14 96       	adiw	r26, 0x04	; 4
     a6e:	0d 93       	st	X+, r16
     a70:	1d 93       	st	X+, r17
     a72:	2d 93       	st	X+, r18
     a74:	3c 93       	st	X, r19
     a76:	13 97       	sbiw	r26, 0x03	; 3
	env->main_set.safety_on_time = (u32)2;
     a78:	14 96       	adiw	r26, 0x04	; 4
     a7a:	0d 93       	st	X+, r16
     a7c:	1d 93       	st	X+, r17
     a7e:	2d 93       	st	X+, r18
     a80:	3c 93       	st	X, r19
     a82:	13 97       	sbiw	r26, 0x03	; 3
	env->main_set.emg_hazard_flash_used = (u32)1;
     a84:	14 96       	adiw	r26, 0x04	; 4
     a86:	4d 93       	st	X+, r20
     a88:	5d 93       	st	X+, r21
     a8a:	6d 93       	st	X+, r22
     a8c:	7c 93       	st	X, r23
     a8e:	13 97       	sbiw	r26, 0x03	; 3
	env->main_set.reset_with_unlock_b_s_door_used = (u32)0;
     a90:	14 96       	adiw	r26, 0x04	; 4
     a92:	1d 92       	st	X+, r1
     a94:	1d 92       	st	X+, r1
     a96:	1d 92       	st	X+, r1
     a98:	1c 92       	st	X, r1
     a9a:	13 97       	sbiw	r26, 0x03	; 3
	env->main_set.beep_b_s_door_used = (u32)0;
     a9c:	14 96       	adiw	r26, 0x04	; 4
     a9e:	1d 92       	st	X+, r1
     aa0:	1d 92       	st	X+, r1
     aa2:	1d 92       	st	X+, r1
     aa4:	1c 92       	st	X, r1
     aa6:	13 97       	sbiw	r26, 0x03	; 3
	env->main_set.engine_start = (u32)1234;
     aa8:	a0 96       	adiw	r28, 0x20	; 32
     aaa:	82 ed       	ldi	r24, 0xD2	; 210
     aac:	94 e0       	ldi	r25, 0x04	; 4
     aae:	a0 e0       	ldi	r26, 0x00	; 0
     ab0:	b0 e0       	ldi	r27, 0x00	; 0
     ab2:	88 83       	st	Y, r24
     ab4:	99 83       	std	Y+1, r25	; 0x01
     ab6:	aa 83       	std	Y+2, r26	; 0x02
     ab8:	bb 83       	std	Y+3, r27	; 0x03
	env->main_set.service_code = (u32)4567;
     aba:	24 96       	adiw	r28, 0x04	; 4
     abc:	87 ed       	ldi	r24, 0xD7	; 215
     abe:	91 e1       	ldi	r25, 0x11	; 17
     ac0:	a0 e0       	ldi	r26, 0x00	; 0
     ac2:	b0 e0       	ldi	r27, 0x00	; 0
     ac4:	88 83       	st	Y, r24
     ac6:	99 83       	std	Y+1, r25	; 0x01
     ac8:	aa 83       	std	Y+2, r26	; 0x02
     aca:	bb 83       	std	Y+3, r27	; 0x03
	env->main_set.maintenance_active = (u32)0;
     acc:	df 01       	movw	r26, r30
     ace:	ac 5f       	subi	r26, 0xFC	; 252
     ad0:	be 4f       	sbci	r27, 0xFE	; 254
     ad2:	1d 92       	st	X+, r1
     ad4:	1d 92       	st	X+, r1
     ad6:	1d 92       	st	X+, r1
     ad8:	1c 92       	st	X, r1
     ada:	13 97       	sbiw	r26, 0x03	; 3
	env->main_set.security_reset_active =(u32)1;
     adc:	14 96       	adiw	r26, 0x04	; 4
     ade:	4d 93       	st	X+, r20
     ae0:	5d 93       	st	X+, r21
     ae2:	6d 93       	st	X+, r22
     ae4:	7c 93       	st	X, r23
     ae6:	13 97       	sbiw	r26, 0x03	; 3
	env->main_set.unlockRootvanKinkoWaveUsed = (u32)0;
     ae8:	14 96       	adiw	r26, 0x04	; 4
     aea:	1d 92       	st	X+, r1
     aec:	1d 92       	st	X+, r1
     aee:	1d 92       	st	X+, r1
     af0:	1c 92       	st	X, r1
     af2:	13 97       	sbiw	r26, 0x03	; 3
	env->main_set.unlockRootvanDCabWaveUsed = (u32)0;
     af4:	14 96       	adiw	r26, 0x04	; 4
     af6:	1d 92       	st	X+, r1
     af8:	1d 92       	st	X+, r1
     afa:	1d 92       	st	X+, r1
     afc:	1c 92       	st	X, r1
     afe:	13 97       	sbiw	r26, 0x03	; 3
	env->main_set.startDelayResetFlag = (u32)0;
     b00:	14 96       	adiw	r26, 0x04	; 4
     b02:	1d 92       	st	X+, r1
     b04:	1d 92       	st	X+, r1
     b06:	1d 92       	st	X+, r1
     b08:	1c 92       	st	X, r1
     b0a:	13 97       	sbiw	r26, 0x03	; 3
	env->door_Type.b_door = (u32)1;
     b0c:	58 96       	adiw	r26, 0x18	; 24
     b0e:	4d 93       	st	X+, r20
     b10:	5d 93       	st	X+, r21
     b12:	6d 93       	st	X+, r22
     b14:	7c 93       	st	X, r23
     b16:	13 97       	sbiw	r26, 0x03	; 3
	env->door_Type.s_door = (u32)1;
     b18:	14 96       	adiw	r26, 0x04	; 4
     b1a:	4d 93       	st	X+, r20
     b1c:	5d 93       	st	X+, r21
     b1e:	6d 93       	st	X+, r22
     b20:	7c 93       	st	X, r23
     b22:	13 97       	sbiw	r26, 0x03	; 3
	env->door_Type.cabin_right = (u32)1;
     b24:	14 96       	adiw	r26, 0x04	; 4
     b26:	4d 93       	st	X+, r20
     b28:	5d 93       	st	X+, r21
     b2a:	6d 93       	st	X+, r22
     b2c:	7c 93       	st	X, r23
     b2e:	13 97       	sbiw	r26, 0x03	; 3
	env->door_Type.cabin_left = (u32)1;
     b30:	14 96       	adiw	r26, 0x04	; 4
     b32:	4d 93       	st	X+, r20
     b34:	5d 93       	st	X+, r21
     b36:	6d 93       	st	X+, r22
     b38:	7c 93       	st	X, r23
     b3a:	13 97       	sbiw	r26, 0x03	; 3
	//env->reg[9]=(u32)0x8888;
	env->reg[99] = (u32)0x9876;
     b3c:	e8 53       	subi	r30, 0x38	; 56
     b3e:	fd 4f       	sbci	r31, 0xFD	; 253
     b40:	86 e7       	ldi	r24, 0x76	; 118
     b42:	98 e9       	ldi	r25, 0x98	; 152
     b44:	a0 e0       	ldi	r26, 0x00	; 0
     b46:	b0 e0       	ldi	r27, 0x00	; 0
     b48:	80 83       	st	Z, r24
     b4a:	91 83       	std	Z+1, r25	; 0x01
     b4c:	a2 83       	std	Z+2, r26	; 0x02
     b4e:	b3 83       	std	Z+3, r27	; 0x03
}
     b50:	df 91       	pop	r29
     b52:	cf 91       	pop	r28
     b54:	1f 91       	pop	r17
     b56:	0f 91       	pop	r16
     b58:	ff 90       	pop	r15
     b5a:	ef 90       	pop	r14
     b5c:	df 90       	pop	r13
     b5e:	cf 90       	pop	r12
     b60:	bf 90       	pop	r11
     b62:	af 90       	pop	r10
     b64:	9f 90       	pop	r9
     b66:	8f 90       	pop	r8
     b68:	08 95       	ret

00000b6a <env_init>:
} 



void env_init()
{
     b6a:	cf 93       	push	r28
	u8 crc;
	u8 * pBuf;
	
	eeprom_read_block((void*)&gEnv,(void*) 0x400,sizeof(env_t));
     b6c:	44 e5       	ldi	r20, 0x54	; 84
     b6e:	52 e0       	ldi	r21, 0x02	; 2
     b70:	60 e0       	ldi	r22, 0x00	; 0
     b72:	74 e0       	ldi	r23, 0x04	; 4
     b74:	80 e6       	ldi	r24, 0x60	; 96
     b76:	9c e2       	ldi	r25, 0x2C	; 44
     b78:	0e 94 1a 0e 	call	0x1c34	; 0x1c34 <__eerd_block_x128a1>
	
	crc = eeprom_read_byte((void *)0x400 + sizeof(env_t));
     b7c:	84 e5       	ldi	r24, 0x54	; 84
     b7e:	96 e0       	ldi	r25, 0x06	; 6
     b80:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <__eerd_byte_x128a1>
     b84:	c8 2f       	mov	r28, r24
	
	
	pBuf = (u8 *)&gEnv;
	
	if(crc != crc8(pBuf,sizeof(env_t)))
     b86:	44 e5       	ldi	r20, 0x54	; 84
     b88:	52 e0       	ldi	r21, 0x02	; 2
     b8a:	60 e0       	ldi	r22, 0x00	; 0
     b8c:	70 e0       	ldi	r23, 0x00	; 0
     b8e:	80 e6       	ldi	r24, 0x60	; 96
     b90:	9c e2       	ldi	r25, 0x2C	; 44
     b92:	b9 dd       	rcall	.-1166   	; 0x706 <crc8>
     b94:	c8 17       	cp	r28, r24
     b96:	c1 f0       	breq	.+48     	; 0xbc8 <env_init+0x5e>
	{
		env_default(&gEnv);
     b98:	80 e6       	ldi	r24, 0x60	; 96
     b9a:	9c e2       	ldi	r25, 0x2C	; 44
     b9c:	e4 dd       	rcall	.-1080   	; 0x766 <env_default>
		eeprom_update_block((const void*)&gEnv,(void*) 0x400,sizeof(env_t));
     b9e:	44 e5       	ldi	r20, 0x54	; 84
     ba0:	52 e0       	ldi	r21, 0x02	; 2
     ba2:	60 e0       	ldi	r22, 0x00	; 0
     ba4:	74 e0       	ldi	r23, 0x04	; 4
     ba6:	80 e6       	ldi	r24, 0x60	; 96
     ba8:	9c e2       	ldi	r25, 0x2C	; 44
     baa:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__eeupd_block_x128a1>
		eeprom_write_byte((void *)0x400 + sizeof(env_t),crc8(pBuf,sizeof(env_t)));
     bae:	44 e5       	ldi	r20, 0x54	; 84
     bb0:	52 e0       	ldi	r21, 0x02	; 2
     bb2:	60 e0       	ldi	r22, 0x00	; 0
     bb4:	70 e0       	ldi	r23, 0x00	; 0
     bb6:	80 e6       	ldi	r24, 0x60	; 96
     bb8:	9c e2       	ldi	r25, 0x2C	; 44
     bba:	a5 dd       	rcall	.-1206   	; 0x706 <crc8>
     bbc:	68 2f       	mov	r22, r24
     bbe:	84 e5       	ldi	r24, 0x54	; 84
     bc0:	96 e0       	ldi	r25, 0x06	; 6
	}
}
     bc2:	cf 91       	pop	r28
	
	if(crc != crc8(pBuf,sizeof(env_t)))
	{
		env_default(&gEnv);
		eeprom_update_block((const void*)&gEnv,(void*) 0x400,sizeof(env_t));
		eeprom_write_byte((void *)0x400 + sizeof(env_t),crc8(pBuf,sizeof(env_t)));
     bc4:	0c 94 4d 0e 	jmp	0x1c9a	; 0x1c9a <__eewr_byte_x128a1>
	}
}
     bc8:	cf 91       	pop	r28
     bca:	08 95       	ret

00000bcc <tele_env_default>:


	
	
tele_env_default(tele_env_t	* tele_env)
{
     bcc:	fc 01       	movw	r30, r24

	tele_env->ctl_data.adj_freq = 0x24;
     bce:	84 e2       	ldi	r24, 0x24	; 36
     bd0:	90 e0       	ldi	r25, 0x00	; 0
     bd2:	80 83       	st	Z, r24
     bd4:	91 83       	std	Z+1, r25	; 0x01
	tele_env->ctl_data.freq_add_sub = 0x80;
     bd6:	20 e8       	ldi	r18, 0x80	; 128
     bd8:	22 83       	std	Z+2, r18	; 0x02
	tele_env->ctl_data.adj_temper = 0x18;
     bda:	88 e1       	ldi	r24, 0x18	; 24
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	86 83       	std	Z+6, r24	; 0x06
     be0:	97 83       	std	Z+7, r25	; 0x07
	tele_env->ctl_data.temper_add_sub =0x80;
     be2:	20 87       	std	Z+8, r18	; 0x08
	tele_env->ctl_data.reg[0] = 0x00;
     be4:	13 82       	std	Z+3, r1	; 0x03
	tele_env->ctl_data.reg[1] = 0x00;
     be6:	14 82       	std	Z+4, r1	; 0x04
	tele_env->ctl_data.reg[2] = 0x00;
     be8:	15 82       	std	Z+5, r1	; 0x05
     bea:	80 e0       	ldi	r24, 0x00	; 0
     bec:	90 e0       	ldi	r25, 0x00	; 0
     bee:	df 01       	movw	r26, r30
     bf0:	a8 0f       	add	r26, r24
     bf2:	b9 1f       	adc	r27, r25
	for(int i=0;i<14;i++)
	{
		tele_env->ctl_data.eprom_level[i] = 0x00;
     bf4:	19 96       	adiw	r26, 0x09	; 9
     bf6:	1d 92       	st	X+, r1
     bf8:	1c 92       	st	X, r1
     bfa:	1a 97       	sbiw	r26, 0x0a	; 10
     bfc:	02 96       	adiw	r24, 0x02	; 2
	tele_env->ctl_data.adj_temper = 0x18;
	tele_env->ctl_data.temper_add_sub =0x80;
	tele_env->ctl_data.reg[0] = 0x00;
	tele_env->ctl_data.reg[1] = 0x00;
	tele_env->ctl_data.reg[2] = 0x00;
	for(int i=0;i<14;i++)
     bfe:	8c 31       	cpi	r24, 0x1C	; 28
     c00:	91 05       	cpc	r25, r1
     c02:	a9 f7       	brne	.-22     	; 0xbee <tele_env_default+0x22>
	{
		tele_env->ctl_data.eprom_level[i] = 0x00;
	}
}
     c04:	08 95       	ret

00000c06 <tele_env_init>:


void tele_env_init()
{
     c06:	cf 93       	push	r28
	u8 crc;
	u8 * pBuf;
	
	eeprom_read_block((void*)&gTele_env,(void*) 0x000,sizeof(tele_env_t));
     c08:	47 e6       	ldi	r20, 0x67	; 103
     c0a:	50 e0       	ldi	r21, 0x00	; 0
     c0c:	60 e0       	ldi	r22, 0x00	; 0
     c0e:	70 e0       	ldi	r23, 0x00	; 0
     c10:	87 ed       	ldi	r24, 0xD7	; 215
     c12:	9b e2       	ldi	r25, 0x2B	; 43
     c14:	0e 94 1a 0e 	call	0x1c34	; 0x1c34 <__eerd_block_x128a1>
	
	crc = eeprom_read_byte((void *)0x000 + sizeof(tele_env_t));
     c18:	87 e6       	ldi	r24, 0x67	; 103
     c1a:	90 e0       	ldi	r25, 0x00	; 0
     c1c:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <__eerd_byte_x128a1>
     c20:	c8 2f       	mov	r28, r24
	
	
	pBuf = (u8 *)&gTele_env;
	
	if(crc != crc8(pBuf,sizeof(tele_env_t)))
     c22:	47 e6       	ldi	r20, 0x67	; 103
     c24:	50 e0       	ldi	r21, 0x00	; 0
     c26:	60 e0       	ldi	r22, 0x00	; 0
     c28:	70 e0       	ldi	r23, 0x00	; 0
     c2a:	87 ed       	ldi	r24, 0xD7	; 215
     c2c:	9b e2       	ldi	r25, 0x2B	; 43
     c2e:	6b dd       	rcall	.-1322   	; 0x706 <crc8>
     c30:	c8 17       	cp	r28, r24
     c32:	c1 f0       	breq	.+48     	; 0xc64 <tele_env_init+0x5e>
	{
		tele_env_default(&gTele_env);
     c34:	87 ed       	ldi	r24, 0xD7	; 215
     c36:	9b e2       	ldi	r25, 0x2B	; 43
     c38:	c9 df       	rcall	.-110    	; 0xbcc <tele_env_default>
		eeprom_update_block((const void*)&gTele_env,(void*) 0x000,sizeof(tele_env_t));
     c3a:	47 e6       	ldi	r20, 0x67	; 103
     c3c:	50 e0       	ldi	r21, 0x00	; 0
     c3e:	60 e0       	ldi	r22, 0x00	; 0
     c40:	70 e0       	ldi	r23, 0x00	; 0
     c42:	87 ed       	ldi	r24, 0xD7	; 215
     c44:	9b e2       	ldi	r25, 0x2B	; 43
     c46:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__eeupd_block_x128a1>
		eeprom_write_byte((void *)0x000 + sizeof(tele_env_t),crc8(pBuf,sizeof(tele_env_t)));
     c4a:	47 e6       	ldi	r20, 0x67	; 103
     c4c:	50 e0       	ldi	r21, 0x00	; 0
     c4e:	60 e0       	ldi	r22, 0x00	; 0
     c50:	70 e0       	ldi	r23, 0x00	; 0
     c52:	87 ed       	ldi	r24, 0xD7	; 215
     c54:	9b e2       	ldi	r25, 0x2B	; 43
     c56:	57 dd       	rcall	.-1362   	; 0x706 <crc8>
     c58:	68 2f       	mov	r22, r24
     c5a:	87 e6       	ldi	r24, 0x67	; 103
     c5c:	90 e0       	ldi	r25, 0x00	; 0
	}
}
     c5e:	cf 91       	pop	r28
	
	if(crc != crc8(pBuf,sizeof(tele_env_t)))
	{
		tele_env_default(&gTele_env);
		eeprom_update_block((const void*)&gTele_env,(void*) 0x000,sizeof(tele_env_t));
		eeprom_write_byte((void *)0x000 + sizeof(tele_env_t),crc8(pBuf,sizeof(tele_env_t)));
     c60:	0c 94 4d 0e 	jmp	0x1c9a	; 0x1c9a <__eewr_byte_x128a1>
	}
}
     c64:	cf 91       	pop	r28
     c66:	08 95       	ret

00000c68 <EventTask>:




void EventTask(void *p_arg)
{
     c68:	cf 93       	push	r28
     c6a:	df 93       	push	r29
     c6c:	cd b7       	in	r28, 0x3d	; 61
     c6e:	de b7       	in	r29, 0x3e	; 62
     c70:	6b 97       	sbiw	r28, 0x1b	; 27
     c72:	cd bf       	out	0x3d, r28	; 61
     c74:	de bf       	out	0x3e, r29	; 62
	volatile testCount=0;
     c76:	1f 8a       	std	Y+23, r1	; 0x17
     c78:	18 8e       	std	Y+24, r1	; 0x18
	volatile u8 testCharacter[100];
	volatile u8 cmd_data[20];
	volatile u8 test=0;
     c7a:	1b 8e       	std	Y+27, r1	; 0x1b
	volatile u8 rxdata=0;
     c7c:	1a 8e       	std	Y+26, r1	; 0x1a
	volatile u8 txdata=0;
     c7e:	19 8e       	std	Y+25, r1	; 0x19
	volatile u8 txdata02[20];
	u8 testtest;
	
	u8 state = CMD_WAIT;
	volatile int cnt = 0;
     c80:	1d 8a       	std	Y+21, r1	; 0x15
     c82:	1e 8a       	std	Y+22, r1	; 0x16
			#endif
		}
		

		
		test=1;
     c84:	41 e0       	ldi	r20, 0x01	; 1

	while(1)
	{
	
	
		if(SPIF.STATUS & 0x80)
     c86:	80 91 c2 0b 	lds	r24, 0x0BC2
     c8a:	87 ff       	sbrs	r24, 7
     c8c:	18 c0       	rjmp	.+48     	; 0xcbe <EventTask+0x56>
		{

			rxdata = SPIF.DATA;
     c8e:	80 91 c3 0b 	lds	r24, 0x0BC3
     c92:	8a 8f       	std	Y+26, r24	; 0x1a

			cmd_data[cnt++] = rxdata;
     c94:	8d 89       	ldd	r24, Y+21	; 0x15
     c96:	9e 89       	ldd	r25, Y+22	; 0x16
     c98:	9c 01       	movw	r18, r24
     c9a:	2f 5f       	subi	r18, 0xFF	; 255
     c9c:	3f 4f       	sbci	r19, 0xFF	; 255
     c9e:	2d 8b       	std	Y+21, r18	; 0x15
     ca0:	3e 8b       	std	Y+22, r19	; 0x16
     ca2:	2a 8d       	ldd	r18, Y+26	; 0x1a
     ca4:	e1 e0       	ldi	r30, 0x01	; 1
     ca6:	f0 e0       	ldi	r31, 0x00	; 0
     ca8:	ec 0f       	add	r30, r28
     caa:	fd 1f       	adc	r31, r29
     cac:	e8 0f       	add	r30, r24
     cae:	f9 1f       	adc	r31, r25
     cb0:	20 83       	st	Z, r18
			
			if(cnt > 20)
     cb2:	8d 89       	ldd	r24, Y+21	; 0x15
     cb4:	9e 89       	ldd	r25, Y+22	; 0x16
     cb6:	45 97       	sbiw	r24, 0x15	; 21
     cb8:	14 f0       	brlt	.+4      	; 0xcbe <EventTask+0x56>
			{
				cnt=0;
     cba:	1d 8a       	std	Y+21, r1	; 0x15
     cbc:	1e 8a       	std	Y+22, r1	; 0x16
			#endif
		}
		

		
		test=1;
     cbe:	4b 8f       	std	Y+27, r20	; 0x1b
		//OSTimeDlyHMSM(0,0,0,10);
		
		
		
	}
     cc0:	e2 cf       	rjmp	.-60     	; 0xc86 <EventTask+0x1e>

00000cc2 <lcd_start>:
     cc2:	4f c7       	rjmp	.+3742   	; 0x1b62 <TWI_I2CMasterStart>

00000cc4 <lcd_sendCmdData>:
     cc4:	cf 93       	push	r28
     cc6:	df 93       	push	r29
     cc8:	1f 92       	push	r1
     cca:	1f 92       	push	r1
     ccc:	cd b7       	in	r28, 0x3d	; 61
     cce:	de b7       	in	r29, 0x3e	; 62
     cd0:	89 83       	std	Y+1, r24	; 0x01
     cd2:	6a 83       	std	Y+2, r22	; 0x02
     cd4:	20 e0       	ldi	r18, 0x00	; 0
     cd6:	42 e0       	ldi	r20, 0x02	; 2
     cd8:	50 e0       	ldi	r21, 0x00	; 0
     cda:	be 01       	movw	r22, r28
     cdc:	6f 5f       	subi	r22, 0xFF	; 255
     cde:	7f 4f       	sbci	r23, 0xFF	; 255
     ce0:	8c e7       	ldi	r24, 0x7C	; 124
     ce2:	52 d7       	rcall	.+3748   	; 0x1b88 <TWI_I2CWrite>
     ce4:	8f e8       	ldi	r24, 0x8F	; 143
     ce6:	91 e0       	ldi	r25, 0x01	; 1
     ce8:	01 97       	sbiw	r24, 0x01	; 1
     cea:	f1 f7       	brne	.-4      	; 0xce8 <lcd_sendCmdData+0x24>
     cec:	00 c0       	rjmp	.+0      	; 0xcee <lcd_sendCmdData+0x2a>
     cee:	00 00       	nop
     cf0:	0f 90       	pop	r0
     cf2:	0f 90       	pop	r0
     cf4:	df 91       	pop	r29
     cf6:	cf 91       	pop	r28
     cf8:	08 95       	ret

00000cfa <lcd_control>:
     cfa:	68 2f       	mov	r22, r24
     cfc:	80 e0       	ldi	r24, 0x00	; 0
     cfe:	e2 cf       	rjmp	.-60     	; 0xcc4 <lcd_sendCmdData>

00000d00 <lcd_writeData>:
     d00:	68 2f       	mov	r22, r24
     d02:	80 e4       	ldi	r24, 0x40	; 64
     d04:	df cf       	rjmp	.-66     	; 0xcc4 <lcd_sendCmdData>

00000d06 <maping_char>:
     d06:	1f 93       	push	r17
     d08:	cf 93       	push	r28
     d0a:	df 93       	push	r29
     d0c:	e4 e0       	ldi	r30, 0x04	; 4
     d0e:	f1 e2       	ldi	r31, 0x21	; 33
     d10:	20 e0       	ldi	r18, 0x00	; 0
     d12:	30 e0       	ldi	r19, 0x00	; 0
     d14:	90 81       	ld	r25, Z
     d16:	98 13       	cpse	r25, r24
     d18:	10 c0       	rjmp	.+32     	; 0xd3a <maping_char+0x34>
     d1a:	e9 01       	movw	r28, r18
     d1c:	cc 0f       	add	r28, r28
     d1e:	dd 1f       	adc	r29, r29
     d20:	c2 0f       	add	r28, r18
     d22:	d3 1f       	adc	r29, r19
     d24:	cd 5f       	subi	r28, 0xFD	; 253
     d26:	de 4d       	sbci	r29, 0xDE	; 222
     d28:	18 81       	ld	r17, Y
     d2a:	81 2f       	mov	r24, r17
     d2c:	e9 df       	rcall	.-46     	; 0xd00 <lcd_writeData>
     d2e:	8a 81       	ldd	r24, Y+2	; 0x02
     d30:	88 23       	and	r24, r24
     d32:	51 f0       	breq	.+20     	; 0xd48 <maping_char+0x42>
     d34:	83 52       	subi	r24, 0x23	; 35
     d36:	e4 df       	rcall	.-56     	; 0xd00 <lcd_writeData>
     d38:	07 c0       	rjmp	.+14     	; 0xd48 <maping_char+0x42>
     d3a:	2f 5f       	subi	r18, 0xFF	; 255
     d3c:	3f 4f       	sbci	r19, 0xFF	; 255
     d3e:	33 96       	adiw	r30, 0x03	; 3
     d40:	20 35       	cpi	r18, 0x50	; 80
     d42:	31 05       	cpc	r19, r1
     d44:	39 f7       	brne	.-50     	; 0xd14 <maping_char+0xe>
     d46:	10 e2       	ldi	r17, 0x20	; 32
     d48:	81 2f       	mov	r24, r17
     d4a:	df 91       	pop	r29
     d4c:	cf 91       	pop	r28
     d4e:	1f 91       	pop	r17
     d50:	08 95       	ret

00000d52 <lcd_prString>:
     d52:	ff 92       	push	r15
     d54:	0f 93       	push	r16
     d56:	1f 93       	push	r17
     d58:	cf 93       	push	r28
     d5a:	df 93       	push	r29
     d5c:	1f 92       	push	r1
     d5e:	cd b7       	in	r28, 0x3d	; 61
     d60:	de b7       	in	r29, 0x3e	; 62
     d62:	8c 01       	movw	r16, r24
     d64:	19 82       	std	Y+1, r1	; 0x01
     d66:	ff 24       	eor	r15, r15
     d68:	f3 94       	inc	r15
     d6a:	f8 01       	movw	r30, r16
     d6c:	80 81       	ld	r24, Z
     d6e:	88 23       	and	r24, r24
     d70:	99 f0       	breq	.+38     	; 0xd98 <lcd_prString+0x46>
     d72:	83 38       	cpi	r24, 0x83	; 131
     d74:	29 f4       	brne	.+10     	; 0xd80 <lcd_prString+0x2e>
     d76:	99 81       	ldd	r25, Y+1	; 0x01
     d78:	91 11       	cpse	r25, r1
     d7a:	02 c0       	rjmp	.+4      	; 0xd80 <lcd_prString+0x2e>
     d7c:	f9 82       	std	Y+1, r15	; 0x01
     d7e:	09 c0       	rjmp	.+18     	; 0xd92 <lcd_prString+0x40>
     d80:	99 81       	ldd	r25, Y+1	; 0x01
     d82:	91 30       	cpi	r25, 0x01	; 1
     d84:	29 f4       	brne	.+10     	; 0xd90 <lcd_prString+0x3e>
     d86:	19 82       	std	Y+1, r1	; 0x01
     d88:	f8 01       	movw	r30, r16
     d8a:	80 81       	ld	r24, Z
     d8c:	bc df       	rcall	.-136    	; 0xd06 <maping_char>
     d8e:	01 c0       	rjmp	.+2      	; 0xd92 <lcd_prString+0x40>
     d90:	b7 df       	rcall	.-146    	; 0xd00 <lcd_writeData>
     d92:	0f 5f       	subi	r16, 0xFF	; 255
     d94:	1f 4f       	sbci	r17, 0xFF	; 255
     d96:	e9 cf       	rjmp	.-46     	; 0xd6a <lcd_prString+0x18>
     d98:	0f 90       	pop	r0
     d9a:	df 91       	pop	r29
     d9c:	cf 91       	pop	r28
     d9e:	1f 91       	pop	r17
     da0:	0f 91       	pop	r16
     da2:	ff 90       	pop	r15
     da4:	08 95       	ret

00000da6 <lcd_position>:
     da6:	60 68       	ori	r22, 0x80	; 128
     da8:	20 e4       	ldi	r18, 0x40	; 64
     daa:	82 9f       	mul	r24, r18
     dac:	c0 01       	movw	r24, r0
     dae:	11 24       	eor	r1, r1
     db0:	86 2b       	or	r24, r22
     db2:	a3 cf       	rjmp	.-186    	; 0xcfa <lcd_control>

00000db4 <lcd_clear>:
     db4:	81 e0       	ldi	r24, 0x01	; 1
     db6:	a1 cf       	rjmp	.-190    	; 0xcfa <lcd_control>

00000db8 <command>:
     db8:	68 2f       	mov	r22, r24
     dba:	80 e0       	ldi	r24, 0x00	; 0
     dbc:	83 cf       	rjmp	.-250    	; 0xcc4 <lcd_sendCmdData>

00000dbe <setDisplayControl>:
     dbe:	90 91 a2 23 	lds	r25, 0x23A2
     dc2:	98 2b       	or	r25, r24
     dc4:	90 93 a2 23 	sts	0x23A2, r25
     dc8:	89 2f       	mov	r24, r25
     dca:	88 60       	ori	r24, 0x08	; 8
     dcc:	90 e0       	ldi	r25, 0x00	; 0
     dce:	f4 cf       	rjmp	.-24     	; 0xdb8 <command>

00000dd0 <display>:
     dd0:	84 e0       	ldi	r24, 0x04	; 4
     dd2:	f5 cf       	rjmp	.-22     	; 0xdbe <setDisplayControl>

00000dd4 <lcd_init>:
     dd4:	80 91 02 20 	lds	r24, 0x2002
     dd8:	80 61       	ori	r24, 0x10	; 16
     dda:	80 93 02 20 	sts	0x2002, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     dde:	2f ef       	ldi	r18, 0xFF	; 255
     de0:	83 ec       	ldi	r24, 0xC3	; 195
     de2:	99 e0       	ldi	r25, 0x09	; 9
     de4:	21 50       	subi	r18, 0x01	; 1
     de6:	80 40       	sbci	r24, 0x00	; 0
     de8:	90 40       	sbci	r25, 0x00	; 0
     dea:	e1 f7       	brne	.-8      	; 0xde4 <lcd_init+0x10>
     dec:	00 c0       	rjmp	.+0      	; 0xdee <lcd_init+0x1a>
     dee:	00 00       	nop
     df0:	80 91 02 20 	lds	r24, 0x2002
     df4:	81 60       	ori	r24, 0x01	; 1
     df6:	81 df       	rcall	.-254    	; 0xcfa <lcd_control>
     df8:	80 91 02 20 	lds	r24, 0x2002
     dfc:	81 60       	ori	r24, 0x01	; 1
     dfe:	7d df       	rcall	.-262    	; 0xcfa <lcd_control>
     e00:	84 e1       	ldi	r24, 0x14	; 20
     e02:	7b df       	rcall	.-266    	; 0xcfa <lcd_control>
     e04:	80 91 01 20 	lds	r24, 0x2001
     e08:	78 df       	rcall	.-272    	; 0xcfa <lcd_control>
     e0a:	80 91 00 20 	lds	r24, 0x2000
     e0e:	75 df       	rcall	.-278    	; 0xcfa <lcd_control>
     e10:	8b e6       	ldi	r24, 0x6B	; 107
     e12:	73 df       	rcall	.-282    	; 0xcfa <lcd_control>
     e14:	2f ef       	ldi	r18, 0xFF	; 255
     e16:	87 e8       	ldi	r24, 0x87	; 135
     e18:	93 e1       	ldi	r25, 0x13	; 19
     e1a:	21 50       	subi	r18, 0x01	; 1
     e1c:	80 40       	sbci	r24, 0x00	; 0
     e1e:	90 40       	sbci	r25, 0x00	; 0
     e20:	e1 f7       	brne	.-8      	; 0xe1a <lcd_init+0x46>
     e22:	00 c0       	rjmp	.+0      	; 0xe24 <lcd_init+0x50>
     e24:	00 00       	nop
     e26:	8c e0       	ldi	r24, 0x0C	; 12
     e28:	68 df       	rcall	.-304    	; 0xcfa <lcd_control>
     e2a:	80 91 02 20 	lds	r24, 0x2002
     e2e:	65 df       	rcall	.-310    	; 0xcfa <lcd_control>
     e30:	cf cf       	rjmp	.-98     	; 0xdd0 <display>

00000e32 <setClockTo32MHz>:
     e32:	88 ed       	ldi	r24, 0xD8	; 216
     e34:	84 bf       	out	0x34, r24	; 52
     e36:	82 e0       	ldi	r24, 0x02	; 2
     e38:	80 93 50 00 	sts	0x0050, r24
     e3c:	80 91 51 00 	lds	r24, 0x0051
     e40:	81 ff       	sbrs	r24, 1
     e42:	fc cf       	rjmp	.-8      	; 0xe3c <setClockTo32MHz+0xa>
     e44:	88 ed       	ldi	r24, 0xD8	; 216
     e46:	84 bf       	out	0x34, r24	; 52
     e48:	81 e0       	ldi	r24, 0x01	; 1
     e4a:	80 93 40 00 	sts	0x0040, r24
     e4e:	08 95       	ret

00000e50 <tc1_disable>:
     e50:	fc 01       	movw	r30, r24
     e52:	80 81       	ld	r24, Z
     e54:	80 7f       	andi	r24, 0xF0	; 240
     e56:	80 83       	st	Z, r24
     e58:	8c e0       	ldi	r24, 0x0C	; 12
     e5a:	81 87       	std	Z+9, r24	; 0x09
     e5c:	08 95       	ret

00000e5e <ClockTickStart>:
     e5e:	cf 93       	push	r28
     e60:	cf b7       	in	r28, 0x3f	; 63
     e62:	f8 94       	cli
     e64:	80 e4       	ldi	r24, 0x40	; 64
     e66:	98 e0       	ldi	r25, 0x08	; 8
     e68:	f3 df       	rcall	.-26     	; 0xe50 <tc1_disable>
     e6a:	e0 e4       	ldi	r30, 0x40	; 64
     e6c:	f8 e0       	ldi	r31, 0x08	; 8
     e6e:	80 81       	ld	r24, Z
     e70:	80 7f       	andi	r24, 0xF0	; 240
     e72:	81 60       	ori	r24, 0x01	; 1
     e74:	80 83       	st	Z, r24
     e76:	81 81       	ldd	r24, Z+1	; 0x01
     e78:	88 7c       	andi	r24, 0xC8	; 200
     e7a:	81 83       	std	Z+1, r24	; 0x01
     e7c:	83 81       	ldd	r24, Z+3	; 0x03
     e7e:	80 71       	andi	r24, 0x10	; 16
     e80:	83 83       	std	Z+3, r24	; 0x03
     e82:	86 81       	ldd	r24, Z+6	; 0x06
     e84:	80 7f       	andi	r24, 0xF0	; 240
     e86:	83 60       	ori	r24, 0x03	; 3
     e88:	86 83       	std	Z+6, r24	; 0x06
     e8a:	87 81       	ldd	r24, Z+7	; 0x07
     e8c:	80 7f       	andi	r24, 0xF0	; 240
     e8e:	87 83       	std	Z+7, r24	; 0x07
     e90:	a0 e9       	ldi	r26, 0x90	; 144
     e92:	b8 e0       	ldi	r27, 0x08	; 8
     e94:	8c 91       	ld	r24, X
     e96:	8d 7f       	andi	r24, 0xFD	; 253
     e98:	8c 93       	st	X, r24
     e9a:	84 85       	ldd	r24, Z+12	; 0x0c
     e9c:	84 87       	std	Z+12, r24	; 0x0c
     e9e:	10 a2       	std	Z+32, r1	; 0x20
     ea0:	11 a2       	std	Z+33, r1	; 0x21
     ea2:	81 e0       	ldi	r24, 0x01	; 1
     ea4:	9d e7       	ldi	r25, 0x7D	; 125
     ea6:	86 a3       	std	Z+38, r24	; 0x26
     ea8:	97 a3       	std	Z+39, r25	; 0x27
     eaa:	10 a6       	std	Z+40, r1	; 0x28
     eac:	11 a6       	std	Z+41, r1	; 0x29
     eae:	12 a6       	std	Z+42, r1	; 0x2a
     eb0:	13 a6       	std	Z+43, r1	; 0x2b
     eb2:	cf bf       	out	0x3f, r28	; 63
     eb4:	cf 91       	pop	r28
     eb6:	08 95       	ret

00000eb8 <system_reset>:
     eb8:	88 ed       	ldi	r24, 0xD8	; 216
     eba:	84 bf       	out	0x34, r24	; 52
     ebc:	81 e0       	ldi	r24, 0x01	; 1
     ebe:	e8 e7       	ldi	r30, 0x78	; 120
     ec0:	f0 e0       	ldi	r31, 0x00	; 0
     ec2:	81 83       	std	Z+1, r24	; 0x01
     ec4:	08 95       	ret

00000ec6 <portb_int>:
     ec6:	08 95       	ret

00000ec8 <TaskStartCreateTasks>:
     ec8:	8f 92       	push	r8
     eca:	9f 92       	push	r9
     ecc:	af 92       	push	r10
     ece:	bf 92       	push	r11
     ed0:	cf 92       	push	r12
     ed2:	df 92       	push	r13
     ed4:	ef 92       	push	r14
     ed6:	ff 92       	push	r15
     ed8:	0f 93       	push	r16
     eda:	1f 93       	push	r17
     edc:	1f 92       	push	r1
     ede:	83 e0       	ldi	r24, 0x03	; 3
     ee0:	8f 93       	push	r24
     ee2:	81 2c       	mov	r8, r1
     ee4:	91 2c       	mov	r9, r1
     ee6:	8e e5       	ldi	r24, 0x5E	; 94
     ee8:	a8 2e       	mov	r10, r24
     eea:	bb 24       	eor	r11, r11
     eec:	b3 94       	inc	r11
     eee:	c1 2c       	mov	r12, r1
     ef0:	d1 2c       	mov	r13, r1
     ef2:	9d eb       	ldi	r25, 0xBD	; 189
     ef4:	e9 2e       	mov	r14, r25
     ef6:	97 e2       	ldi	r25, 0x27	; 39
     ef8:	f9 2e       	mov	r15, r25
     efa:	06 e0       	ldi	r16, 0x06	; 6
     efc:	10 e0       	ldi	r17, 0x00	; 0
     efe:	26 e0       	ldi	r18, 0x06	; 6
     f00:	4a e1       	ldi	r20, 0x1A	; 26
     f02:	59 e2       	ldi	r21, 0x29	; 41
     f04:	60 e0       	ldi	r22, 0x00	; 0
     f06:	70 e0       	ldi	r23, 0x00	; 0
     f08:	84 e3       	ldi	r24, 0x34	; 52
     f0a:	96 e0       	ldi	r25, 0x06	; 6
     f0c:	fe d4       	rcall	.+2556   	; 0x190a <OSTaskCreateExt>
     f0e:	0f 90       	pop	r0
     f10:	0f 90       	pop	r0
     f12:	1f 91       	pop	r17
     f14:	0f 91       	pop	r16
     f16:	ff 90       	pop	r15
     f18:	ef 90       	pop	r14
     f1a:	df 90       	pop	r13
     f1c:	cf 90       	pop	r12
     f1e:	bf 90       	pop	r11
     f20:	af 90       	pop	r10
     f22:	9f 90       	pop	r9
     f24:	8f 90       	pop	r8
     f26:	08 95       	ret

00000f28 <MainTask>:
     f28:	9a df       	rcall	.-204    	; 0xe5e <ClockTickStart>
     f2a:	83 e0       	ldi	r24, 0x03	; 3
     f2c:	80 93 06 08 	sts	0x0806, r24
     f30:	87 e0       	ldi	r24, 0x07	; 7
     f32:	80 93 a2 00 	sts	0x00A2, r24
     f36:	19 de       	rcall	.-974    	; 0xb6a <env_init>
     f38:	66 de       	rcall	.-820    	; 0xc06 <tele_env_init>
     f3a:	80 e0       	ldi	r24, 0x00	; 0
     f3c:	90 e0       	ldi	r25, 0x00	; 0
     f3e:	6d d4       	rcall	.+2266   	; 0x181a <OSSemCreate>
     f40:	80 93 bd 2e 	sts	0x2EBD, r24
     f44:	90 93 be 2e 	sts	0x2EBE, r25
     f48:	bf df       	rcall	.-130    	; 0xec8 <TaskStartCreateTasks>
     f4a:	10 92 b4 2e 	sts	0x2EB4, r1
     f4e:	10 92 b5 2e 	sts	0x2EB5, r1
     f52:	10 92 b6 2e 	sts	0x2EB6, r1
     f56:	10 92 b7 2e 	sts	0x2EB7, r1
     f5a:	10 92 b8 2e 	sts	0x2EB8, r1
     f5e:	80 91 74 2d 	lds	r24, 0x2D74
     f62:	90 91 75 2d 	lds	r25, 0x2D75
     f66:	a0 91 76 2d 	lds	r26, 0x2D76
     f6a:	b0 91 77 2d 	lds	r27, 0x2D77
     f6e:	02 97       	sbiw	r24, 0x02	; 2
     f70:	a1 05       	cpc	r26, r1
     f72:	b1 05       	cpc	r27, r1
     f74:	f0 f4       	brcc	.+60     	; 0xfb2 <MainTask+0x8a>
     f76:	80 91 74 2d 	lds	r24, 0x2D74
     f7a:	90 91 75 2d 	lds	r25, 0x2D75
     f7e:	a0 91 76 2d 	lds	r26, 0x2D76
     f82:	b0 91 77 2d 	lds	r27, 0x2D77
     f86:	01 96       	adiw	r24, 0x01	; 1
     f88:	a1 1d       	adc	r26, r1
     f8a:	b1 1d       	adc	r27, r1
     f8c:	80 93 74 2d 	sts	0x2D74, r24
     f90:	90 93 75 2d 	sts	0x2D75, r25
     f94:	a0 93 76 2d 	sts	0x2D76, r26
     f98:	b0 93 77 2d 	sts	0x2D77, r27
     f9c:	80 e6       	ldi	r24, 0x60	; 96
     f9e:	9c e2       	ldi	r25, 0x2C	; 44
     fa0:	cc db       	rcall	.-2152   	; 0x73a <env_save>
     fa2:	20 e0       	ldi	r18, 0x00	; 0
     fa4:	30 e0       	ldi	r19, 0x00	; 0
     fa6:	45 e0       	ldi	r20, 0x05	; 5
     fa8:	60 e0       	ldi	r22, 0x00	; 0
     faa:	80 e0       	ldi	r24, 0x00	; 0
     fac:	6e d5       	rcall	.+2780   	; 0x1a8a <OSTimeDlyHMSM>
     fae:	84 df       	rcall	.-248    	; 0xeb8 <system_reset>
     fb0:	0b c0       	rjmp	.+22     	; 0xfc8 <MainTask+0xa0>
     fb2:	10 92 74 2d 	sts	0x2D74, r1
     fb6:	10 92 75 2d 	sts	0x2D75, r1
     fba:	10 92 76 2d 	sts	0x2D76, r1
     fbe:	10 92 77 2d 	sts	0x2D77, r1
     fc2:	80 e6       	ldi	r24, 0x60	; 96
     fc4:	9c e2       	ldi	r25, 0x2C	; 44
     fc6:	b9 db       	rcall	.-2190   	; 0x73a <env_save>
     fc8:	22 e3       	ldi	r18, 0x32	; 50
     fca:	30 e0       	ldi	r19, 0x00	; 0
     fcc:	40 e0       	ldi	r20, 0x00	; 0
     fce:	60 e0       	ldi	r22, 0x00	; 0
     fd0:	80 e0       	ldi	r24, 0x00	; 0
     fd2:	5b d5       	rcall	.+2742   	; 0x1a8a <OSTimeDlyHMSM>
     fd4:	f9 cf       	rjmp	.-14     	; 0xfc8 <MainTask+0xa0>

00000fd6 <main>:
     fd6:	8f 92       	push	r8
     fd8:	9f 92       	push	r9
     fda:	af 92       	push	r10
     fdc:	bf 92       	push	r11
     fde:	cf 92       	push	r12
     fe0:	df 92       	push	r13
     fe2:	ef 92       	push	r14
     fe4:	ff 92       	push	r15
     fe6:	0f 93       	push	r16
     fe8:	1f 93       	push	r17
     fea:	23 df       	rcall	.-442    	; 0xe32 <setClockTo32MHz>
     fec:	b1 d5       	rcall	.+2914   	; 0x1b50 <port_init>
     fee:	b1 d5       	rcall	.+2914   	; 0x1b52 <spi_init>
     ff0:	68 de       	rcall	.-816    	; 0xcc2 <lcd_start>
     ff2:	f0 de       	rcall	.-544    	; 0xdd4 <lcd_init>
     ff4:	df de       	rcall	.-578    	; 0xdb4 <lcd_clear>
     ff6:	60 e0       	ldi	r22, 0x00	; 0
     ff8:	80 e0       	ldi	r24, 0x00	; 0
     ffa:	d5 de       	rcall	.-598    	; 0xda6 <lcd_position>
     ffc:	83 ef       	ldi	r24, 0xF3	; 243
     ffe:	91 e2       	ldi	r25, 0x21	; 33
    1000:	a8 de       	rcall	.-688    	; 0xd52 <lcd_prString>
    1002:	51 d1       	rcall	.+674    	; 0x12a6 <OSInit>
    1004:	1f 92       	push	r1
    1006:	83 e0       	ldi	r24, 0x03	; 3
    1008:	8f 93       	push	r24
    100a:	81 2c       	mov	r8, r1
    100c:	91 2c       	mov	r9, r1
    100e:	2e e5       	ldi	r18, 0x5E	; 94
    1010:	a2 2e       	mov	r10, r18
    1012:	bb 24       	eor	r11, r11
    1014:	b3 94       	inc	r11
    1016:	c1 2c       	mov	r12, r1
    1018:	d1 2c       	mov	r13, r1
    101a:	39 e7       	ldi	r19, 0x79	; 121
    101c:	e3 2e       	mov	r14, r19
    101e:	3a e2       	ldi	r19, 0x2A	; 42
    1020:	f3 2e       	mov	r15, r19
    1022:	02 e0       	ldi	r16, 0x02	; 2
    1024:	10 e0       	ldi	r17, 0x00	; 0
    1026:	22 e0       	ldi	r18, 0x02	; 2
    1028:	46 ed       	ldi	r20, 0xD6	; 214
    102a:	5b e2       	ldi	r21, 0x2B	; 43
    102c:	60 e0       	ldi	r22, 0x00	; 0
    102e:	70 e0       	ldi	r23, 0x00	; 0
    1030:	84 e9       	ldi	r24, 0x94	; 148
    1032:	97 e0       	ldi	r25, 0x07	; 7
    1034:	6a d4       	rcall	.+2260   	; 0x190a <OSTaskCreateExt>
    1036:	98 d0       	rcall	.+304    	; 0x1168 <OSStart>
    1038:	0f 90       	pop	r0
    103a:	0f 90       	pop	r0
    103c:	80 e0       	ldi	r24, 0x00	; 0
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	1f 91       	pop	r17
    1042:	0f 91       	pop	r16
    1044:	ff 90       	pop	r15
    1046:	ef 90       	pop	r14
    1048:	df 90       	pop	r13
    104a:	cf 90       	pop	r12
    104c:	bf 90       	pop	r11
    104e:	af 90       	pop	r10
    1050:	9f 90       	pop	r9
    1052:	8f 90       	pop	r8
    1054:	08 95       	ret

00001056 <OS_SchedNew>:
    1056:	e0 91 f6 2e 	lds	r30, 0x2EF6
    105a:	f0 e0       	ldi	r31, 0x00	; 0
    105c:	ee 55       	subi	r30, 0x5E	; 94
    105e:	fd 4d       	sbci	r31, 0xDD	; 221
    1060:	90 81       	ld	r25, Z
    1062:	e9 2f       	mov	r30, r25
    1064:	f0 e0       	ldi	r31, 0x00	; 0
    1066:	e9 50       	subi	r30, 0x09	; 9
    1068:	f1 4d       	sbci	r31, 0xD1	; 209
    106a:	e0 81       	ld	r30, Z
    106c:	f0 e0       	ldi	r31, 0x00	; 0
    106e:	ee 55       	subi	r30, 0x5E	; 94
    1070:	fd 4d       	sbci	r31, 0xDD	; 221
    1072:	80 81       	ld	r24, Z
    1074:	28 e0       	ldi	r18, 0x08	; 8
    1076:	92 9f       	mul	r25, r18
    1078:	80 0d       	add	r24, r0
    107a:	11 24       	eor	r1, r1
    107c:	80 93 c5 2e 	sts	0x2EC5, r24
    1080:	08 95       	ret

00001082 <OS_TaskIdle>:
    1082:	40 da       	rcall	.-2944   	; 0x504 <OS_CPU_SR_Save>
    1084:	40 91 c1 2e 	lds	r20, 0x2EC1
    1088:	50 91 c2 2e 	lds	r21, 0x2EC2
    108c:	60 91 c3 2e 	lds	r22, 0x2EC3
    1090:	70 91 c4 2e 	lds	r23, 0x2EC4
    1094:	4f 5f       	subi	r20, 0xFF	; 255
    1096:	5f 4f       	sbci	r21, 0xFF	; 255
    1098:	6f 4f       	sbci	r22, 0xFF	; 255
    109a:	7f 4f       	sbci	r23, 0xFF	; 255
    109c:	40 93 c1 2e 	sts	0x2EC1, r20
    10a0:	50 93 c2 2e 	sts	0x2EC2, r21
    10a4:	60 93 c3 2e 	sts	0x2EC3, r22
    10a8:	70 93 c4 2e 	sts	0x2EC4, r23
    10ac:	2e da       	rcall	.-2980   	; 0x50a <OS_CPU_SR_Restore>
    10ae:	08 d3       	rcall	.+1552   	; 0x16c0 <OSTaskIdleHook>
    10b0:	e8 cf       	rjmp	.-48     	; 0x1082 <OS_TaskIdle>

000010b2 <OSIntExit>:
    10b2:	cf 93       	push	r28
    10b4:	df 93       	push	r29
    10b6:	1f 92       	push	r1
    10b8:	cd b7       	in	r28, 0x3d	; 61
    10ba:	de b7       	in	r29, 0x3e	; 62
    10bc:	80 91 c0 2e 	lds	r24, 0x2EC0
    10c0:	81 30       	cpi	r24, 0x01	; 1
    10c2:	09 f0       	breq	.+2      	; 0x10c6 <OSIntExit+0x14>
    10c4:	4d c0       	rjmp	.+154    	; 0x1160 <OSIntExit+0xae>
    10c6:	1e da       	rcall	.-3012   	; 0x504 <OS_CPU_SR_Save>
    10c8:	90 91 01 2f 	lds	r25, 0x2F01
    10cc:	99 23       	and	r25, r25
    10ce:	19 f0       	breq	.+6      	; 0x10d6 <OSIntExit+0x24>
    10d0:	91 50       	subi	r25, 0x01	; 1
    10d2:	90 93 01 2f 	sts	0x2F01, r25
    10d6:	90 91 01 2f 	lds	r25, 0x2F01
    10da:	91 11       	cpse	r25, r1
    10dc:	3d c0       	rjmp	.+122    	; 0x1158 <OSIntExit+0xa6>
    10de:	90 91 bf 2e 	lds	r25, 0x2EBF
    10e2:	91 11       	cpse	r25, r1
    10e4:	39 c0       	rjmp	.+114    	; 0x1158 <OSIntExit+0xa6>
    10e6:	89 83       	std	Y+1, r24	; 0x01
    10e8:	b6 df       	rcall	.-148    	; 0x1056 <OS_SchedNew>
    10ea:	90 91 c5 2e 	lds	r25, 0x2EC5
    10ee:	e9 2f       	mov	r30, r25
    10f0:	f0 e0       	ldi	r31, 0x00	; 0
    10f2:	ee 0f       	add	r30, r30
    10f4:	ff 1f       	adc	r31, r31
    10f6:	e6 5e       	subi	r30, 0xE6	; 230
    10f8:	fa 4c       	sbci	r31, 0xCA	; 202
    10fa:	01 90       	ld	r0, Z+
    10fc:	f0 81       	ld	r31, Z
    10fe:	e0 2d       	mov	r30, r0
    1100:	e0 93 f4 2e 	sts	0x2EF4, r30
    1104:	f0 93 f5 2e 	sts	0x2EF5, r31
    1108:	20 91 e9 2e 	lds	r18, 0x2EE9
    110c:	89 81       	ldd	r24, Y+1	; 0x01
    110e:	92 17       	cp	r25, r18
    1110:	19 f1       	breq	.+70     	; 0x1158 <OSIntExit+0xa6>
    1112:	40 a5       	ldd	r20, Z+40	; 0x28
    1114:	51 a5       	ldd	r21, Z+41	; 0x29
    1116:	62 a5       	ldd	r22, Z+42	; 0x2a
    1118:	73 a5       	ldd	r23, Z+43	; 0x2b
    111a:	4f 5f       	subi	r20, 0xFF	; 255
    111c:	5f 4f       	sbci	r21, 0xFF	; 255
    111e:	6f 4f       	sbci	r22, 0xFF	; 255
    1120:	7f 4f       	sbci	r23, 0xFF	; 255
    1122:	40 a7       	std	Z+40, r20	; 0x28
    1124:	51 a7       	std	Z+41, r21	; 0x29
    1126:	62 a7       	std	Z+42, r22	; 0x2a
    1128:	73 a7       	std	Z+43, r23	; 0x2b
    112a:	40 91 ed 2e 	lds	r20, 0x2EED
    112e:	50 91 ee 2e 	lds	r21, 0x2EEE
    1132:	60 91 ef 2e 	lds	r22, 0x2EEF
    1136:	70 91 f0 2e 	lds	r23, 0x2EF0
    113a:	4f 5f       	subi	r20, 0xFF	; 255
    113c:	5f 4f       	sbci	r21, 0xFF	; 255
    113e:	6f 4f       	sbci	r22, 0xFF	; 255
    1140:	7f 4f       	sbci	r23, 0xFF	; 255
    1142:	40 93 ed 2e 	sts	0x2EED, r20
    1146:	50 93 ee 2e 	sts	0x2EEE, r21
    114a:	60 93 ef 2e 	sts	0x2EEF, r22
    114e:	70 93 f0 2e 	sts	0x2EF0, r23
    1152:	89 83       	std	Y+1, r24	; 0x01
    1154:	8c da       	rcall	.-2792   	; 0x66e <OSIntCtxSw>
    1156:	89 81       	ldd	r24, Y+1	; 0x01
    1158:	0f 90       	pop	r0
    115a:	df 91       	pop	r29
    115c:	cf 91       	pop	r28
    115e:	d5 c9       	rjmp	.-3158   	; 0x50a <OS_CPU_SR_Restore>
    1160:	0f 90       	pop	r0
    1162:	df 91       	pop	r29
    1164:	cf 91       	pop	r28
    1166:	08 95       	ret

00001168 <OSStart>:
    1168:	80 91 c0 2e 	lds	r24, 0x2EC0
    116c:	81 11       	cpse	r24, r1
    116e:	15 c0       	rjmp	.+42     	; 0x119a <OSStart+0x32>
    1170:	72 df       	rcall	.-284    	; 0x1056 <OS_SchedNew>
    1172:	e0 91 c5 2e 	lds	r30, 0x2EC5
    1176:	e0 93 e9 2e 	sts	0x2EE9, r30
    117a:	f0 e0       	ldi	r31, 0x00	; 0
    117c:	ee 0f       	add	r30, r30
    117e:	ff 1f       	adc	r31, r31
    1180:	e6 5e       	subi	r30, 0xE6	; 230
    1182:	fa 4c       	sbci	r31, 0xCA	; 202
    1184:	80 81       	ld	r24, Z
    1186:	91 81       	ldd	r25, Z+1	; 0x01
    1188:	80 93 f4 2e 	sts	0x2EF4, r24
    118c:	90 93 f5 2e 	sts	0x2EF5, r25
    1190:	80 93 02 2f 	sts	0x2F02, r24
    1194:	90 93 03 2f 	sts	0x2F03, r25
    1198:	ba c9       	rjmp	.-3212   	; 0x50e <OSStartHighRdy>
    119a:	08 95       	ret

0000119c <OSTimeTick>:
    119c:	1f 93       	push	r17
    119e:	cf 93       	push	r28
    11a0:	df 93       	push	r29
    11a2:	0f d3       	rcall	.+1566   	; 0x17c2 <OSTimeTickHook>
    11a4:	af d9       	rcall	.-3234   	; 0x504 <OS_CPU_SR_Save>
    11a6:	40 91 04 2f 	lds	r20, 0x2F04
    11aa:	50 91 05 2f 	lds	r21, 0x2F05
    11ae:	60 91 06 2f 	lds	r22, 0x2F06
    11b2:	70 91 07 2f 	lds	r23, 0x2F07
    11b6:	4f 5f       	subi	r20, 0xFF	; 255
    11b8:	5f 4f       	sbci	r21, 0xFF	; 255
    11ba:	6f 4f       	sbci	r22, 0xFF	; 255
    11bc:	7f 4f       	sbci	r23, 0xFF	; 255
    11be:	40 93 04 2f 	sts	0x2F04, r20
    11c2:	50 93 05 2f 	sts	0x2F05, r21
    11c6:	60 93 06 2f 	sts	0x2F06, r22
    11ca:	70 93 07 2f 	sts	0x2F07, r23
    11ce:	9d d9       	rcall	.-3270   	; 0x50a <OS_CPU_SR_Restore>
    11d0:	90 91 c0 2e 	lds	r25, 0x2EC0
    11d4:	91 30       	cpi	r25, 0x01	; 1
    11d6:	09 f0       	breq	.+2      	; 0x11da <OSTimeTick+0x3e>
    11d8:	4a c0       	rjmp	.+148    	; 0x126e <OSTimeTick+0xd2>
    11da:	80 91 ec 2e 	lds	r24, 0x2EEC
    11de:	81 30       	cpi	r24, 0x01	; 1
    11e0:	09 f4       	brne	.+2      	; 0x11e4 <OSTimeTick+0x48>
    11e2:	45 c0       	rjmp	.+138    	; 0x126e <OSTimeTick+0xd2>
    11e4:	38 f0       	brcs	.+14     	; 0x11f4 <OSTimeTick+0x58>
    11e6:	82 30       	cpi	r24, 0x02	; 2
    11e8:	19 f4       	brne	.+6      	; 0x11f0 <OSTimeTick+0x54>
    11ea:	90 93 ec 2e 	sts	0x2EEC, r25
    11ee:	02 c0       	rjmp	.+4      	; 0x11f4 <OSTimeTick+0x58>
    11f0:	10 92 ec 2e 	sts	0x2EEC, r1
    11f4:	c0 91 ea 2e 	lds	r28, 0x2EEA
    11f8:	d0 91 eb 2e 	lds	r29, 0x2EEB
    11fc:	11 e0       	ldi	r17, 0x01	; 1
    11fe:	8a a1       	ldd	r24, Y+34	; 0x22
    1200:	8f 33       	cpi	r24, 0x3F	; 63
    1202:	a9 f1       	breq	.+106    	; 0x126e <OSTimeTick+0xd2>
    1204:	7f d9       	rcall	.-3330   	; 0x504 <OS_CPU_SR_Save>
    1206:	4c 8d       	ldd	r20, Y+28	; 0x1c
    1208:	5d 8d       	ldd	r21, Y+29	; 0x1d
    120a:	6e 8d       	ldd	r22, Y+30	; 0x1e
    120c:	7f 8d       	ldd	r23, Y+31	; 0x1f
    120e:	41 15       	cp	r20, r1
    1210:	51 05       	cpc	r21, r1
    1212:	61 05       	cpc	r22, r1
    1214:	71 05       	cpc	r23, r1
    1216:	31 f1       	breq	.+76     	; 0x1264 <OSTimeTick+0xc8>
    1218:	41 50       	subi	r20, 0x01	; 1
    121a:	51 09       	sbc	r21, r1
    121c:	61 09       	sbc	r22, r1
    121e:	71 09       	sbc	r23, r1
    1220:	4c 8f       	std	Y+28, r20	; 0x1c
    1222:	5d 8f       	std	Y+29, r21	; 0x1d
    1224:	6e 8f       	std	Y+30, r22	; 0x1e
    1226:	7f 8f       	std	Y+31, r23	; 0x1f
    1228:	45 2b       	or	r20, r21
    122a:	46 2b       	or	r20, r22
    122c:	47 2b       	or	r20, r23
    122e:	d1 f4       	brne	.+52     	; 0x1264 <OSTimeTick+0xc8>
    1230:	98 a1       	ldd	r25, Y+32	; 0x20
    1232:	29 2f       	mov	r18, r25
    1234:	27 73       	andi	r18, 0x37	; 55
    1236:	21 f0       	breq	.+8      	; 0x1240 <OSTimeTick+0xa4>
    1238:	98 7c       	andi	r25, 0xC8	; 200
    123a:	98 a3       	std	Y+32, r25	; 0x20
    123c:	19 a3       	std	Y+33, r17	; 0x21
    123e:	01 c0       	rjmp	.+2      	; 0x1242 <OSTimeTick+0xa6>
    1240:	19 a2       	std	Y+33, r1	; 0x21
    1242:	98 a1       	ldd	r25, Y+32	; 0x20
    1244:	93 fd       	sbrc	r25, 3
    1246:	0e c0       	rjmp	.+28     	; 0x1264 <OSTimeTick+0xc8>
    1248:	90 91 f6 2e 	lds	r25, 0x2EF6
    124c:	2e a1       	ldd	r18, Y+38	; 0x26
    124e:	92 2b       	or	r25, r18
    1250:	90 93 f6 2e 	sts	0x2EF6, r25
    1254:	ec a1       	ldd	r30, Y+36	; 0x24
    1256:	f0 e0       	ldi	r31, 0x00	; 0
    1258:	e9 50       	subi	r30, 0x09	; 9
    125a:	f1 4d       	sbci	r31, 0xD1	; 209
    125c:	90 81       	ld	r25, Z
    125e:	2d a1       	ldd	r18, Y+37	; 0x25
    1260:	92 2b       	or	r25, r18
    1262:	90 83       	st	Z, r25
    1264:	0e 84       	ldd	r0, Y+14	; 0x0e
    1266:	df 85       	ldd	r29, Y+15	; 0x0f
    1268:	c0 2d       	mov	r28, r0
    126a:	4f d9       	rcall	.-3426   	; 0x50a <OS_CPU_SR_Restore>
    126c:	c8 cf       	rjmp	.-112    	; 0x11fe <OSTimeTick+0x62>
    126e:	df 91       	pop	r29
    1270:	cf 91       	pop	r28
    1272:	1f 91       	pop	r17
    1274:	08 95       	ret

00001276 <OS_EventWaitListInit>:
    1276:	fc 01       	movw	r30, r24
    1278:	15 82       	std	Z+5, r1	; 0x05
    127a:	20 e0       	ldi	r18, 0x00	; 0
    127c:	30 e0       	ldi	r19, 0x00	; 0
    127e:	fc 01       	movw	r30, r24
    1280:	e2 0f       	add	r30, r18
    1282:	f3 1f       	adc	r31, r19
    1284:	16 82       	std	Z+6, r1	; 0x06
    1286:	2f 5f       	subi	r18, 0xFF	; 255
    1288:	3f 4f       	sbci	r19, 0xFF	; 255
    128a:	28 30       	cpi	r18, 0x08	; 8
    128c:	31 05       	cpc	r19, r1
    128e:	b9 f7       	brne	.-18     	; 0x127e <OS_EventWaitListInit+0x8>
    1290:	08 95       	ret

00001292 <OS_MemClr>:
    1292:	68 0f       	add	r22, r24
    1294:	79 1f       	adc	r23, r25
    1296:	86 17       	cp	r24, r22
    1298:	97 07       	cpc	r25, r23
    129a:	21 f0       	breq	.+8      	; 0x12a4 <OS_MemClr+0x12>
    129c:	fc 01       	movw	r30, r24
    129e:	11 92       	st	Z+, r1
    12a0:	cf 01       	movw	r24, r30
    12a2:	f9 cf       	rjmp	.-14     	; 0x1296 <OS_MemClr+0x4>
    12a4:	08 95       	ret

000012a6 <OSInit>:
    12a6:	8f 92       	push	r8
    12a8:	9f 92       	push	r9
    12aa:	af 92       	push	r10
    12ac:	bf 92       	push	r11
    12ae:	cf 92       	push	r12
    12b0:	df 92       	push	r13
    12b2:	ef 92       	push	r14
    12b4:	ff 92       	push	r15
    12b6:	0f 93       	push	r16
    12b8:	1f 93       	push	r17
    12ba:	cf 93       	push	r28
    12bc:	df 93       	push	r29
    12be:	1f 92       	push	r1
    12c0:	cd b7       	in	r28, 0x3d	; 61
    12c2:	de b7       	in	r29, 0x3e	; 62
    12c4:	fa d1       	rcall	.+1012   	; 0x16ba <OSInitHookBegin>
    12c6:	10 92 04 2f 	sts	0x2F04, r1
    12ca:	10 92 05 2f 	sts	0x2F05, r1
    12ce:	10 92 06 2f 	sts	0x2F06, r1
    12d2:	10 92 07 2f 	sts	0x2F07, r1
    12d6:	10 92 01 2f 	sts	0x2F01, r1
    12da:	10 92 bf 2e 	sts	0x2EBF, r1
    12de:	10 92 f3 2e 	sts	0x2EF3, r1
    12e2:	10 92 c0 2e 	sts	0x2EC0, r1
    12e6:	10 92 ed 2e 	sts	0x2EED, r1
    12ea:	10 92 ee 2e 	sts	0x2EEE, r1
    12ee:	10 92 ef 2e 	sts	0x2EEF, r1
    12f2:	10 92 f0 2e 	sts	0x2EF0, r1
    12f6:	10 92 c1 2e 	sts	0x2EC1, r1
    12fa:	10 92 c2 2e 	sts	0x2EC2, r1
    12fe:	10 92 c3 2e 	sts	0x2EC3, r1
    1302:	10 92 c4 2e 	sts	0x2EC4, r1
    1306:	10 92 f6 2e 	sts	0x2EF6, r1
    130a:	e7 ef       	ldi	r30, 0xF7	; 247
    130c:	fe e2       	ldi	r31, 0x2E	; 46
    130e:	11 92       	st	Z+, r1
    1310:	4e e2       	ldi	r20, 0x2E	; 46
    1312:	ef 3f       	cpi	r30, 0xFF	; 255
    1314:	f4 07       	cpc	r31, r20
    1316:	d9 f7       	brne	.-10     	; 0x130e <OSInit+0x68>
    1318:	10 92 e9 2e 	sts	0x2EE9, r1
    131c:	10 92 c5 2e 	sts	0x2EC5, r1
    1320:	10 92 f4 2e 	sts	0x2EF4, r1
    1324:	10 92 f5 2e 	sts	0x2EF5, r1
    1328:	10 92 02 2f 	sts	0x2F02, r1
    132c:	10 92 03 2f 	sts	0x2F03, r1
    1330:	60 e4       	ldi	r22, 0x40	; 64
    1332:	75 e0       	ldi	r23, 0x05	; 5
    1334:	88 ed       	ldi	r24, 0xD8	; 216
    1336:	9f e2       	ldi	r25, 0x2F	; 47
    1338:	ac df       	rcall	.-168    	; 0x1292 <OS_MemClr>
    133a:	60 e8       	ldi	r22, 0x80	; 128
    133c:	70 e0       	ldi	r23, 0x00	; 0
    133e:	8a e1       	ldi	r24, 0x1A	; 26
    1340:	95 e3       	ldi	r25, 0x35	; 53
    1342:	a7 df       	rcall	.-178    	; 0x1292 <OS_MemClr>
    1344:	e8 ed       	ldi	r30, 0xD8	; 216
    1346:	ff e2       	ldi	r31, 0x2F	; 47
    1348:	22 e9       	ldi	r18, 0x92	; 146
    134a:	32 e2       	ldi	r19, 0x22	; 34
    134c:	cf 01       	movw	r24, r30
    134e:	80 5c       	subi	r24, 0xC0	; 192
    1350:	9f 4f       	sbci	r25, 0xFF	; 255
    1352:	86 87       	std	Z+14, r24	; 0x0e
    1354:	97 87       	std	Z+15, r25	; 0x0f
    1356:	22 af       	std	Z+58, r18	; 0x3a
    1358:	33 af       	std	Z+59, r19	; 0x3b
    135a:	44 e3       	ldi	r20, 0x34	; 52
    135c:	88 3d       	cpi	r24, 0xD8	; 216
    135e:	94 07       	cpc	r25, r20
    1360:	11 f0       	breq	.+4      	; 0x1366 <OSInit+0xc0>
    1362:	fc 01       	movw	r30, r24
    1364:	f3 cf       	rjmp	.-26     	; 0x134c <OSInit+0xa6>
    1366:	10 92 e6 34 	sts	0x34E6, r1
    136a:	10 92 e7 34 	sts	0x34E7, r1
    136e:	82 e9       	ldi	r24, 0x92	; 146
    1370:	92 e2       	ldi	r25, 0x22	; 34
    1372:	80 93 12 35 	sts	0x3512, r24
    1376:	90 93 13 35 	sts	0x3513, r25
    137a:	10 92 ea 2e 	sts	0x2EEA, r1
    137e:	10 92 eb 2e 	sts	0x2EEB, r1
    1382:	88 ed       	ldi	r24, 0xD8	; 216
    1384:	9f e2       	ldi	r25, 0x2F	; 47
    1386:	80 93 f1 2e 	sts	0x2EF1, r24
    138a:	90 93 f2 2e 	sts	0x2EF2, r25
    138e:	60 e5       	ldi	r22, 0x50	; 80
    1390:	70 e0       	ldi	r23, 0x00	; 0
    1392:	88 e8       	ldi	r24, 0x88	; 136
    1394:	9f e2       	ldi	r25, 0x2F	; 47
    1396:	7d df       	rcall	.-262    	; 0x1292 <OS_MemClr>
    1398:	e8 e8       	ldi	r30, 0x88	; 136
    139a:	ff e2       	ldi	r31, 0x2F	; 47
    139c:	22 e9       	ldi	r18, 0x92	; 146
    139e:	32 e2       	ldi	r19, 0x22	; 34
    13a0:	cf 01       	movw	r24, r30
    13a2:	40 96       	adiw	r24, 0x10	; 16
    13a4:	10 82       	st	Z, r1
    13a6:	81 83       	std	Z+1, r24	; 0x01
    13a8:	92 83       	std	Z+2, r25	; 0x02
    13aa:	26 87       	std	Z+14, r18	; 0x0e
    13ac:	37 87       	std	Z+15, r19	; 0x0f
    13ae:	4f e2       	ldi	r20, 0x2F	; 47
    13b0:	88 3c       	cpi	r24, 0xC8	; 200
    13b2:	94 07       	cpc	r25, r20
    13b4:	11 f0       	breq	.+4      	; 0x13ba <OSInit+0x114>
    13b6:	fc 01       	movw	r30, r24
    13b8:	f3 cf       	rjmp	.-26     	; 0x13a0 <OSInit+0xfa>
    13ba:	10 92 c8 2f 	sts	0x2FC8, r1
    13be:	10 92 c9 2f 	sts	0x2FC9, r1
    13c2:	10 92 ca 2f 	sts	0x2FCA, r1
    13c6:	82 e9       	ldi	r24, 0x92	; 146
    13c8:	92 e2       	ldi	r25, 0x22	; 34
    13ca:	80 93 d6 2f 	sts	0x2FD6, r24
    13ce:	90 93 d7 2f 	sts	0x2FD7, r25
    13d2:	88 e8       	ldi	r24, 0x88	; 136
    13d4:	9f e2       	ldi	r25, 0x2F	; 47
    13d6:	80 93 ff 2e 	sts	0x2EFF, r24
    13da:	90 93 00 2f 	sts	0x2F00, r25
    13de:	f4 d1       	rcall	.+1000   	; 0x17c8 <OS_FlagInit>
    13e0:	1f 92       	push	r1
    13e2:	83 e0       	ldi	r24, 0x03	; 3
    13e4:	8f 93       	push	r24
    13e6:	81 2c       	mov	r8, r1
    13e8:	91 2c       	mov	r9, r1
    13ea:	40 e8       	ldi	r20, 0x80	; 128
    13ec:	a4 2e       	mov	r10, r20
    13ee:	b1 2c       	mov	r11, r1
    13f0:	c1 2c       	mov	r12, r1
    13f2:	d1 2c       	mov	r13, r1
    13f4:	58 e0       	ldi	r21, 0x08	; 8
    13f6:	e5 2e       	mov	r14, r21
    13f8:	5f e2       	ldi	r21, 0x2F	; 47
    13fa:	f5 2e       	mov	r15, r21
    13fc:	0f ef       	ldi	r16, 0xFF	; 255
    13fe:	1f ef       	ldi	r17, 0xFF	; 255
    1400:	2f e3       	ldi	r18, 0x3F	; 63
    1402:	47 e8       	ldi	r20, 0x87	; 135
    1404:	5f e2       	ldi	r21, 0x2F	; 47
    1406:	60 e0       	ldi	r22, 0x00	; 0
    1408:	70 e0       	ldi	r23, 0x00	; 0
    140a:	81 e4       	ldi	r24, 0x41	; 65
    140c:	98 e0       	ldi	r25, 0x08	; 8
    140e:	7d d2       	rcall	.+1274   	; 0x190a <OSTaskCreateExt>
    1410:	ae 01       	movw	r20, r28
    1412:	4f 5f       	subi	r20, 0xFF	; 255
    1414:	5f 4f       	sbci	r21, 0xFF	; 255
    1416:	64 e9       	ldi	r22, 0x94	; 148
    1418:	72 e2       	ldi	r23, 0x22	; 34
    141a:	8f e3       	ldi	r24, 0x3F	; 63
    141c:	2e d2       	rcall	.+1116   	; 0x187a <OSTaskNameSet>
    141e:	4e d1       	rcall	.+668    	; 0x16bc <OSInitHookEnd>
    1420:	d2 d1       	rcall	.+932    	; 0x17c6 <OSDebugInit>
    1422:	0f 90       	pop	r0
    1424:	0f 90       	pop	r0
    1426:	0f 90       	pop	r0
    1428:	df 91       	pop	r29
    142a:	cf 91       	pop	r28
    142c:	1f 91       	pop	r17
    142e:	0f 91       	pop	r16
    1430:	ff 90       	pop	r15
    1432:	ef 90       	pop	r14
    1434:	df 90       	pop	r13
    1436:	cf 90       	pop	r12
    1438:	bf 90       	pop	r11
    143a:	af 90       	pop	r10
    143c:	9f 90       	pop	r9
    143e:	8f 90       	pop	r8
    1440:	08 95       	ret

00001442 <OS_Sched>:
    1442:	cf 93       	push	r28
    1444:	df 93       	push	r29
    1446:	1f 92       	push	r1
    1448:	cd b7       	in	r28, 0x3d	; 61
    144a:	de b7       	in	r29, 0x3e	; 62
    144c:	5b d8       	rcall	.-3914   	; 0x504 <OS_CPU_SR_Save>
    144e:	90 91 01 2f 	lds	r25, 0x2F01
    1452:	91 11       	cpse	r25, r1
    1454:	3d c0       	rjmp	.+122    	; 0x14d0 <OS_Sched+0x8e>
    1456:	90 91 bf 2e 	lds	r25, 0x2EBF
    145a:	91 11       	cpse	r25, r1
    145c:	39 c0       	rjmp	.+114    	; 0x14d0 <OS_Sched+0x8e>
    145e:	89 83       	std	Y+1, r24	; 0x01
    1460:	fa dd       	rcall	.-1036   	; 0x1056 <OS_SchedNew>
    1462:	90 91 c5 2e 	lds	r25, 0x2EC5
    1466:	e9 2f       	mov	r30, r25
    1468:	f0 e0       	ldi	r31, 0x00	; 0
    146a:	ee 0f       	add	r30, r30
    146c:	ff 1f       	adc	r31, r31
    146e:	e6 5e       	subi	r30, 0xE6	; 230
    1470:	fa 4c       	sbci	r31, 0xCA	; 202
    1472:	01 90       	ld	r0, Z+
    1474:	f0 81       	ld	r31, Z
    1476:	e0 2d       	mov	r30, r0
    1478:	e0 93 f4 2e 	sts	0x2EF4, r30
    147c:	f0 93 f5 2e 	sts	0x2EF5, r31
    1480:	20 91 e9 2e 	lds	r18, 0x2EE9
    1484:	89 81       	ldd	r24, Y+1	; 0x01
    1486:	92 17       	cp	r25, r18
    1488:	19 f1       	breq	.+70     	; 0x14d0 <OS_Sched+0x8e>
    148a:	40 a5       	ldd	r20, Z+40	; 0x28
    148c:	51 a5       	ldd	r21, Z+41	; 0x29
    148e:	62 a5       	ldd	r22, Z+42	; 0x2a
    1490:	73 a5       	ldd	r23, Z+43	; 0x2b
    1492:	4f 5f       	subi	r20, 0xFF	; 255
    1494:	5f 4f       	sbci	r21, 0xFF	; 255
    1496:	6f 4f       	sbci	r22, 0xFF	; 255
    1498:	7f 4f       	sbci	r23, 0xFF	; 255
    149a:	40 a7       	std	Z+40, r20	; 0x28
    149c:	51 a7       	std	Z+41, r21	; 0x29
    149e:	62 a7       	std	Z+42, r22	; 0x2a
    14a0:	73 a7       	std	Z+43, r23	; 0x2b
    14a2:	40 91 ed 2e 	lds	r20, 0x2EED
    14a6:	50 91 ee 2e 	lds	r21, 0x2EEE
    14aa:	60 91 ef 2e 	lds	r22, 0x2EEF
    14ae:	70 91 f0 2e 	lds	r23, 0x2EF0
    14b2:	4f 5f       	subi	r20, 0xFF	; 255
    14b4:	5f 4f       	sbci	r21, 0xFF	; 255
    14b6:	6f 4f       	sbci	r22, 0xFF	; 255
    14b8:	7f 4f       	sbci	r23, 0xFF	; 255
    14ba:	40 93 ed 2e 	sts	0x2EED, r20
    14be:	50 93 ee 2e 	sts	0x2EEE, r21
    14c2:	60 93 ef 2e 	sts	0x2EEF, r22
    14c6:	70 93 f0 2e 	sts	0x2EF0, r23
    14ca:	89 83       	std	Y+1, r24	; 0x01
    14cc:	5c d8       	rcall	.-3912   	; 0x586 <OSCtxSw>
    14ce:	89 81       	ldd	r24, Y+1	; 0x01
    14d0:	0f 90       	pop	r0
    14d2:	df 91       	pop	r29
    14d4:	cf 91       	pop	r28
    14d6:	19 c8       	rjmp	.-4046   	; 0x50a <OS_CPU_SR_Restore>

000014d8 <OS_TCBInit>:
    14d8:	2f 92       	push	r2
    14da:	3f 92       	push	r3
    14dc:	4f 92       	push	r4
    14de:	5f 92       	push	r5
    14e0:	6f 92       	push	r6
    14e2:	7f 92       	push	r7
    14e4:	9f 92       	push	r9
    14e6:	af 92       	push	r10
    14e8:	bf 92       	push	r11
    14ea:	cf 92       	push	r12
    14ec:	df 92       	push	r13
    14ee:	ef 92       	push	r14
    14f0:	ff 92       	push	r15
    14f2:	0f 93       	push	r16
    14f4:	1f 93       	push	r17
    14f6:	cf 93       	push	r28
    14f8:	df 93       	push	r29
    14fa:	00 d0       	rcall	.+0      	; 0x14fc <OS_TCBInit+0x24>
    14fc:	00 d0       	rcall	.+0      	; 0x14fe <OS_TCBInit+0x26>
    14fe:	cd b7       	in	r28, 0x3d	; 61
    1500:	de b7       	in	r29, 0x3e	; 62
    1502:	98 2e       	mov	r9, r24
    1504:	69 83       	std	Y+1, r22	; 0x01
    1506:	7a 83       	std	Y+2, r23	; 0x02
    1508:	1a 01       	movw	r2, r20
    150a:	2b 83       	std	Y+3, r18	; 0x03
    150c:	3c 83       	std	Y+4, r19	; 0x04
    150e:	27 01       	movw	r4, r14
    1510:	38 01       	movw	r6, r16
    1512:	0e 94 82 02 	call	0x504	; 0x504 <OS_CPU_SR_Save>
    1516:	e0 90 f1 2e 	lds	r14, 0x2EF1
    151a:	f0 90 f2 2e 	lds	r15, 0x2EF2
    151e:	ed 82       	std	Y+5, r14	; 0x05
    1520:	fe 82       	std	Y+6, r15	; 0x06
    1522:	e1 14       	cp	r14, r1
    1524:	f1 04       	cpc	r15, r1
    1526:	09 f4       	brne	.+2      	; 0x152a <OS_TCBInit+0x52>
    1528:	b0 c0       	rjmp	.+352    	; 0x168a <OS_TCBInit+0x1b2>
    152a:	d7 01       	movw	r26, r14
    152c:	1e 96       	adiw	r26, 0x0e	; 14
    152e:	2d 91       	ld	r18, X+
    1530:	3c 91       	ld	r19, X
    1532:	1f 97       	sbiw	r26, 0x0f	; 15
    1534:	20 93 f1 2e 	sts	0x2EF1, r18
    1538:	30 93 f2 2e 	sts	0x2EF2, r19
    153c:	0e 94 85 02 	call	0x50a	; 0x50a <OS_CPU_SR_Restore>
    1540:	e9 80       	ldd	r14, Y+1	; 0x01
    1542:	fa 80       	ldd	r15, Y+2	; 0x02
    1544:	ed 81       	ldd	r30, Y+5	; 0x05
    1546:	fe 81       	ldd	r31, Y+6	; 0x06
    1548:	e0 82       	st	Z, r14
    154a:	f1 82       	std	Z+1, r15	; 0x01
    154c:	92 a2       	std	Z+34, r9	; 0x22
    154e:	10 a2       	std	Z+32, r1	; 0x20
    1550:	11 a2       	std	Z+33, r1	; 0x21
    1552:	14 8e       	std	Z+28, r1	; 0x1c
    1554:	15 8e       	std	Z+29, r1	; 0x1d
    1556:	16 8e       	std	Z+30, r1	; 0x1e
    1558:	17 8e       	std	Z+31, r1	; 0x1f
    155a:	c2 82       	std	Z+2, r12	; 0x02
    155c:	d3 82       	std	Z+3, r13	; 0x03
    155e:	46 82       	std	Z+6, r4	; 0x06
    1560:	57 82       	std	Z+7, r5	; 0x07
    1562:	60 86       	std	Z+8, r6	; 0x08
    1564:	71 86       	std	Z+9, r7	; 0x09
    1566:	24 82       	std	Z+4, r2	; 0x04
    1568:	35 82       	std	Z+5, r3	; 0x05
    156a:	a2 86       	std	Z+10, r10	; 0x0a
    156c:	b3 86       	std	Z+11, r11	; 0x0b
    156e:	2b 81       	ldd	r18, Y+3	; 0x03
    1570:	3c 81       	ldd	r19, Y+4	; 0x04
    1572:	24 87       	std	Z+12, r18	; 0x0c
    1574:	35 87       	std	Z+13, r19	; 0x0d
    1576:	17 a2       	std	Z+39, r1	; 0x27
    1578:	49 2d       	mov	r20, r9
    157a:	46 95       	lsr	r20
    157c:	46 95       	lsr	r20
    157e:	46 95       	lsr	r20
    1580:	44 a3       	std	Z+36, r20	; 0x24
    1582:	29 2d       	mov	r18, r9
    1584:	27 70       	andi	r18, 0x07	; 7
    1586:	23 a3       	std	Z+35, r18	; 0x23
    1588:	81 e0       	ldi	r24, 0x01	; 1
    158a:	90 e0       	ldi	r25, 0x00	; 0
    158c:	a0 e0       	ldi	r26, 0x00	; 0
    158e:	b0 e0       	ldi	r27, 0x00	; 0
    1590:	7c 01       	movw	r14, r24
    1592:	8d 01       	movw	r16, r26
    1594:	04 c0       	rjmp	.+8      	; 0x159e <OS_TCBInit+0xc6>
    1596:	ee 0c       	add	r14, r14
    1598:	ff 1c       	adc	r15, r15
    159a:	00 1f       	adc	r16, r16
    159c:	11 1f       	adc	r17, r17
    159e:	4a 95       	dec	r20
    15a0:	d2 f7       	brpl	.-12     	; 0x1596 <OS_TCBInit+0xbe>
    15a2:	e6 a2       	std	Z+38, r14	; 0x26
    15a4:	04 c0       	rjmp	.+8      	; 0x15ae <OS_TCBInit+0xd6>
    15a6:	88 0f       	add	r24, r24
    15a8:	99 1f       	adc	r25, r25
    15aa:	aa 1f       	adc	r26, r26
    15ac:	bb 1f       	adc	r27, r27
    15ae:	2a 95       	dec	r18
    15b0:	d2 f7       	brpl	.-12     	; 0x15a6 <OS_TCBInit+0xce>
    15b2:	85 a3       	std	Z+37, r24	; 0x25
    15b4:	12 8a       	std	Z+18, r1	; 0x12
    15b6:	13 8a       	std	Z+19, r1	; 0x13
    15b8:	14 8a       	std	Z+20, r1	; 0x14
    15ba:	15 8a       	std	Z+21, r1	; 0x15
    15bc:	10 8e       	std	Z+24, r1	; 0x18
    15be:	11 8e       	std	Z+25, r1	; 0x19
    15c0:	16 8a       	std	Z+22, r1	; 0x16
    15c2:	17 8a       	std	Z+23, r1	; 0x17
    15c4:	10 a6       	std	Z+40, r1	; 0x28
    15c6:	11 a6       	std	Z+41, r1	; 0x29
    15c8:	12 a6       	std	Z+42, r1	; 0x2a
    15ca:	13 a6       	std	Z+43, r1	; 0x2b
    15cc:	10 aa       	std	Z+48, r1	; 0x30
    15ce:	11 aa       	std	Z+49, r1	; 0x31
    15d0:	12 aa       	std	Z+50, r1	; 0x32
    15d2:	13 aa       	std	Z+51, r1	; 0x33
    15d4:	14 a6       	std	Z+44, r1	; 0x2c
    15d6:	15 a6       	std	Z+45, r1	; 0x2d
    15d8:	16 a6       	std	Z+46, r1	; 0x2e
    15da:	17 a6       	std	Z+47, r1	; 0x2f
    15dc:	14 aa       	std	Z+52, r1	; 0x34
    15de:	15 aa       	std	Z+53, r1	; 0x35
    15e0:	16 aa       	std	Z+54, r1	; 0x36
    15e2:	17 aa       	std	Z+55, r1	; 0x37
    15e4:	10 ae       	std	Z+56, r1	; 0x38
    15e6:	11 ae       	std	Z+57, r1	; 0x39
    15e8:	82 e9       	ldi	r24, 0x92	; 146
    15ea:	92 e2       	ldi	r25, 0x22	; 34
    15ec:	82 af       	std	Z+58, r24	; 0x3a
    15ee:	93 af       	std	Z+59, r25	; 0x3b
    15f0:	14 ae       	std	Z+60, r1	; 0x3c
    15f2:	15 ae       	std	Z+61, r1	; 0x3d
    15f4:	16 ae       	std	Z+62, r1	; 0x3e
    15f6:	17 ae       	std	Z+63, r1	; 0x3f
    15f8:	cf 01       	movw	r24, r30
    15fa:	e1 d0       	rcall	.+450    	; 0x17be <OSTCBInitHook>
    15fc:	0e 94 82 02 	call	0x504	; 0x504 <OS_CPU_SR_Save>
    1600:	e9 2d       	mov	r30, r9
    1602:	f0 e0       	ldi	r31, 0x00	; 0
    1604:	ee 0f       	add	r30, r30
    1606:	ff 1f       	adc	r31, r31
    1608:	e6 5e       	subi	r30, 0xE6	; 230
    160a:	fa 4c       	sbci	r31, 0xCA	; 202
    160c:	ed 80       	ldd	r14, Y+5	; 0x05
    160e:	fe 80       	ldd	r15, Y+6	; 0x06
    1610:	e0 82       	st	Z, r14
    1612:	f1 82       	std	Z+1, r15	; 0x01
    1614:	0e 94 85 02 	call	0x50a	; 0x50a <OS_CPU_SR_Restore>
    1618:	8d 81       	ldd	r24, Y+5	; 0x05
    161a:	9e 81       	ldd	r25, Y+6	; 0x06
    161c:	50 d0       	rcall	.+160    	; 0x16be <OSTaskCreateHook>
    161e:	0e 94 82 02 	call	0x504	; 0x504 <OS_CPU_SR_Save>
    1622:	e0 91 ea 2e 	lds	r30, 0x2EEA
    1626:	f0 91 eb 2e 	lds	r31, 0x2EEB
    162a:	d7 01       	movw	r26, r14
    162c:	1e 96       	adiw	r26, 0x0e	; 14
    162e:	ed 93       	st	X+, r30
    1630:	fc 93       	st	X, r31
    1632:	1f 97       	sbiw	r26, 0x0f	; 15
    1634:	50 96       	adiw	r26, 0x10	; 16
    1636:	1d 92       	st	X+, r1
    1638:	1c 92       	st	X, r1
    163a:	51 97       	sbiw	r26, 0x11	; 17
    163c:	30 97       	sbiw	r30, 0x00	; 0
    163e:	11 f0       	breq	.+4      	; 0x1644 <OS_TCBInit+0x16c>
    1640:	e0 8a       	std	Z+16, r14	; 0x10
    1642:	f1 8a       	std	Z+17, r15	; 0x11
    1644:	ed 80       	ldd	r14, Y+5	; 0x05
    1646:	fe 80       	ldd	r15, Y+6	; 0x06
    1648:	e0 92 ea 2e 	sts	0x2EEA, r14
    164c:	f0 92 eb 2e 	sts	0x2EEB, r15
    1650:	90 91 f6 2e 	lds	r25, 0x2EF6
    1654:	d7 01       	movw	r26, r14
    1656:	96 96       	adiw	r26, 0x26	; 38
    1658:	2c 91       	ld	r18, X
    165a:	96 97       	sbiw	r26, 0x26	; 38
    165c:	92 2b       	or	r25, r18
    165e:	90 93 f6 2e 	sts	0x2EF6, r25
    1662:	94 96       	adiw	r26, 0x24	; 36
    1664:	ec 91       	ld	r30, X
    1666:	94 97       	sbiw	r26, 0x24	; 36
    1668:	f0 e0       	ldi	r31, 0x00	; 0
    166a:	e9 50       	subi	r30, 0x09	; 9
    166c:	f1 4d       	sbci	r31, 0xD1	; 209
    166e:	90 81       	ld	r25, Z
    1670:	95 96       	adiw	r26, 0x25	; 37
    1672:	2c 91       	ld	r18, X
    1674:	92 2b       	or	r25, r18
    1676:	90 83       	st	Z, r25
    1678:	90 91 f3 2e 	lds	r25, 0x2EF3
    167c:	9f 5f       	subi	r25, 0xFF	; 255
    167e:	90 93 f3 2e 	sts	0x2EF3, r25
    1682:	0e 94 85 02 	call	0x50a	; 0x50a <OS_CPU_SR_Restore>
    1686:	80 e0       	ldi	r24, 0x00	; 0
    1688:	03 c0       	rjmp	.+6      	; 0x1690 <OS_TCBInit+0x1b8>
    168a:	0e 94 85 02 	call	0x50a	; 0x50a <OS_CPU_SR_Restore>
    168e:	82 e4       	ldi	r24, 0x42	; 66
    1690:	26 96       	adiw	r28, 0x06	; 6
    1692:	cd bf       	out	0x3d, r28	; 61
    1694:	de bf       	out	0x3e, r29	; 62
    1696:	df 91       	pop	r29
    1698:	cf 91       	pop	r28
    169a:	1f 91       	pop	r17
    169c:	0f 91       	pop	r16
    169e:	ff 90       	pop	r15
    16a0:	ef 90       	pop	r14
    16a2:	df 90       	pop	r13
    16a4:	cf 90       	pop	r12
    16a6:	bf 90       	pop	r11
    16a8:	af 90       	pop	r10
    16aa:	9f 90       	pop	r9
    16ac:	7f 90       	pop	r7
    16ae:	6f 90       	pop	r6
    16b0:	5f 90       	pop	r5
    16b2:	4f 90       	pop	r4
    16b4:	3f 90       	pop	r3
    16b6:	2f 90       	pop	r2
    16b8:	08 95       	ret

000016ba <OSInitHookBegin>:
    16ba:	08 95       	ret

000016bc <OSInitHookEnd>:
    16bc:	08 95       	ret

000016be <OSTaskCreateHook>:
    16be:	16 c8       	rjmp	.-4052   	; 0x6ec <App_TaskCreateHook>

000016c0 <OSTaskIdleHook>:
    16c0:	16 c8       	rjmp	.-4052   	; 0x6ee <App_TaskIdleHook>

000016c2 <OSTaskStkInit>:
    16c2:	0f 93       	push	r16
    16c4:	1f 93       	push	r17
    16c6:	8c 01       	movw	r16, r24
    16c8:	22 27       	eor	r18, r18
    16ca:	17 fd       	sbrc	r17, 7
    16cc:	20 95       	com	r18
    16ce:	32 2f       	mov	r19, r18
    16d0:	fa 01       	movw	r30, r20
    16d2:	00 83       	st	Z, r16
    16d4:	31 97       	sbiw	r30, 0x01	; 1
    16d6:	10 83       	st	Z, r17
    16d8:	31 97       	sbiw	r30, 0x01	; 1
    16da:	20 83       	st	Z, r18
    16dc:	31 97       	sbiw	r30, 0x01	; 1
    16de:	10 82       	st	Z, r1
    16e0:	31 97       	sbiw	r30, 0x01	; 1
    16e2:	80 e8       	ldi	r24, 0x80	; 128
    16e4:	80 83       	st	Z, r24
    16e6:	31 97       	sbiw	r30, 0x01	; 1
    16e8:	10 82       	st	Z, r1
    16ea:	31 97       	sbiw	r30, 0x01	; 1
    16ec:	82 e0       	ldi	r24, 0x02	; 2
    16ee:	80 83       	st	Z, r24
    16f0:	31 97       	sbiw	r30, 0x01	; 1
    16f2:	83 e0       	ldi	r24, 0x03	; 3
    16f4:	80 83       	st	Z, r24
    16f6:	31 97       	sbiw	r30, 0x01	; 1
    16f8:	84 e0       	ldi	r24, 0x04	; 4
    16fa:	80 83       	st	Z, r24
    16fc:	31 97       	sbiw	r30, 0x01	; 1
    16fe:	85 e0       	ldi	r24, 0x05	; 5
    1700:	80 83       	st	Z, r24
    1702:	31 97       	sbiw	r30, 0x01	; 1
    1704:	86 e0       	ldi	r24, 0x06	; 6
    1706:	80 83       	st	Z, r24
    1708:	31 97       	sbiw	r30, 0x01	; 1
    170a:	87 e0       	ldi	r24, 0x07	; 7
    170c:	80 83       	st	Z, r24
    170e:	31 97       	sbiw	r30, 0x01	; 1
    1710:	88 e0       	ldi	r24, 0x08	; 8
    1712:	80 83       	st	Z, r24
    1714:	31 97       	sbiw	r30, 0x01	; 1
    1716:	89 e0       	ldi	r24, 0x09	; 9
    1718:	80 83       	st	Z, r24
    171a:	31 97       	sbiw	r30, 0x01	; 1
    171c:	80 e1       	ldi	r24, 0x10	; 16
    171e:	80 83       	st	Z, r24
    1720:	31 97       	sbiw	r30, 0x01	; 1
    1722:	81 e1       	ldi	r24, 0x11	; 17
    1724:	80 83       	st	Z, r24
    1726:	31 97       	sbiw	r30, 0x01	; 1
    1728:	82 e1       	ldi	r24, 0x12	; 18
    172a:	80 83       	st	Z, r24
    172c:	31 97       	sbiw	r30, 0x01	; 1
    172e:	83 e1       	ldi	r24, 0x13	; 19
    1730:	80 83       	st	Z, r24
    1732:	31 97       	sbiw	r30, 0x01	; 1
    1734:	84 e1       	ldi	r24, 0x14	; 20
    1736:	80 83       	st	Z, r24
    1738:	31 97       	sbiw	r30, 0x01	; 1
    173a:	85 e1       	ldi	r24, 0x15	; 21
    173c:	80 83       	st	Z, r24
    173e:	31 97       	sbiw	r30, 0x01	; 1
    1740:	86 e1       	ldi	r24, 0x16	; 22
    1742:	80 83       	st	Z, r24
    1744:	31 97       	sbiw	r30, 0x01	; 1
    1746:	87 e1       	ldi	r24, 0x17	; 23
    1748:	80 83       	st	Z, r24
    174a:	31 97       	sbiw	r30, 0x01	; 1
    174c:	88 e1       	ldi	r24, 0x18	; 24
    174e:	80 83       	st	Z, r24
    1750:	31 97       	sbiw	r30, 0x01	; 1
    1752:	89 e1       	ldi	r24, 0x19	; 25
    1754:	80 83       	st	Z, r24
    1756:	31 97       	sbiw	r30, 0x01	; 1
    1758:	80 e2       	ldi	r24, 0x20	; 32
    175a:	80 83       	st	Z, r24
    175c:	31 97       	sbiw	r30, 0x01	; 1
    175e:	81 e2       	ldi	r24, 0x21	; 33
    1760:	80 83       	st	Z, r24
    1762:	31 97       	sbiw	r30, 0x01	; 1
    1764:	82 e2       	ldi	r24, 0x22	; 34
    1766:	80 83       	st	Z, r24
    1768:	31 97       	sbiw	r30, 0x01	; 1
    176a:	83 e2       	ldi	r24, 0x23	; 35
    176c:	80 83       	st	Z, r24
    176e:	31 97       	sbiw	r30, 0x01	; 1
    1770:	60 83       	st	Z, r22
    1772:	31 97       	sbiw	r30, 0x01	; 1
    1774:	8b 01       	movw	r16, r22
    1776:	10 83       	st	Z, r17
    1778:	31 97       	sbiw	r30, 0x01	; 1
    177a:	86 e2       	ldi	r24, 0x26	; 38
    177c:	80 83       	st	Z, r24
    177e:	31 97       	sbiw	r30, 0x01	; 1
    1780:	87 e2       	ldi	r24, 0x27	; 39
    1782:	80 83       	st	Z, r24
    1784:	31 97       	sbiw	r30, 0x01	; 1
    1786:	88 e2       	ldi	r24, 0x28	; 40
    1788:	80 83       	st	Z, r24
    178a:	31 97       	sbiw	r30, 0x01	; 1
    178c:	89 e2       	ldi	r24, 0x29	; 41
    178e:	80 83       	st	Z, r24
    1790:	31 97       	sbiw	r30, 0x01	; 1
    1792:	80 e3       	ldi	r24, 0x30	; 48
    1794:	80 83       	st	Z, r24
    1796:	31 97       	sbiw	r30, 0x01	; 1
    1798:	81 e3       	ldi	r24, 0x31	; 49
    179a:	80 83       	st	Z, r24
    179c:	31 97       	sbiw	r30, 0x01	; 1
    179e:	10 82       	st	Z, r1
    17a0:	31 97       	sbiw	r30, 0x01	; 1
    17a2:	10 82       	st	Z, r1
    17a4:	31 97       	sbiw	r30, 0x01	; 1
    17a6:	10 82       	st	Z, r1
    17a8:	31 97       	sbiw	r30, 0x01	; 1
    17aa:	10 82       	st	Z, r1
    17ac:	31 97       	sbiw	r30, 0x01	; 1
    17ae:	10 82       	st	Z, r1
    17b0:	ca 01       	movw	r24, r20
    17b2:	89 97       	sbiw	r24, 0x29	; 41
    17b4:	1f 91       	pop	r17
    17b6:	0f 91       	pop	r16
    17b8:	08 95       	ret

000017ba <OSTaskSwHook>:
    17ba:	0c 94 78 03 	jmp	0x6f0	; 0x6f0 <App_TaskSwHook>

000017be <OSTCBInitHook>:
    17be:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <App_TCBInitHook>

000017c2 <OSTimeTickHook>:
    17c2:	0c 94 7e 03 	jmp	0x6fc	; 0x6fc <App_TimeTickHook>

000017c6 <OSDebugInit>:
    17c6:	08 95       	ret

000017c8 <OS_FlagInit>:
    17c8:	63 e2       	ldi	r22, 0x23	; 35
    17ca:	70 e0       	ldi	r23, 0x00	; 0
    17cc:	86 ec       	ldi	r24, 0xC6	; 198
    17ce:	9e e2       	ldi	r25, 0x2E	; 46
    17d0:	60 dd       	rcall	.-1344   	; 0x1292 <OS_MemClr>
    17d2:	e6 ec       	ldi	r30, 0xC6	; 198
    17d4:	fe e2       	ldi	r31, 0x2E	; 46
    17d6:	22 e9       	ldi	r18, 0x92	; 146
    17d8:	32 e2       	ldi	r19, 0x22	; 34
    17da:	cf 01       	movw	r24, r30
    17dc:	07 96       	adiw	r24, 0x07	; 7
    17de:	10 82       	st	Z, r1
    17e0:	81 83       	std	Z+1, r24	; 0x01
    17e2:	92 83       	std	Z+2, r25	; 0x02
    17e4:	25 83       	std	Z+5, r18	; 0x05
    17e6:	36 83       	std	Z+6, r19	; 0x06
    17e8:	4e e2       	ldi	r20, 0x2E	; 46
    17ea:	82 3e       	cpi	r24, 0xE2	; 226
    17ec:	94 07       	cpc	r25, r20
    17ee:	11 f0       	breq	.+4      	; 0x17f4 <OS_FlagInit+0x2c>
    17f0:	fc 01       	movw	r30, r24
    17f2:	f3 cf       	rjmp	.-26     	; 0x17da <OS_FlagInit+0x12>
    17f4:	10 92 e2 2e 	sts	0x2EE2, r1
    17f8:	10 92 e3 2e 	sts	0x2EE3, r1
    17fc:	10 92 e4 2e 	sts	0x2EE4, r1
    1800:	82 e9       	ldi	r24, 0x92	; 146
    1802:	92 e2       	ldi	r25, 0x22	; 34
    1804:	80 93 e7 2e 	sts	0x2EE7, r24
    1808:	90 93 e8 2e 	sts	0x2EE8, r25
    180c:	86 ec       	ldi	r24, 0xC6	; 198
    180e:	9e e2       	ldi	r25, 0x2E	; 46
    1810:	80 93 18 35 	sts	0x3518, r24
    1814:	90 93 19 35 	sts	0x3519, r25
    1818:	08 95       	ret

0000181a <OSSemCreate>:
    181a:	0f 93       	push	r16
    181c:	1f 93       	push	r17
    181e:	cf 93       	push	r28
    1820:	df 93       	push	r29
    1822:	8c 01       	movw	r16, r24
    1824:	80 91 01 2f 	lds	r24, 0x2F01
    1828:	81 11       	cpse	r24, r1
    182a:	20 c0       	rjmp	.+64     	; 0x186c <OSSemCreate+0x52>
    182c:	0e 94 82 02 	call	0x504	; 0x504 <OS_CPU_SR_Save>
    1830:	c0 91 ff 2e 	lds	r28, 0x2EFF
    1834:	d0 91 00 2f 	lds	r29, 0x2F00
    1838:	20 97       	sbiw	r28, 0x00	; 0
    183a:	31 f0       	breq	.+12     	; 0x1848 <OSSemCreate+0x2e>
    183c:	29 81       	ldd	r18, Y+1	; 0x01
    183e:	3a 81       	ldd	r19, Y+2	; 0x02
    1840:	20 93 ff 2e 	sts	0x2EFF, r18
    1844:	30 93 00 2f 	sts	0x2F00, r19
    1848:	0e 94 85 02 	call	0x50a	; 0x50a <OS_CPU_SR_Restore>
    184c:	20 97       	sbiw	r28, 0x00	; 0
    184e:	71 f0       	breq	.+28     	; 0x186c <OSSemCreate+0x52>
    1850:	83 e0       	ldi	r24, 0x03	; 3
    1852:	88 83       	st	Y, r24
    1854:	0b 83       	std	Y+3, r16	; 0x03
    1856:	1c 83       	std	Y+4, r17	; 0x04
    1858:	19 82       	std	Y+1, r1	; 0x01
    185a:	1a 82       	std	Y+2, r1	; 0x02
    185c:	82 e9       	ldi	r24, 0x92	; 146
    185e:	92 e2       	ldi	r25, 0x22	; 34
    1860:	8e 87       	std	Y+14, r24	; 0x0e
    1862:	9f 87       	std	Y+15, r25	; 0x0f
    1864:	ce 01       	movw	r24, r28
    1866:	07 dd       	rcall	.-1522   	; 0x1276 <OS_EventWaitListInit>
    1868:	ce 01       	movw	r24, r28
    186a:	02 c0       	rjmp	.+4      	; 0x1870 <OSSemCreate+0x56>
    186c:	80 e0       	ldi	r24, 0x00	; 0
    186e:	90 e0       	ldi	r25, 0x00	; 0
    1870:	df 91       	pop	r29
    1872:	cf 91       	pop	r28
    1874:	1f 91       	pop	r17
    1876:	0f 91       	pop	r16
    1878:	08 95       	ret

0000187a <OSTaskNameSet>:
    187a:	ff 92       	push	r15
    187c:	0f 93       	push	r16
    187e:	1f 93       	push	r17
    1880:	cf 93       	push	r28
    1882:	df 93       	push	r29
    1884:	f8 2e       	mov	r15, r24
    1886:	8b 01       	movw	r16, r22
    1888:	ea 01       	movw	r28, r20
    188a:	80 91 01 2f 	lds	r24, 0x2F01
    188e:	88 23       	and	r24, r24
    1890:	11 f0       	breq	.+4      	; 0x1896 <OSTaskNameSet+0x1c>
    1892:	82 e1       	ldi	r24, 0x12	; 18
    1894:	1b c0       	rjmp	.+54     	; 0x18cc <OSTaskNameSet+0x52>
    1896:	0e 94 82 02 	call	0x504	; 0x504 <OS_CPU_SR_Save>
    189a:	9f ef       	ldi	r25, 0xFF	; 255
    189c:	f9 12       	cpse	r15, r25
    189e:	05 c0       	rjmp	.+10     	; 0x18aa <OSTaskNameSet+0x30>
    18a0:	e0 91 02 2f 	lds	r30, 0x2F02
    18a4:	f0 91 03 2f 	lds	r31, 0x2F03
    18a8:	f2 a0       	ldd	r15, Z+34	; 0x22
    18aa:	ef 2d       	mov	r30, r15
    18ac:	f0 e0       	ldi	r31, 0x00	; 0
    18ae:	ee 0f       	add	r30, r30
    18b0:	ff 1f       	adc	r31, r31
    18b2:	e6 5e       	subi	r30, 0xE6	; 230
    18b4:	fa 4c       	sbci	r31, 0xCA	; 202
    18b6:	01 90       	ld	r0, Z+
    18b8:	f0 81       	ld	r31, Z
    18ba:	e0 2d       	mov	r30, r0
    18bc:	30 97       	sbiw	r30, 0x00	; 0
    18be:	19 f0       	breq	.+6      	; 0x18c6 <OSTaskNameSet+0x4c>
    18c0:	e1 30       	cpi	r30, 0x01	; 1
    18c2:	f1 05       	cpc	r31, r1
    18c4:	29 f4       	brne	.+10     	; 0x18d0 <OSTaskNameSet+0x56>
    18c6:	0e 94 85 02 	call	0x50a	; 0x50a <OS_CPU_SR_Restore>
    18ca:	83 e4       	ldi	r24, 0x43	; 67
    18cc:	88 83       	st	Y, r24
    18ce:	05 c0       	rjmp	.+10     	; 0x18da <OSTaskNameSet+0x60>
    18d0:	02 af       	std	Z+58, r16	; 0x3a
    18d2:	13 af       	std	Z+59, r17	; 0x3b
    18d4:	0e 94 85 02 	call	0x50a	; 0x50a <OS_CPU_SR_Restore>
    18d8:	18 82       	st	Y, r1
    18da:	df 91       	pop	r29
    18dc:	cf 91       	pop	r28
    18de:	1f 91       	pop	r17
    18e0:	0f 91       	pop	r16
    18e2:	ff 90       	pop	r15
    18e4:	08 95       	ret

000018e6 <OS_TaskStkClr>:
    18e6:	23 70       	andi	r18, 0x03	; 3
    18e8:	33 27       	eor	r19, r19
    18ea:	23 30       	cpi	r18, 0x03	; 3
    18ec:	31 05       	cpc	r19, r1
    18ee:	61 f4       	brne	.+24     	; 0x1908 <OS_TaskStkClr+0x22>
    18f0:	fc 01       	movw	r30, r24
    18f2:	41 15       	cp	r20, r1
    18f4:	51 05       	cpc	r21, r1
    18f6:	61 05       	cpc	r22, r1
    18f8:	71 05       	cpc	r23, r1
    18fa:	31 f0       	breq	.+12     	; 0x1908 <OS_TaskStkClr+0x22>
    18fc:	41 50       	subi	r20, 0x01	; 1
    18fe:	51 09       	sbc	r21, r1
    1900:	61 09       	sbc	r22, r1
    1902:	71 09       	sbc	r23, r1
    1904:	11 92       	st	Z+, r1
    1906:	f5 cf       	rjmp	.-22     	; 0x18f2 <OS_TaskStkClr+0xc>
    1908:	08 95       	ret

0000190a <OSTaskCreateExt>:
    190a:	2f 92       	push	r2
    190c:	3f 92       	push	r3
    190e:	4f 92       	push	r4
    1910:	5f 92       	push	r5
    1912:	6f 92       	push	r6
    1914:	7f 92       	push	r7
    1916:	8f 92       	push	r8
    1918:	9f 92       	push	r9
    191a:	af 92       	push	r10
    191c:	bf 92       	push	r11
    191e:	cf 92       	push	r12
    1920:	df 92       	push	r13
    1922:	ef 92       	push	r14
    1924:	ff 92       	push	r15
    1926:	0f 93       	push	r16
    1928:	1f 93       	push	r17
    192a:	cf 93       	push	r28
    192c:	df 93       	push	r29
    192e:	cd b7       	in	r28, 0x3d	; 61
    1930:	de b7       	in	r29, 0x3e	; 62
    1932:	29 97       	sbiw	r28, 0x09	; 9
    1934:	cd bf       	out	0x3d, r28	; 61
    1936:	de bf       	out	0x3e, r29	; 62
    1938:	8a 83       	std	Y+2, r24	; 0x02
    193a:	9b 83       	std	Y+3, r25	; 0x03
    193c:	6c 83       	std	Y+4, r22	; 0x04
    193e:	7d 83       	std	Y+5, r23	; 0x05
    1940:	4e 83       	std	Y+6, r20	; 0x06
    1942:	5f 83       	std	Y+7, r21	; 0x07
    1944:	29 83       	std	Y+1, r18	; 0x01
    1946:	08 87       	std	Y+8, r16	; 0x08
    1948:	19 87       	std	Y+9, r17	; 0x09
    194a:	37 01       	movw	r6, r14
    194c:	15 01       	movw	r2, r10
    194e:	26 01       	movw	r4, r12
    1950:	64 01       	movw	r12, r8
    1952:	af 8c       	ldd	r10, Y+31	; 0x1f
    1954:	b8 a0       	ldd	r11, Y+32	; 0x20
    1956:	0e 94 82 02 	call	0x504	; 0x504 <OS_CPU_SR_Save>
    195a:	90 91 01 2f 	lds	r25, 0x2F01
    195e:	99 23       	and	r25, r25
    1960:	21 f0       	breq	.+8      	; 0x196a <OSTaskCreateExt+0x60>
    1962:	0e 94 85 02 	call	0x50a	; 0x50a <OS_CPU_SR_Restore>
    1966:	8c e3       	ldi	r24, 0x3C	; 60
    1968:	3f c0       	rjmp	.+126    	; 0x19e8 <OSTaskCreateExt+0xde>
    196a:	29 81       	ldd	r18, Y+1	; 0x01
    196c:	82 2e       	mov	r8, r18
    196e:	91 2c       	mov	r9, r1
    1970:	88 0c       	add	r8, r8
    1972:	99 1c       	adc	r9, r9
    1974:	f4 01       	movw	r30, r8
    1976:	e6 5e       	subi	r30, 0xE6	; 230
    1978:	fa 4c       	sbci	r31, 0xCA	; 202
    197a:	4f 01       	movw	r8, r30
    197c:	20 81       	ld	r18, Z
    197e:	31 81       	ldd	r19, Z+1	; 0x01
    1980:	23 2b       	or	r18, r19
    1982:	69 f5       	brne	.+90     	; 0x19de <OSTaskCreateExt+0xd4>
    1984:	21 e0       	ldi	r18, 0x01	; 1
    1986:	30 e0       	ldi	r19, 0x00	; 0
    1988:	20 83       	st	Z, r18
    198a:	31 83       	std	Z+1, r19	; 0x01
    198c:	0e 94 85 02 	call	0x50a	; 0x50a <OS_CPU_SR_Restore>
    1990:	95 01       	movw	r18, r10
    1992:	b2 01       	movw	r22, r4
    1994:	a1 01       	movw	r20, r2
    1996:	c7 01       	movw	r24, r14
    1998:	a6 df       	rcall	.-180    	; 0x18e6 <OS_TaskStkClr>
    199a:	95 01       	movw	r18, r10
    199c:	4e 81       	ldd	r20, Y+6	; 0x06
    199e:	5f 81       	ldd	r21, Y+7	; 0x07
    19a0:	6c 81       	ldd	r22, Y+4	; 0x04
    19a2:	7d 81       	ldd	r23, Y+5	; 0x05
    19a4:	8a 81       	ldd	r24, Y+2	; 0x02
    19a6:	9b 81       	ldd	r25, Y+3	; 0x03
    19a8:	8c de       	rcall	.-744    	; 0x16c2 <OSTaskStkInit>
    19aa:	82 01       	movw	r16, r4
    19ac:	71 01       	movw	r14, r2
    19ae:	28 85       	ldd	r18, Y+8	; 0x08
    19b0:	39 85       	ldd	r19, Y+9	; 0x09
    19b2:	a3 01       	movw	r20, r6
    19b4:	bc 01       	movw	r22, r24
    19b6:	89 81       	ldd	r24, Y+1	; 0x01
    19b8:	8f dd       	rcall	.-1250   	; 0x14d8 <OS_TCBInit>
    19ba:	d8 2e       	mov	r13, r24
    19bc:	81 11       	cpse	r24, r1
    19be:	06 c0       	rjmp	.+12     	; 0x19cc <OSTaskCreateExt+0xc2>
    19c0:	80 91 c0 2e 	lds	r24, 0x2EC0
    19c4:	81 30       	cpi	r24, 0x01	; 1
    19c6:	79 f4       	brne	.+30     	; 0x19e6 <OSTaskCreateExt+0xdc>
    19c8:	3c dd       	rcall	.-1416   	; 0x1442 <OS_Sched>
    19ca:	0d c0       	rjmp	.+26     	; 0x19e6 <OSTaskCreateExt+0xdc>
    19cc:	0e 94 82 02 	call	0x504	; 0x504 <OS_CPU_SR_Save>
    19d0:	f4 01       	movw	r30, r8
    19d2:	10 82       	st	Z, r1
    19d4:	11 82       	std	Z+1, r1	; 0x01
    19d6:	0e 94 85 02 	call	0x50a	; 0x50a <OS_CPU_SR_Restore>
    19da:	8d 2d       	mov	r24, r13
    19dc:	05 c0       	rjmp	.+10     	; 0x19e8 <OSTaskCreateExt+0xde>
    19de:	0e 94 85 02 	call	0x50a	; 0x50a <OS_CPU_SR_Restore>
    19e2:	88 e2       	ldi	r24, 0x28	; 40
    19e4:	01 c0       	rjmp	.+2      	; 0x19e8 <OSTaskCreateExt+0xde>
    19e6:	80 e0       	ldi	r24, 0x00	; 0
    19e8:	29 96       	adiw	r28, 0x09	; 9
    19ea:	cd bf       	out	0x3d, r28	; 61
    19ec:	de bf       	out	0x3e, r29	; 62
    19ee:	df 91       	pop	r29
    19f0:	cf 91       	pop	r28
    19f2:	1f 91       	pop	r17
    19f4:	0f 91       	pop	r16
    19f6:	ff 90       	pop	r15
    19f8:	ef 90       	pop	r14
    19fa:	df 90       	pop	r13
    19fc:	cf 90       	pop	r12
    19fe:	bf 90       	pop	r11
    1a00:	af 90       	pop	r10
    1a02:	9f 90       	pop	r9
    1a04:	8f 90       	pop	r8
    1a06:	7f 90       	pop	r7
    1a08:	6f 90       	pop	r6
    1a0a:	5f 90       	pop	r5
    1a0c:	4f 90       	pop	r4
    1a0e:	3f 90       	pop	r3
    1a10:	2f 90       	pop	r2
    1a12:	08 95       	ret

00001a14 <OSTimeDly>:
    1a14:	cf 92       	push	r12
    1a16:	df 92       	push	r13
    1a18:	ef 92       	push	r14
    1a1a:	ff 92       	push	r15
    1a1c:	6b 01       	movw	r12, r22
    1a1e:	7c 01       	movw	r14, r24
    1a20:	80 91 01 2f 	lds	r24, 0x2F01
    1a24:	81 11       	cpse	r24, r1
    1a26:	2c c0       	rjmp	.+88     	; 0x1a80 <OSTimeDly+0x6c>
    1a28:	80 91 bf 2e 	lds	r24, 0x2EBF
    1a2c:	81 11       	cpse	r24, r1
    1a2e:	28 c0       	rjmp	.+80     	; 0x1a80 <OSTimeDly+0x6c>
    1a30:	c1 14       	cp	r12, r1
    1a32:	d1 04       	cpc	r13, r1
    1a34:	e1 04       	cpc	r14, r1
    1a36:	f1 04       	cpc	r15, r1
    1a38:	19 f1       	breq	.+70     	; 0x1a80 <OSTimeDly+0x6c>
    1a3a:	0e 94 82 02 	call	0x504	; 0x504 <OS_CPU_SR_Save>
    1a3e:	e0 91 02 2f 	lds	r30, 0x2F02
    1a42:	f0 91 03 2f 	lds	r31, 0x2F03
    1a46:	a4 a1       	ldd	r26, Z+36	; 0x24
    1a48:	b0 e0       	ldi	r27, 0x00	; 0
    1a4a:	a9 50       	subi	r26, 0x09	; 9
    1a4c:	b1 4d       	sbci	r27, 0xD1	; 209
    1a4e:	95 a1       	ldd	r25, Z+37	; 0x25
    1a50:	90 95       	com	r25
    1a52:	2c 91       	ld	r18, X
    1a54:	92 23       	and	r25, r18
    1a56:	9c 93       	st	X, r25
    1a58:	91 11       	cpse	r25, r1
    1a5a:	07 c0       	rjmp	.+14     	; 0x1a6a <OSTimeDly+0x56>
    1a5c:	26 a1       	ldd	r18, Z+38	; 0x26
    1a5e:	20 95       	com	r18
    1a60:	90 91 f6 2e 	lds	r25, 0x2EF6
    1a64:	92 23       	and	r25, r18
    1a66:	90 93 f6 2e 	sts	0x2EF6, r25
    1a6a:	c4 8e       	std	Z+28, r12	; 0x1c
    1a6c:	d5 8e       	std	Z+29, r13	; 0x1d
    1a6e:	e6 8e       	std	Z+30, r14	; 0x1e
    1a70:	f7 8e       	std	Z+31, r15	; 0x1f
    1a72:	0e 94 85 02 	call	0x50a	; 0x50a <OS_CPU_SR_Restore>
    1a76:	ff 90       	pop	r15
    1a78:	ef 90       	pop	r14
    1a7a:	df 90       	pop	r13
    1a7c:	cf 90       	pop	r12
    1a7e:	e1 cc       	rjmp	.-1598   	; 0x1442 <OS_Sched>
    1a80:	ff 90       	pop	r15
    1a82:	ef 90       	pop	r14
    1a84:	df 90       	pop	r13
    1a86:	cf 90       	pop	r12
    1a88:	08 95       	ret

00001a8a <OSTimeDlyHMSM>:
    1a8a:	cf 92       	push	r12
    1a8c:	df 92       	push	r13
    1a8e:	ef 92       	push	r14
    1a90:	ff 92       	push	r15
    1a92:	58 2f       	mov	r21, r24
    1a94:	f9 01       	movw	r30, r18
    1a96:	80 91 01 2f 	lds	r24, 0x2F01
    1a9a:	81 11       	cpse	r24, r1
    1a9c:	2f c0       	rjmp	.+94     	; 0x1afc <OSTimeDlyHMSM+0x72>
    1a9e:	80 91 bf 2e 	lds	r24, 0x2EBF
    1aa2:	81 11       	cpse	r24, r1
    1aa4:	2d c0       	rjmp	.+90     	; 0x1b00 <OSTimeDlyHMSM+0x76>
    1aa6:	26 2f       	mov	r18, r22
    1aa8:	30 e0       	ldi	r19, 0x00	; 0
    1aaa:	ac e3       	ldi	r26, 0x3C	; 60
    1aac:	b0 e0       	ldi	r27, 0x00	; 0
    1aae:	a9 d0       	rcall	.+338    	; 0x1c02 <__umulhisi3>
    1ab0:	6b 01       	movw	r12, r22
    1ab2:	7c 01       	movw	r14, r24
    1ab4:	c4 0e       	add	r12, r20
    1ab6:	d1 1c       	adc	r13, r1
    1ab8:	e1 1c       	adc	r14, r1
    1aba:	f1 1c       	adc	r15, r1
    1abc:	25 2f       	mov	r18, r21
    1abe:	30 e0       	ldi	r19, 0x00	; 0
    1ac0:	a0 e1       	ldi	r26, 0x10	; 16
    1ac2:	be e0       	ldi	r27, 0x0E	; 14
    1ac4:	9e d0       	rcall	.+316    	; 0x1c02 <__umulhisi3>
    1ac6:	c6 0e       	add	r12, r22
    1ac8:	d7 1e       	adc	r13, r23
    1aca:	e8 1e       	adc	r14, r24
    1acc:	f9 1e       	adc	r15, r25
    1ace:	a8 ee       	ldi	r26, 0xE8	; 232
    1ad0:	b3 e0       	ldi	r27, 0x03	; 3
    1ad2:	a7 01       	movw	r20, r14
    1ad4:	96 01       	movw	r18, r12
    1ad6:	a4 d0       	rcall	.+328    	; 0x1c20 <__muluhisi3>
    1ad8:	6b 01       	movw	r12, r22
    1ada:	7c 01       	movw	r14, r24
    1adc:	9f 01       	movw	r18, r30
    1ade:	91 d0       	rcall	.+290    	; 0x1c02 <__umulhisi3>
    1ae0:	28 ee       	ldi	r18, 0xE8	; 232
    1ae2:	33 e0       	ldi	r19, 0x03	; 3
    1ae4:	40 e0       	ldi	r20, 0x00	; 0
    1ae6:	50 e0       	ldi	r21, 0x00	; 0
    1ae8:	6a d0       	rcall	.+212    	; 0x1bbe <__udivmodsi4>
    1aea:	c2 0e       	add	r12, r18
    1aec:	d3 1e       	adc	r13, r19
    1aee:	e4 1e       	adc	r14, r20
    1af0:	f5 1e       	adc	r15, r21
    1af2:	c7 01       	movw	r24, r14
    1af4:	b6 01       	movw	r22, r12
    1af6:	8e df       	rcall	.-228    	; 0x1a14 <OSTimeDly>
    1af8:	80 e0       	ldi	r24, 0x00	; 0
    1afa:	03 c0       	rjmp	.+6      	; 0x1b02 <OSTimeDlyHMSM+0x78>
    1afc:	85 e5       	ldi	r24, 0x55	; 85
    1afe:	01 c0       	rjmp	.+2      	; 0x1b02 <OSTimeDlyHMSM+0x78>
    1b00:	82 e3       	ldi	r24, 0x32	; 50
    1b02:	ff 90       	pop	r15
    1b04:	ef 90       	pop	r14
    1b06:	df 90       	pop	r13
    1b08:	cf 90       	pop	r12
    1b0a:	08 95       	ret

00001b0c <port_init_direction>:

	
}

void port_init_value(void)
{
    1b0c:	8c ef       	ldi	r24, 0xFC	; 252
    1b0e:	80 93 00 06 	sts	0x0600, r24
    1b12:	80 e8       	ldi	r24, 0x80	; 128
    1b14:	80 93 20 06 	sts	0x0620, r24
    1b18:	80 93 40 06 	sts	0x0640, r24
    1b1c:	92 e0       	ldi	r25, 0x02	; 2
    1b1e:	90 93 60 06 	sts	0x0660, r25
    1b22:	a0 e8       	ldi	r26, 0x80	; 128
    1b24:	b6 e0       	ldi	r27, 0x06	; 6
    1b26:	92 e2       	ldi	r25, 0x22	; 34
    1b28:	9c 93       	st	X, r25
    1b2a:	e0 ea       	ldi	r30, 0xA0	; 160
    1b2c:	f6 e0       	ldi	r31, 0x06	; 6
    1b2e:	92 e4       	ldi	r25, 0x42	; 66
    1b30:	90 83       	st	Z, r25
    1b32:	10 92 e0 06 	sts	0x06E0, r1
    1b36:	10 92 00 07 	sts	0x0700, r1
    1b3a:	80 93 20 07 	sts	0x0720, r24
    1b3e:	8f e0       	ldi	r24, 0x0F	; 15
    1b40:	80 93 c0 07 	sts	0x07C0, r24
    1b44:	88 e1       	ldi	r24, 0x18	; 24
    1b46:	52 96       	adiw	r26, 0x12	; 18
    1b48:	8c 93       	st	X, r24
    1b4a:	85 8b       	std	Z+21, r24	; 0x15
    1b4c:	86 8b       	std	Z+22, r24	; 0x16
    1b4e:	08 95       	ret

00001b50 <port_init>:
	#endif
}

void port_init(void)
{	
	port_init_direction();
    1b50:	dd cf       	rjmp	.-70     	; 0x1b0c <port_init_direction>

00001b52 <spi_init>:
	// -set to mast mode
	// -SPI clk = 32MHz/4=8MHz
	// -mode set to 0
		
	//SPIC.CTRL = SPI_PRESCALER_DIV16_gc |  SPI_ENABLE_bm | SPI_MASTER_bm | SPI_MODE_0_gc;// | SPI_CLK2X_bm
	SPIF_CTRL |= (1<<SPIF_BIT_ENABLE);
    1b52:	e0 ec       	ldi	r30, 0xC0	; 192
    1b54:	fb e0       	ldi	r31, 0x0B	; 11
    1b56:	80 81       	ld	r24, Z
    1b58:	80 64       	ori	r24, 0x40	; 64
    1b5a:	80 83       	st	Z, r24
	//SPIE_CTRL |= (1<<SPIE_BIT_ENABLE) | (1<<SPIE_BIT_MASTER);
	SPIF_INTCTRL = 0x00;
    1b5c:	10 92 c1 0b 	sts	0x0BC1, r1
    1b60:	08 95       	ret

00001b62 <TWI_I2CMasterStart>:
    1b62:	e0 e4       	ldi	r30, 0x40	; 64
    1b64:	f6 e0       	ldi	r31, 0x06	; 6
    1b66:	88 e3       	ldi	r24, 0x38	; 56
    1b68:	80 8b       	std	Z+16, r24	; 0x10
    1b6a:	81 8b       	std	Z+17, r24	; 0x11
    1b6c:	80 e9       	ldi	r24, 0x90	; 144
    1b6e:	80 93 85 04 	sts	0x0485, r24
    1b72:	e1 e8       	ldi	r30, 0x81	; 129
    1b74:	f4 e0       	ldi	r31, 0x04	; 4
    1b76:	80 81       	ld	r24, Z
    1b78:	88 60       	ori	r24, 0x08	; 8
    1b7a:	80 83       	st	Z, r24
    1b7c:	e4 e8       	ldi	r30, 0x84	; 132
    1b7e:	f4 e0       	ldi	r31, 0x04	; 4
    1b80:	80 81       	ld	r24, Z
    1b82:	81 60       	ori	r24, 0x01	; 1
    1b84:	80 83       	st	Z, r24
    1b86:	08 95       	ret

00001b88 <TWI_I2CWrite>:
    1b88:	80 93 86 04 	sts	0x0486, r24
    1b8c:	80 91 84 04 	lds	r24, 0x0484
    1b90:	86 ff       	sbrs	r24, 6
    1b92:	fc cf       	rjmp	.-8      	; 0x1b8c <TWI_I2CWrite+0x4>
    1b94:	fb 01       	movw	r30, r22
    1b96:	46 0f       	add	r20, r22
    1b98:	57 1f       	adc	r21, r23
    1b9a:	e4 17       	cp	r30, r20
    1b9c:	f5 07       	cpc	r31, r21
    1b9e:	41 f0       	breq	.+16     	; 0x1bb0 <TWI_I2CWrite+0x28>
    1ba0:	81 91       	ld	r24, Z+
    1ba2:	80 93 87 04 	sts	0x0487, r24
    1ba6:	80 91 84 04 	lds	r24, 0x0484
    1baa:	86 ff       	sbrs	r24, 6
    1bac:	fc cf       	rjmp	.-8      	; 0x1ba6 <TWI_I2CWrite+0x1e>
    1bae:	f5 cf       	rjmp	.-22     	; 0x1b9a <TWI_I2CWrite+0x12>
    1bb0:	21 11       	cpse	r18, r1
    1bb2:	03 c0       	rjmp	.+6      	; 0x1bba <TWI_I2CWrite+0x32>
    1bb4:	83 e0       	ldi	r24, 0x03	; 3
    1bb6:	80 93 83 04 	sts	0x0483, r24
    1bba:	80 e0       	ldi	r24, 0x00	; 0
    1bbc:	08 95       	ret

00001bbe <__udivmodsi4>:
    1bbe:	a1 e2       	ldi	r26, 0x21	; 33
    1bc0:	1a 2e       	mov	r1, r26
    1bc2:	aa 1b       	sub	r26, r26
    1bc4:	bb 1b       	sub	r27, r27
    1bc6:	fd 01       	movw	r30, r26
    1bc8:	0d c0       	rjmp	.+26     	; 0x1be4 <__udivmodsi4_ep>

00001bca <__udivmodsi4_loop>:
    1bca:	aa 1f       	adc	r26, r26
    1bcc:	bb 1f       	adc	r27, r27
    1bce:	ee 1f       	adc	r30, r30
    1bd0:	ff 1f       	adc	r31, r31
    1bd2:	a2 17       	cp	r26, r18
    1bd4:	b3 07       	cpc	r27, r19
    1bd6:	e4 07       	cpc	r30, r20
    1bd8:	f5 07       	cpc	r31, r21
    1bda:	20 f0       	brcs	.+8      	; 0x1be4 <__udivmodsi4_ep>
    1bdc:	a2 1b       	sub	r26, r18
    1bde:	b3 0b       	sbc	r27, r19
    1be0:	e4 0b       	sbc	r30, r20
    1be2:	f5 0b       	sbc	r31, r21

00001be4 <__udivmodsi4_ep>:
    1be4:	66 1f       	adc	r22, r22
    1be6:	77 1f       	adc	r23, r23
    1be8:	88 1f       	adc	r24, r24
    1bea:	99 1f       	adc	r25, r25
    1bec:	1a 94       	dec	r1
    1bee:	69 f7       	brne	.-38     	; 0x1bca <__udivmodsi4_loop>
    1bf0:	60 95       	com	r22
    1bf2:	70 95       	com	r23
    1bf4:	80 95       	com	r24
    1bf6:	90 95       	com	r25
    1bf8:	9b 01       	movw	r18, r22
    1bfa:	ac 01       	movw	r20, r24
    1bfc:	bd 01       	movw	r22, r26
    1bfe:	cf 01       	movw	r24, r30
    1c00:	08 95       	ret

00001c02 <__umulhisi3>:
    1c02:	a2 9f       	mul	r26, r18
    1c04:	b0 01       	movw	r22, r0
    1c06:	b3 9f       	mul	r27, r19
    1c08:	c0 01       	movw	r24, r0
    1c0a:	a3 9f       	mul	r26, r19
    1c0c:	70 0d       	add	r23, r0
    1c0e:	81 1d       	adc	r24, r1
    1c10:	11 24       	eor	r1, r1
    1c12:	91 1d       	adc	r25, r1
    1c14:	b2 9f       	mul	r27, r18
    1c16:	70 0d       	add	r23, r0
    1c18:	81 1d       	adc	r24, r1
    1c1a:	11 24       	eor	r1, r1
    1c1c:	91 1d       	adc	r25, r1
    1c1e:	08 95       	ret

00001c20 <__muluhisi3>:
    1c20:	f0 df       	rcall	.-32     	; 0x1c02 <__umulhisi3>
    1c22:	a5 9f       	mul	r26, r21
    1c24:	90 0d       	add	r25, r0
    1c26:	b4 9f       	mul	r27, r20
    1c28:	90 0d       	add	r25, r0
    1c2a:	a4 9f       	mul	r26, r20
    1c2c:	80 0d       	add	r24, r0
    1c2e:	91 1d       	adc	r25, r1
    1c30:	11 24       	eor	r1, r1
    1c32:	08 95       	ret

00001c34 <__eerd_block_x128a1>:
    1c34:	e0 ec       	ldi	r30, 0xC0	; 192
    1c36:	f1 e0       	ldi	r31, 0x01	; 1
    1c38:	a7 85       	ldd	r26, Z+15	; 0x0f
    1c3a:	a7 fd       	sbrc	r26, 7
    1c3c:	fd cf       	rjmp	.-6      	; 0x1c38 <__eerd_block_x128a1+0x4>
    1c3e:	a4 85       	ldd	r26, Z+12	; 0x0c
    1c40:	a8 60       	ori	r26, 0x08	; 8
    1c42:	a4 87       	std	Z+12, r26	; 0x0c
    1c44:	60 50       	subi	r22, 0x00	; 0
    1c46:	70 4f       	sbci	r23, 0xF0	; 240
    1c48:	4b c0       	rjmp	.+150    	; 0x1ce0 <memcpy>

00001c4a <__eerd_byte_x128a1>:
    1c4a:	03 d0       	rcall	.+6      	; 0x1c52 <eeprom_mapen>
    1c4c:	80 81       	ld	r24, Z
    1c4e:	99 27       	eor	r25, r25
    1c50:	08 95       	ret

00001c52 <eeprom_mapen>:
    1c52:	e0 ec       	ldi	r30, 0xC0	; 192
    1c54:	f1 e0       	ldi	r31, 0x01	; 1
    1c56:	37 85       	ldd	r19, Z+15	; 0x0f
    1c58:	37 fd       	sbrc	r19, 7
    1c5a:	fd cf       	rjmp	.-6      	; 0x1c56 <eeprom_mapen+0x4>
    1c5c:	34 85       	ldd	r19, Z+12	; 0x0c
    1c5e:	38 60       	ori	r19, 0x08	; 8
    1c60:	34 87       	std	Z+12, r19	; 0x0c
    1c62:	fc 01       	movw	r30, r24
    1c64:	e0 50       	subi	r30, 0x00	; 0
    1c66:	f0 4f       	sbci	r31, 0xF0	; 240
    1c68:	08 95       	ret

00001c6a <__eeupd_block_x128a1>:
    1c6a:	dc 01       	movw	r26, r24
    1c6c:	a4 0f       	add	r26, r20
    1c6e:	b5 1f       	adc	r27, r21
    1c70:	41 50       	subi	r20, 0x01	; 1
    1c72:	50 40       	sbci	r21, 0x00	; 0
    1c74:	40 f0       	brcs	.+16     	; 0x1c86 <__eeupd_block_x128a1+0x1c>
    1c76:	cb 01       	movw	r24, r22
    1c78:	84 0f       	add	r24, r20
    1c7a:	95 1f       	adc	r25, r21
    1c7c:	2e 91       	ld	r18, -X
    1c7e:	05 d0       	rcall	.+10     	; 0x1c8a <__eeupd_r18_x128a1>
    1c80:	41 50       	subi	r20, 0x01	; 1
    1c82:	50 40       	sbci	r21, 0x00	; 0
    1c84:	d8 f7       	brcc	.-10     	; 0x1c7c <__eeupd_block_x128a1+0x12>
    1c86:	08 95       	ret

00001c88 <__eeupd_byte_x128a1>:
    1c88:	26 2f       	mov	r18, r22

00001c8a <__eeupd_r18_x128a1>:
    1c8a:	e3 df       	rcall	.-58     	; 0x1c52 <eeprom_mapen>
    1c8c:	00 80       	ld	r0, Z
    1c8e:	02 16       	cp	r0, r18
    1c90:	11 f0       	breq	.+4      	; 0x1c96 <__eeupd_r18_x128a1+0xc>
    1c92:	04 d0       	rcall	.+8      	; 0x1c9c <__eewr_r18_x128a1>
    1c94:	01 97       	sbiw	r24, 0x01	; 1
    1c96:	01 97       	sbiw	r24, 0x01	; 1
    1c98:	08 95       	ret

00001c9a <__eewr_byte_x128a1>:
    1c9a:	26 2f       	mov	r18, r22

00001c9c <__eewr_r18_x128a1>:
    1c9c:	e0 ec       	ldi	r30, 0xC0	; 192
    1c9e:	f1 e0       	ldi	r31, 0x01	; 1
    1ca0:	37 85       	ldd	r19, Z+15	; 0x0f
    1ca2:	37 fd       	sbrc	r19, 7
    1ca4:	fd cf       	rjmp	.-6      	; 0x1ca0 <__eewr_r18_x128a1+0x4>
    1ca6:	34 85       	ldd	r19, Z+12	; 0x0c
    1ca8:	37 7f       	andi	r19, 0xF7	; 247
    1caa:	34 87       	std	Z+12, r19	; 0x0c
    1cac:	37 85       	ldd	r19, Z+15	; 0x0f
    1cae:	31 ff       	sbrs	r19, 1
    1cb0:	09 c0       	rjmp	.+18     	; 0x1cc4 <__eewr_r18_x128a1+0x28>
    1cb2:	36 e3       	ldi	r19, 0x36	; 54
    1cb4:	32 87       	std	Z+10, r19	; 0x0a
    1cb6:	38 ed       	ldi	r19, 0xD8	; 216
    1cb8:	34 bf       	out	0x34, r19	; 52
    1cba:	31 e0       	ldi	r19, 0x01	; 1
    1cbc:	33 87       	std	Z+11, r19	; 0x0b
    1cbe:	37 85       	ldd	r19, Z+15	; 0x0f
    1cc0:	37 fd       	sbrc	r19, 7
    1cc2:	fd cf       	rjmp	.-6      	; 0x1cbe <__eewr_r18_x128a1+0x22>
    1cc4:	33 e3       	ldi	r19, 0x33	; 51
    1cc6:	32 87       	std	Z+10, r19	; 0x0a
    1cc8:	80 83       	st	Z, r24
    1cca:	91 83       	std	Z+1, r25	; 0x01
    1ccc:	12 82       	std	Z+2, r1	; 0x02
    1cce:	24 83       	std	Z+4, r18	; 0x04
    1cd0:	25 e3       	ldi	r18, 0x35	; 53
    1cd2:	22 87       	std	Z+10, r18	; 0x0a
    1cd4:	28 ed       	ldi	r18, 0xD8	; 216
    1cd6:	31 e0       	ldi	r19, 0x01	; 1
    1cd8:	24 bf       	out	0x34, r18	; 52
    1cda:	33 87       	std	Z+11, r19	; 0x0b
    1cdc:	01 96       	adiw	r24, 0x01	; 1
    1cde:	08 95       	ret

00001ce0 <memcpy>:
    1ce0:	fb 01       	movw	r30, r22
    1ce2:	dc 01       	movw	r26, r24
    1ce4:	02 c0       	rjmp	.+4      	; 0x1cea <memcpy+0xa>
    1ce6:	01 90       	ld	r0, Z+
    1ce8:	0d 92       	st	X+, r0
    1cea:	41 50       	subi	r20, 0x01	; 1
    1cec:	50 40       	sbci	r21, 0x00	; 0
    1cee:	d8 f7       	brcc	.-10     	; 0x1ce6 <memcpy+0x6>
    1cf0:	08 95       	ret

00001cf2 <_exit>:
    1cf2:	f8 94       	cli

00001cf4 <__stop_program>:
    1cf4:	ff cf       	rjmp	.-2      	; 0x1cf4 <__stop_program>
